

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jun 10 22:54:32 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           ; Version 2.05
    37                           ; Generated 20/12/2018 GMT
    38                           ; 
    39                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F26K80 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  000D80                     __pidataCOMRAM:
    73                           	opt callstack 0
    74                           
    75                           ;initializer for L6470_Stop@F12229
    76  000D80  B0                 	db	176
    77  000D81  B8                 	db	184
    78  000D82  A0                 	db	160
    79  000D83  A8                 	db	168
    80                           
    81                           ;initializer for _servo_Angle
    82  000D84  003C               	dw	60
    83  000D86  0078               	dw	120
    84                           
    85                           	psect	nvCOMRAM
    86  000054                     __pnvCOMRAM:
    87                           	opt callstack 0
    88  000054                     _T1time:
    89                           	opt callstack 0
    90  000054                     	ds	2
    91  0000                     _BRGCON3	set	3653
    92  0000                     _BRGCON2	set	3652
    93  0000                     _BRGCON1	set	3651
    94  0000                     _RXF5SIDL	set	3829
    95  0000                     _RXF5SIDH	set	3828
    96  0000                     _RXF5EIDL	set	3831
    97  0000                     _RXF5EIDH	set	3830
    98  0000                     _RXF4SIDL	set	3825
    99  0000                     _RXF4SIDH	set	3824
   100  0000                     _RXF4EIDL	set	3827
   101  0000                     _RXF4EIDH	set	3826
   102  0000                     _RXF3SIDL	set	3821
   103  0000                     _RXF3SIDH	set	3820
   104  0000                     _RXF3EIDL	set	3823
   105  0000                     _RXF3EIDH	set	3822
   106  0000                     _RXF2SIDL	set	3817
   107  0000                     _RXF2SIDH	set	3816
   108  0000                     _RXF2EIDL	set	3819
   109  0000                     _RXF2EIDH	set	3818
   110  0000                     _RXF1SIDL	set	3813
   111  0000                     _RXF1SIDH	set	3812
   112  0000                     _RXF1EIDL	set	3815
   113  0000                     _RXF1EIDH	set	3814
   114  0000                     _RXF0SIDL	set	3809
   115  0000                     _RXF0SIDH	set	3808
   116  0000                     _RXF0EIDL	set	3811
   117  0000                     _RXF0EIDH	set	3810
   118  0000                     _RXM1SIDL	set	3837
   119  0000                     _RXM1SIDH	set	3836
   120  0000                     _RXM1EIDL	set	3839
   121  0000                     _RXM1EIDH	set	3838
   122  0000                     _RXM0SIDL	set	3833
   123  0000                     _RXM0SIDH	set	3832
   124  0000                     _RXM0EIDL	set	3835
   125  0000                     _RXM0EIDH	set	3834
   126  0000                     _ANCON1	set	3932
   127  0000                     _ANCON0	set	3933
   128  0000                     _WPUB	set	3931
   129  0000                     _RXB1D7	set	3901
   130  0000                     _RXB1D6	set	3900
   131  0000                     _RXB1D5	set	3899
   132  0000                     _RXB1D4	set	3898
   133  0000                     _RXB1D3	set	3897
   134  0000                     _RXB1D2	set	3896
   135  0000                     _RXB1D1	set	3895
   136  0000                     _RXB1D0	set	3894
   137  0000                     _RXB1DLC	set	3893
   138  0000                     _RXB1SIDH	set	3889
   139  0000                     _RXB1EIDL	set	3892
   140  0000                     _RXB1EIDH	set	3891
   141  0000                     _RXB1SIDL	set	3890
   142  0000                     _RXB1CONbits	set	3888
   143  0000                     _TXB2D7	set	3853
   144  0000                     _TXB2D6	set	3852
   145  0000                     _TXB2D5	set	3851
   146  0000                     _TXB2D4	set	3850
   147  0000                     _TXB2D3	set	3849
   148  0000                     _TXB2D2	set	3848
   149  0000                     _TXB2D1	set	3847
   150  0000                     _TXB2D0	set	3846
   151  0000                     _TXB2DLC	set	3845
   152  0000                     _TXB2SIDL	set	3842
   153  0000                     _TXB2SIDH	set	3841
   154  0000                     _TXB2EIDL	set	3844
   155  0000                     _TXB2EIDH	set	3843
   156  0000                     _TXB2CONbits	set	3840
   157  0000                     _TXB1D7	set	3869
   158  0000                     _TXB1D6	set	3868
   159  0000                     _TXB1D5	set	3867
   160  0000                     _TXB1D4	set	3866
   161  0000                     _TXB1D3	set	3865
   162  0000                     _TXB1D2	set	3864
   163  0000                     _TXB1D1	set	3863
   164  0000                     _TXB1D0	set	3862
   165  0000                     _TXB1DLC	set	3861
   166  0000                     _TXB1SIDL	set	3858
   167  0000                     _TXB1SIDH	set	3857
   168  0000                     _TXB1EIDL	set	3860
   169  0000                     _TXB1EIDH	set	3859
   170  0000                     _TXB1CONbits	set	3856
   171  0000                     _TXB0D7	set	3885
   172  0000                     _TXB0D6	set	3884
   173  0000                     _TXB0D5	set	3883
   174  0000                     _TXB0D4	set	3882
   175  0000                     _TXB0D3	set	3881
   176  0000                     _TXB0D2	set	3880
   177  0000                     _TXB0D1	set	3879
   178  0000                     _TXB0D0	set	3878
   179  0000                     _TXB0DLC	set	3877
   180  0000                     _TXB0SIDL	set	3874
   181  0000                     _TXB0SIDH	set	3873
   182  0000                     _TXB0EIDL	set	3876
   183  0000                     _TXB0EIDH	set	3875
   184  0000                     _TXB0CONbits	set	3872
   185  0000                     _TMR1L	set	4046
   186  0000                     _TMR1H	set	4047
   187  0000                     _TMR3L	set	4018
   188  0000                     _TMR3H	set	4019
   189  0000                     _SSPADD	set	4040
   190  0000                     _SSPSTAT	set	4039
   191  0000                     _SSPCON1	set	4038
   192  0000                     _SSPSTATbits	set	4039
   193  0000                     _SSPBUF	set	4041
   194  0000                     _PORTBbits	set	3969
   195  0000                     _PORTCbits	set	3970
   196  0000                     _T3CONbits	set	4017
   197  0000                     _T1CONbits	set	4045
   198  0000                     _INTCONbits	set	4082
   199  0000                     _PIE2bits	set	4000
   200  0000                     _PIR2bits	set	4001
   201  0000                     _PIE1bits	set	3997
   202  0000                     _PIR1bits	set	3998
   203  0000                     _T3CON	set	4017
   204  0000                     _T1CON	set	4045
   205  0000                     _PORTC	set	3970
   206  0000                     _PORTB	set	3969
   207  0000                     _PORTA	set	3968
   208  0000                     _TRISC	set	3988
   209  0000                     _TRISB	set	3987
   210  0000                     _TRISA	set	3986
   211  0000                     _INTCON2bits	set	4081
   212  0000                     _OSCCON	set	4051
   213  0000                     _COMSTATbits	set	3953
   214  0000                     _RXB0D7	set	3949
   215  0000                     _RXB0D6	set	3948
   216  0000                     _RXB0D5	set	3947
   217  0000                     _RXB0D4	set	3946
   218  0000                     _RXB0D3	set	3945
   219  0000                     _RXB0D2	set	3944
   220  0000                     _RXB0D1	set	3943
   221  0000                     _RXB0D0	set	3942
   222  0000                     _RXB0DLC	set	3941
   223  0000                     _RXB0SIDH	set	3937
   224  0000                     _RXB0EIDL	set	3940
   225  0000                     _RXB0EIDH	set	3939
   226  0000                     _RXB0SIDL	set	3938
   227  0000                     _RXB0CONbits	set	3936
   228  0000                     _PIE5bits	set	3958
   229  0000                     _PIR5bits	set	3959
   230  0000                     _CIOCON	set	3952
   231  0000                     _ECANCON	set	3954
   232  0000                     _CANSTAT	set	3950
   233  0000                     _CANCON	set	3951
   234                           
   235                           ; #config settings
   236  0000                     
   237                           	psect	cinit
   238  000C76                     __pcinit:
   239                           	opt callstack 0
   240  000C76                     start_initialization:
   241                           	opt callstack 0
   242  000C76                     __initialization:
   243                           	opt callstack 0
   244                           
   245                           ; Initialize objects allocated to COMRAM (8 bytes)
   246                           ; load TBLPTR registers with __pidataCOMRAM
   247  000C76  0E80               	movlw	low __pidataCOMRAM
   248  000C78  6EF6               	movwf	tblptrl,c
   249  000C7A  0E0D               	movlw	high __pidataCOMRAM
   250  000C7C  6EF7               	movwf	tblptrh,c
   251  000C7E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   252  000C80  6EF8               	movwf	tblptru,c
   253  000C82  EE00  F04C         	lfsr	0,__pdataCOMRAM
   254  000C86  EE10 F008          	lfsr	1,8
   255  000C8A                     copy_data0:
   256  000C8A  0009               	tblrd		*+
   257  000C8C  CFF5 FFEE          	movff	tablat,postinc0
   258  000C90  50E5               	movf	postdec1,w,c
   259  000C92  50E1               	movf	fsr1l,w,c
   260  000C94  E1FA               	bnz	copy_data0
   261                           
   262                           ; Clear objects allocated to COMRAM (25 bytes)
   263  000C96  EE00  F033         	lfsr	0,__pbssCOMRAM
   264  000C9A  0E19               	movlw	25
   265  000C9C                     clear_0:
   266  000C9C  6AEE               	clrf	postinc0,c
   267  000C9E  06E8               	decf	wreg,f,c
   268  000CA0  E1FD               	bnz	clear_0
   269  000CA2                     end_of_initialization:
   270                           	opt callstack 0
   271  000CA2                     __end_of__initialization:
   272                           	opt callstack 0
   273  000CA2  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   274  000CA4  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   275  000CA6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   276  000CA8  6EF8               	movwf	tblptru,c
   277  000CAA  0100               	movlb	0
   278  000CAC  EFC4  F002         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssCOMRAM
   281  000033                     __pbssCOMRAM:
   282                           	opt callstack 0
   283  000033                     _Busy:
   284                           	opt callstack 0
   285  000033                     	ds	2
   286  000035                     _servo_Flag:
   287                           	opt callstack 0
   288  000035                     	ds	1
   289  000036                     _rxMessage:
   290                           	opt callstack 0
   291  000036                     	ds	14
   292  000044                     _data:
   293                           	opt callstack 0
   294  000044                     	ds	8
   295                           
   296                           	psect	dataCOMRAM
   297  00004C                     __pdataCOMRAM:
   298                           	opt callstack 0
   299  00004C                     L6470_Stop@F12229:
   300                           	opt callstack 0
   301  00004C                     	ds	4
   302  000050                     _servo_Angle:
   303                           	opt callstack 0
   304  000050                     	ds	4
   305                           
   306                           	psect	cstackCOMRAM
   307  000001                     __pcstackCOMRAM:
   308                           	opt callstack 0
   309  000001                     ??_ECAN_Initialize:
   310  000001                     ?_convertReg2ExtendedCANid:
   311                           	opt callstack 0
   312  000001                     ?_convertReg2StandardCANid:
   313                           	opt callstack 0
   314  000001                     ?_L6470_change:
   315                           	opt callstack 0
   316  000001                     ?___lmul:
   317                           	opt callstack 0
   318  000001                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   319                           	opt callstack 0
   320  000001                     convertReg2StandardCANid@tempRXBn_SIDL:
   321                           	opt callstack 0
   322  000001                     SPI_Init@divider:
   323                           	opt callstack 0
   324  000001                     SPI_transfer@dt:
   325                           	opt callstack 0
   326  000001                     Wait@num:
   327                           	opt callstack 0
   328  000001                     L6470_change@dt:
   329                           	opt callstack 0
   330  000001                     ___lmul@multiplier:
   331                           	opt callstack 0
   332                           
   333                           ; 4 bytes @ 0x0
   334  000001                     	ds	1
   335  000002                     ?_L6470_GetRegister:
   336                           	opt callstack 0
   337  000002                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   338                           	opt callstack 0
   339  000002                     L6470_GetRegister@num:
   340                           	opt callstack 0
   341  000002                     L6470_Stop@mode:
   342                           	opt callstack 0
   343  000002                     SPI_Init@sdo:
   344                           	opt callstack 0
   345  000002                     CMD_Send@val:
   346                           	opt callstack 0
   347                           
   348                           ; 4 bytes @ 0x1
   349  000002                     	ds	1
   350  000003                     ??_Wait:
   351  000003                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   352                           	opt callstack 0
   353  000003                     L6470_change@num:
   354                           	opt callstack 0
   355                           
   356                           ; 2 bytes @ 0x2
   357  000003                     	ds	1
   358  000004                     SPI_Init@stat:
   359                           	opt callstack 0
   360  000004                     Wait@i:
   361                           	opt callstack 0
   362  000004                     L6470_Stop@cmd:
   363                           	opt callstack 0
   364                           
   365                           ; 4 bytes @ 0x3
   366  000004                     	ds	1
   367  000005                     ??_convertReg2ExtendedCANid:
   368  000005                     ??_convertReg2StandardCANid:
   369  000005                     ??_L6470_change:
   370  000005                     SPI_Init@con:
   371                           	opt callstack 0
   372  000005                     ___lmul@multiplicand:
   373                           	opt callstack 0
   374                           
   375                           ; 4 bytes @ 0x4
   376  000005                     	ds	1
   377  000006                     ??_L6470_GetRegister:
   378  000006                     SPI_Init@mode:
   379                           	opt callstack 0
   380  000006                     CMD_Send@num:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x5
   384  000006                     	ds	1
   385  000007                     convertReg2StandardCANid@tempRXBn_SIDH:
   386                           	opt callstack 0
   387                           
   388                           ; 1 bytes @ 0x6
   389  000007                     	ds	1
   390  000008                     ??_CMD_Send:
   391  000008                     convertReg2StandardCANid@returnValue:
   392                           	opt callstack 0
   393                           
   394                           ; 4 bytes @ 0x7
   395  000008                     	ds	1
   396  000009                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   397                           	opt callstack 0
   398  000009                     ___lmul@product:
   399                           	opt callstack 0
   400                           
   401                           ; 4 bytes @ 0x8
   402  000009                     	ds	1
   403  00000A                     L6470_change@i:
   404                           	opt callstack 0
   405  00000A                     convertReg2ExtendedCANid@returnValue:
   406                           	opt callstack 0
   407  00000A                     L6470_GetRegister@dt:
   408                           	opt callstack 0
   409                           
   410                           ; 4 bytes @ 0x9
   411  00000A                     	ds	2
   412  00000C                     convertReg2StandardCANid@ConvertedID:
   413                           	opt callstack 0
   414  00000C                     CMD_Send@dt:
   415                           	opt callstack 0
   416  00000C                     L6470_change@val:
   417                           	opt callstack 0
   418                           
   419                           ; 4 bytes @ 0xB
   420  00000C                     	ds	1
   421  00000D                     ?___aldiv:
   422                           	opt callstack 0
   423  00000D                     ___aldiv@dividend:
   424                           	opt callstack 0
   425                           
   426                           ; 4 bytes @ 0xC
   427  00000D                     	ds	1
   428  00000E                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   429                           	opt callstack 0
   430  00000E                     L6470_GetRegister@i:
   431                           	opt callstack 0
   432                           
   433                           ; 2 bytes @ 0xD
   434  00000E                     	ds	1
   435  00000F                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   436                           	opt callstack 0
   437                           
   438                           ; 1 bytes @ 0xE
   439  00000F                     	ds	1
   440  000010                     CMD_Send@cmd:
   441                           	opt callstack 0
   442  000010                     L6470_GetRegister@regadrs:
   443                           	opt callstack 0
   444  000010                     convertReg2ExtendedCANid@ConvertedID:
   445                           	opt callstack 0
   446                           
   447                           ; 4 bytes @ 0xF
   448  000010                     	ds	1
   449  000011                     CMD_Send@i:
   450                           	opt callstack 0
   451  000011                     L6470_GetRegister@ans:
   452                           	opt callstack 0
   453  000011                     ___aldiv@divisor:
   454                           	opt callstack 0
   455                           
   456                           ; 4 bytes @ 0x10
   457  000011                     	ds	2
   458  000013                     L6470_Run@speed:
   459                           	opt callstack 0
   460  000013                     L6470_Move@step:
   461                           	opt callstack 0
   462                           
   463                           ; 4 bytes @ 0x12
   464  000013                     	ds	1
   465  000014                     CAN_receive@tempCanMsg:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0x13
   469  000014                     	ds	1
   470  000015                     ?_L6470_Init:
   471                           	opt callstack 0
   472  000015                     ___aldiv@counter:
   473                           	opt callstack 0
   474                           
   475                           ; 1 bytes @ 0x14
   476  000015                     	ds	1
   477  000016                     CAN_receive@returnValue:
   478                           	opt callstack 0
   479  000016                     ___aldiv@sign:
   480                           	opt callstack 0
   481                           
   482                           ; 1 bytes @ 0x15
   483  000016                     	ds	1
   484  000017                     L6470_Run@dir:
   485                           	opt callstack 0
   486  000017                     L6470_Move@dir:
   487                           	opt callstack 0
   488  000017                     ___aldiv@quotient:
   489                           	opt callstack 0
   490                           
   491                           ; 4 bytes @ 0x16
   492  000017                     	ds	1
   493  000018                     ??_L6470_command:
   494                           
   495                           ; 1 bytes @ 0x17
   496  000018                     	ds	1
   497  000019                     L6470_Init@config:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x18
   501  000019                     	ds	2
   502  00001B                     L6470_Init@step_mode:
   503                           	opt callstack 0
   504  00001B                     ServoOut@angle:
   505                           	opt callstack 0
   506                           
   507                           ; 2 bytes @ 0x1A
   508  00001B                     	ds	1
   509  00001C                     L6470_Init@val:
   510                           	opt callstack 0
   511                           
   512                           ; 4 bytes @ 0x1B
   513  00001C                     	ds	1
   514  00001D                     ServoOut@value:
   515                           	opt callstack 0
   516                           
   517                           ; 4 bytes @ 0x1C
   518  00001D                     	ds	3
   519  000020                     L6470_Init@i:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0x1F
   523  000020                     	ds	1
   524  000021                     can_recieve@rxMessage:
   525                           	opt callstack 0
   526                           
   527                           ; 14 bytes @ 0x20
   528  000021                     	ds	14
   529  00002F                     ??_can_recieve:
   530                           
   531                           ; 1 bytes @ 0x2E
   532  00002F                     	ds	4
   533  000033                     
   534                           ; 1 bytes @ 0x32
   535 ;;
   536 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   537 ;;
   538 ;; *************** function _main *****************
   539 ;; Defined at:
   540 ;;		line 98 in file "main.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;  ans             4    0        unsigned long 
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   555 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   557 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   558 ;;Total ram usage:        4 bytes
   559 ;; Hardware stack levels required when called:    6
   560 ;; This function calls:
   561 ;;		_CAN_receive
   562 ;;		_ECAN_Initialize
   563 ;;		_L6470_Init
   564 ;;		_SPI_Init
   565 ;;		_ServoOut
   566 ;;		_Wait
   567 ;;		_can_recieve
   568 ;; This function is called by:
   569 ;;		Startup code after reset
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           	psect	text0
   574  000588                     __ptext0:
   575                           	opt callstack 0
   576  000588                     _main:
   577                           	opt callstack 25
   578                           
   579                           ;main.c: 100:     unsigned long ans ;;main.c: 102:     OSCCON = 0b01110010;
   580                           
   581                           ;incstack = 0
   582  000588  0E72               	movlw	114
   583  00058A  6ED3               	movwf	4051,c	;volatile
   584                           
   585                           ;main.c: 103:     INTCON2bits.RBPU = 0;
   586  00058C  9EF1               	bcf	4081,7,c	;volatile
   587                           
   588                           ;main.c: 104:     WPUB = 0b00000010;
   589  00058E  0E02               	movlw	2
   590  000590  010F               	movlb	15	; () banked
   591  000592  6F5B               	movwf	91,b	;volatile
   592                           
   593                           ;main.c: 105:     ANCON0 = 0b00000000;
   594  000594  0E00               	movlw	0
   595  000596  6F5D               	movwf	93,b	;volatile
   596                           
   597                           ;main.c: 106:     ANCON1 = 0b00000000;
   598  000598  0E00               	movlw	0
   599  00059A  6F5C               	movwf	92,b	;volatile
   600                           
   601                           ;main.c: 107:     TRISA = 0b11000000;
   602  00059C  0EC0               	movlw	192
   603  00059E  6E92               	movwf	3986,c	;volatile
   604                           
   605                           ;main.c: 108:     TRISB = 0b00001010;
   606  0005A0  0E0A               	movlw	10
   607  0005A2  6E93               	movwf	3987,c	;volatile
   608                           
   609                           ;main.c: 109:     TRISC = 0b00010001;
   610  0005A4  0E11               	movlw	17
   611  0005A6  6E94               	movwf	3988,c	;volatile
   612                           
   613                           ;main.c: 110:     PORTA = 0b00000000;
   614  0005A8  0E00               	movlw	0
   615  0005AA  6E80               	movwf	3968,c	;volatile
   616                           
   617                           ;main.c: 111:     PORTB = 0b00000001;
   618  0005AC  0E01               	movlw	1
   619  0005AE  6E81               	movwf	3969,c	;volatile
   620                           
   621                           ;main.c: 112:     PORTC = 0b00000000;
   622  0005B0  0E00               	movlw	0
   623  0005B2  6E82               	movwf	3970,c	;volatile
   624                           
   625                           ;main.c: 114:     T1CON = 0b00110000;
   626  0005B4  0E30               	movlw	48
   627  0005B6  6ECD               	movwf	4045,c	;volatile
   628                           
   629                           ;main.c: 115:     T3CON = 0b00110000;
   630  0005B8  0E30               	movlw	48
   631  0005BA  6EB1               	movwf	4017,c	;volatile
   632                           
   633                           ; BSR set to: 15
   634                           ;main.c: 116:     PIR1bits.TMR1IF = 0;
   635  0005BC  909E               	bcf	3998,0,c	;volatile
   636                           
   637                           ; BSR set to: 15
   638                           ;main.c: 117:     PIE1bits.TMR1IE = 1;
   639  0005BE  809D               	bsf	3997,0,c	;volatile
   640                           
   641                           ; BSR set to: 15
   642                           ;main.c: 118:     PIR2bits.TMR3IF = 0;
   643  0005C0  92A1               	bcf	4001,1,c	;volatile
   644                           
   645                           ; BSR set to: 15
   646                           ;main.c: 119:     PIE2bits.TMR3IE = 1;
   647  0005C2  82A0               	bsf	4000,1,c	;volatile
   648                           
   649                           ; BSR set to: 15
   650                           ;main.c: 120:     INTCONbits.PEIE = 1;
   651  0005C4  8CF2               	bsf	4082,6,c	;volatile
   652                           
   653                           ; BSR set to: 15
   654                           ;main.c: 121:     INTCONbits.GIE = 1;
   655  0005C6  8EF2               	bsf	4082,7,c	;volatile
   656                           
   657                           ; BSR set to: 15
   658                           ;main.c: 124:     ServoOut(servo_Angle[servo_Flag]);
   659  0005C8  C050  F01B         	movff	_servo_Angle,ServoOut@angle
   660  0005CC  C051  F01C         	movff	_servo_Angle+1,ServoOut@angle+1
   661  0005D0  ECEA  F004         	call	_ServoOut	;wreg free
   662                           
   663                           ;main.c: 125:     T1CONbits.TMR1ON = 1;
   664  0005D4  80CD               	bsf	4045,0,c	;volatile
   665                           
   666                           ;main.c: 126:     T3CONbits.TMR3ON = 1;
   667  0005D6  80B1               	bsf	4017,0,c	;volatile
   668                           
   669                           ;main.c: 130:     ECAN_Initialize() ;
   670  0005D8  EC4D  F004         	call	_ECAN_Initialize	;wreg free
   671                           
   672                           ;main.c: 133:     SPI_Init(3,0x1,0) ;
   673  0005DC  0E01               	movlw	1
   674  0005DE  6E01               	movwf	SPI_Init@divider,c
   675  0005E0  0E00               	movlw	0
   676  0005E2  6E03               	movwf	SPI_Init@sdo+1,c
   677  0005E4  0E00               	movlw	0
   678  0005E6  6E02               	movwf	SPI_Init@sdo,c
   679  0005E8  0E03               	movlw	3
   680  0005EA  EC16  F006         	call	_SPI_Init
   681  0005EE  EC2C  F001         	call	_L6470_Init	;wreg free
   682                           
   683                           ;main.c: 137:     Wait(300) ;
   684  0005F2  0E01               	movlw	1
   685  0005F4  6E02               	movwf	Wait@num+1,c
   686  0005F6  0E2C               	movlw	44
   687  0005F8  6E01               	movwf	Wait@num,c
   688  0005FA  ECA3  F006         	call	_Wait	;wreg free
   689                           
   690                           ;main.c: 139:     PORTCbits.RC2 = 1;
   691  0005FE  8482               	bsf	3970,2,c	;volatile
   692                           
   693                           ;main.c: 140:     Wait(100);
   694  000600  0E00               	movlw	0
   695  000602  6E02               	movwf	Wait@num+1,c
   696  000604  0E64               	movlw	100
   697  000606  6E01               	movwf	Wait@num,c
   698  000608  ECA3  F006         	call	_Wait	;wreg free
   699                           
   700                           ;main.c: 141:     PORTCbits.RC2 = 0;
   701  00060C  9482               	bcf	3970,2,c	;volatile
   702  00060E                     l3111:
   703                           
   704                           ;main.c: 144:         if(PORTCbits.RC0){
   705  00060E  A082               	btfss	3970,0,c	;volatile
   706  000610  D002               	goto	l361
   707                           
   708                           ;main.c: 145:             PORTCbits.RC2 = 0;
   709  000612  9482               	bcf	3970,2,c	;volatile
   710                           
   711                           ;main.c: 148:         }else{
   712  000614  D007               	goto	l3117
   713  000616                     l361:
   714                           
   715                           ;main.c: 149:             PORTCbits.RC2 = 1;
   716  000616  8482               	bsf	3970,2,c	;volatile
   717                           
   718                           ;main.c: 150:             ServoOut(servo_Angle[1]);
   719  000618  C052  F01B         	movff	_servo_Angle+2,ServoOut@angle
   720  00061C  C053  F01C         	movff	_servo_Angle+3,ServoOut@angle+1
   721  000620  ECEA  F004         	call	_ServoOut	;wreg free
   722  000624                     l3117:
   723                           
   724                           ;main.c: 154:         if (CAN_receive(&rxMessage)) {
   725  000624  0E36               	movlw	low _rxMessage
   726  000626  6E14               	movwf	CAN_receive@tempCanMsg,c
   727  000628  0E00               	movlw	high _rxMessage
   728  00062A  6E15               	movwf	CAN_receive@tempCanMsg+1,c
   729  00062C  EC1A  F000         	call	_CAN_receive	;wreg free
   730  000630  0900               	iorlw	0
   731  000632  B4D8               	btfsc	status,2,c
   732  000634  D7EC               	goto	l3111
   733                           
   734                           ;main.c: 156:             can_recieve(rxMessage);
   735  000636  EE20  F036         	lfsr	2,_rxMessage
   736  00063A  EE00  F021         	lfsr	0,can_recieve@rxMessage
   737  00063E  0E0D               	movlw	13
   738  000640                     u1201:
   739  000640  CFDB FFEB          	movff	plusw2,plusw0
   740  000644  06E8               	decf	wreg,f,c
   741  000646  E2FC               	bc	u1201
   742  000648  ECA2  F004         	call	_can_recieve	;wreg free
   743                           
   744                           ;main.c: 157:             PORTCbits.RC2 = 1;
   745  00064C  8482               	bsf	3970,2,c	;volatile
   746                           
   747                           ;main.c: 158:             Wait(50);
   748  00064E  0E00               	movlw	0
   749  000650  6E02               	movwf	Wait@num+1,c
   750  000652  0E32               	movlw	50
   751  000654  6E01               	movwf	Wait@num,c
   752  000656  ECA3  F006         	call	_Wait	;wreg free
   753  00065A  D7D9               	goto	l3111
   754  00065C                     __end_of_main:
   755                           	opt callstack 0
   756                           
   757 ;; *************** function _can_recieve *****************
   758 ;; Defined at:
   759 ;;		line 39 in file "can_command.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;  rxMessage      14   32[COMRAM] struct .
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  buf            12    0        unsigned char [12]
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   773 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   775 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   776 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   777 ;;Total ram usage:       18 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    5
   780 ;; This function calls:
   781 ;;		_L6470_command
   782 ;;		_ServoOut
   783 ;; This function is called by:
   784 ;;		_main
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text1
   789  000944                     __ptext1:
   790                           	opt callstack 0
   791  000944                     _can_recieve:
   792                           	opt callstack 25
   793                           
   794                           ;can_command.c: 40:      unsigned char buf[12] ;;can_command.c: 43:      if (rxMessage.f
      +                          rame.idType == 1) {
   795                           
   796                           ;incstack = 0
   797  000944  0421               	decf	can_recieve@rxMessage,w,c
   798  000946  A4D8               	btfss	status,2,c
   799  000948  0012               	return	
   800  00094A  D029               	goto	l3057
   801  00094C                     l789:
   802                           
   803                           ;can_command.c: 46:                 data.c[0] = rxMessage.frame.data0 ;
   804  00094C  C027  F044         	movff	can_recieve@rxMessage+6,_data
   805                           
   806                           ;can_command.c: 47:                 data.c[1] = rxMessage.frame.data1 ;
   807  000950  C028  F045         	movff	can_recieve@rxMessage+7,_data+1
   808                           
   809                           ;can_command.c: 48:                 data.c[2] = rxMessage.frame.data2 ;
   810  000954  C029  F046         	movff	can_recieve@rxMessage+8,_data+2
   811                           
   812                           ;can_command.c: 49:                 data.c[3] = rxMessage.frame.data3 ;
   813  000958  C02A  F047         	movff	can_recieve@rxMessage+9,_data+3
   814                           
   815                           ;can_command.c: 50:                 data.c[4] = rxMessage.frame.data4 ;
   816  00095C  C02B  F048         	movff	can_recieve@rxMessage+10,_data+4
   817                           
   818                           ;can_command.c: 51:                 data.c[5] = rxMessage.frame.data5 ;
   819  000960  C02C  F049         	movff	can_recieve@rxMessage+11,_data+5
   820                           
   821                           ;can_command.c: 52:                 data.c[6] = rxMessage.frame.data6 ;
   822  000964  C02D  F04A         	movff	can_recieve@rxMessage+12,_data+6
   823                           
   824                           ;can_command.c: 53:                 data.c[7] = rxMessage.frame.data7 ;
   825  000968  C02E  F04B         	movff	can_recieve@rxMessage+13,_data+7
   826                           
   827                           ;can_command.c: 54:                 switch(data.c[0]){
   828  00096C  D009               	goto	l3053
   829  00096E                     l3047:
   830                           
   831                           ;can_command.c: 56:                         ServoOut(data.c[1]);
   832  00096E  C045  F01B         	movff	_data+1,ServoOut@angle
   833  000972  6A1C               	clrf	ServoOut@angle+1,c
   834  000974  ECEA  F004         	call	_ServoOut	;wreg free
   835                           
   836                           ;can_command.c: 57:                         break;
   837  000978  0012               	return	
   838  00097A                     l3049:
   839                           
   840                           ;can_command.c: 59:                         L6470_command();
   841  00097A  EC2F  F005         	call	_L6470_command	;wreg free
   842  00097E  0012               	return	
   843  000980                     l3053:
   844  000980  5044               	movf	_data,w,c
   845  000982  6E2F               	movwf	??_can_recieve& (0+255),c
   846  000984  6A30               	clrf	(??_can_recieve+1)& (0+255),c
   847                           
   848                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   849                           ; Switch size 1, requested type "simple"
   850                           ; Number of cases is 1, Range of values is 0 to 0
   851                           ; switch strategies available:
   852                           ; Name         Instructions Cycles
   853                           ; simple_byte            4     3 (average)
   854                           ;	Chosen strategy is simple_byte
   855  000986  5030               	movf	??_can_recieve+1,w,c
   856  000988  0A00               	xorlw	0	; case 0
   857  00098A  A4D8               	btfss	status,2,c
   858  00098C  0012               	return	
   859                           
   860                           ; Switch size 1, requested type "simple"
   861                           ; Number of cases is 2, Range of values is 1 to 16
   862                           ; switch strategies available:
   863                           ; Name         Instructions Cycles
   864                           ; simple_byte            7     4 (average)
   865                           ;	Chosen strategy is simple_byte
   866  00098E  502F               	movf	??_can_recieve,w,c
   867  000990  0A01               	xorlw	1	; case 1
   868  000992  B4D8               	btfsc	status,2,c
   869  000994  D7EC               	goto	l3047
   870  000996  0A11               	xorlw	17	; case 16
   871  000998  A4D8               	btfss	status,2,c
   872  00099A  0012               	return	
   873  00099C  D7EE               	goto	l3049
   874  00099E                     l3057:
   875  00099E  C022  F02F         	movff	can_recieve@rxMessage+1,??_can_recieve
   876  0009A2  C023  F030         	movff	can_recieve@rxMessage+2,??_can_recieve+1
   877  0009A6  C024  F031         	movff	can_recieve@rxMessage+3,??_can_recieve+2
   878  0009AA  C025  F032         	movff	can_recieve@rxMessage+4,??_can_recieve+3
   879                           
   880                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
   881                           ; Switch size 1, requested type "simple"
   882                           ; Number of cases is 1, Range of values is 0 to 0
   883                           ; switch strategies available:
   884                           ; Name         Instructions Cycles
   885                           ; simple_byte            4     3 (average)
   886                           ;	Chosen strategy is simple_byte
   887  0009AE  5032               	movf	??_can_recieve+3,w,c
   888  0009B0  0A00               	xorlw	0	; case 0
   889  0009B2  A4D8               	btfss	status,2,c
   890  0009B4  0012               	return	
   891  0009B6  D009               	goto	l3285
   892  0009B8                     l3283:
   893                           
   894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   895                           ; Switch size 1, requested type "simple"
   896                           ; Number of cases is 1, Range of values is 1 to 1
   897                           ; switch strategies available:
   898                           ; Name         Instructions Cycles
   899                           ; simple_byte            4     3 (average)
   900                           ;	Chosen strategy is simple_byte
   901  0009B8  5030               	movf	??_can_recieve+1,w,c
   902  0009BA  0A01               	xorlw	1	; case 1
   903  0009BC  A4D8               	btfss	status,2,c
   904  0009BE  0012               	return	
   905                           
   906                           ; Switch size 1, requested type "simple"
   907                           ; Number of cases is 1, Range of values is 35 to 35
   908                           ; switch strategies available:
   909                           ; Name         Instructions Cycles
   910                           ; simple_byte            4     3 (average)
   911                           ;	Chosen strategy is simple_byte
   912  0009C0  502F               	movf	??_can_recieve,w,c
   913  0009C2  0A23               	xorlw	35	; case 35
   914  0009C4  A4D8               	btfss	status,2,c
   915  0009C6  0012               	return	
   916  0009C8  D7C1               	goto	l789
   917  0009CA                     l3285:
   918                           
   919                           ; Switch size 1, requested type "simple"
   920                           ; Number of cases is 1, Range of values is 0 to 0
   921                           ; switch strategies available:
   922                           ; Name         Instructions Cycles
   923                           ; simple_byte            4     3 (average)
   924                           ;	Chosen strategy is simple_byte
   925  0009CA  5031               	movf	??_can_recieve+2,w,c
   926  0009CC  0A00               	xorlw	0	; case 0
   927  0009CE  A4D8               	btfss	status,2,c
   928  0009D0  0012               	return	
   929  0009D2  D7F2               	goto	l3283
   930  0009D4                     __end_of_can_recieve:
   931                           	opt callstack 0
   932                           
   933 ;; *************** function _ServoOut *****************
   934 ;; Defined at:
   935 ;;		line 24 in file "servo.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  angle           2   26[COMRAM] int 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  value           4   28[COMRAM] long 
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0, cstack
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   950 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   952 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   953 ;;Total ram usage:        6 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; Hardware stack levels required when called:    2
   956 ;; This function calls:
   957 ;;		___aldiv
   958 ;;		___lmul
   959 ;; This function is called by:
   960 ;;		_main
   961 ;;		_can_recieve
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text2
   966  0009D4                     __ptext2:
   967                           	opt callstack 0
   968  0009D4                     _ServoOut:
   969                           	opt callstack 27
   970                           
   971                           ;servo.c: 25:     long value;;servo.c: 27:     PIR1bits.TMR1IF = 0;
   972                           
   973                           ;incstack = 0
   974  0009D4  909E               	bcf	3998,0,c	;volatile
   975                           
   976                           ;servo.c: 28:     PIR2bits.TMR3IF = 0;
   977  0009D6  92A1               	bcf	4001,1,c	;volatile
   978                           
   979                           ;servo.c: 30:     value = (long)(angle) * 1000 / 180 + 250;
   980  0009D8  C01B  F001         	movff	ServoOut@angle,___lmul@multiplier
   981  0009DC  C01C  F002         	movff	ServoOut@angle+1,___lmul@multiplier+1
   982  0009E0  0E00               	movlw	0
   983  0009E2  BE02               	btfsc	___lmul@multiplier+1,7,c
   984  0009E4  0EFF               	movlw	-1
   985  0009E6  6E03               	movwf	___lmul@multiplier+2,c
   986  0009E8  6E04               	movwf	___lmul@multiplier+3,c
   987  0009EA  0EE8               	movlw	232
   988  0009EC  6E05               	movwf	___lmul@multiplicand,c
   989  0009EE  0E03               	movlw	3
   990  0009F0  6E06               	movwf	___lmul@multiplicand+1,c
   991  0009F2  0E00               	movlw	0
   992  0009F4  6E07               	movwf	___lmul@multiplicand+2,c
   993  0009F6  0E00               	movlw	0
   994  0009F8  6E08               	movwf	___lmul@multiplicand+3,c
   995  0009FA  ECEB  F005         	call	___lmul	;wreg free
   996  0009FE  C001  F00D         	movff	?___lmul,___aldiv@dividend
   997  000A02  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
   998  000A06  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
   999  000A0A  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  1000  000A0E  0EB4               	movlw	180
  1001  000A10  6E11               	movwf	___aldiv@divisor,c
  1002  000A12  0E00               	movlw	0
  1003  000A14  6E12               	movwf	___aldiv@divisor+1,c
  1004  000A16  0E00               	movlw	0
  1005  000A18  6E13               	movwf	___aldiv@divisor+2,c
  1006  000A1A  0E00               	movlw	0
  1007  000A1C  6E14               	movwf	___aldiv@divisor+3,c
  1008  000A1E  EC2E  F003         	call	___aldiv	;wreg free
  1009  000A22  0EFA               	movlw	250
  1010  000A24  240D               	addwf	?___aldiv,w,c
  1011  000A26  6E1D               	movwf	ServoOut@value,c
  1012  000A28  0E00               	movlw	0
  1013  000A2A  200E               	addwfc	?___aldiv+1,w,c
  1014  000A2C  6E1E               	movwf	ServoOut@value+1,c
  1015  000A2E  0E00               	movlw	0
  1016  000A30  200F               	addwfc	?___aldiv+2,w,c
  1017  000A32  6E1F               	movwf	ServoOut@value+2,c
  1018  000A34  0E00               	movlw	0
  1019  000A36  2010               	addwfc	?___aldiv+3,w,c
  1020  000A38  6E20               	movwf	ServoOut@value+3,c
  1021                           
  1022                           ;servo.c: 31:     T1time = 65536 - value;
  1023  000A3A  501D               	movf	ServoOut@value,w,c
  1024  000A3C  0800               	sublw	0
  1025  000A3E  6E54               	movwf	_T1time,c
  1026  000A40  501E               	movf	ServoOut@value+1,w,c
  1027  000A42  A0D8               	btfss	status,0,c
  1028  000A44  2AE8               	incf	wreg,f,c
  1029  000A46  0800               	sublw	0
  1030  000A48  6E55               	movwf	_T1time+1,c
  1031                           
  1032                           ;servo.c: 33:     TMR1H = (T1time >> 8);
  1033  000A4A  5055               	movf	_T1time+1,w,c
  1034  000A4C  6ECF               	movwf	4047,c	;volatile
  1035                           
  1036                           ;servo.c: 34:     TMR1L = (T1time & 0x00ff);
  1037  000A4E  C054  FFCE         	movff	_T1time,4046	;volatile
  1038                           
  1039                           ;servo.c: 35:     TMR3H = (55536>>8);
  1040  000A52  0ED8               	movlw	216
  1041  000A54  6EB3               	movwf	4019,c	;volatile
  1042                           
  1043                           ;servo.c: 36:     TMR3L = (55536 & 0x00ff);
  1044  000A56  0EF0               	movlw	240
  1045  000A58  6EB2               	movwf	4018,c	;volatile
  1046                           
  1047                           ;servo.c: 38:     PORTCbits.RC1 = 1;
  1048  000A5A  8282               	bsf	3970,1,c	;volatile
  1049  000A5C  0012               	return		;funcret
  1050  000A5E                     __end_of_ServoOut:
  1051                           	opt callstack 0
  1052                           
  1053 ;; *************** function ___lmul *****************
  1054 ;; Defined at:
  1055 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;  multiplier      4    0[COMRAM] unsigned long 
  1058 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  product         4    8[COMRAM] unsigned long 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  4    0[COMRAM] unsigned long 
  1063 ;; Registers used:
  1064 ;;		wreg, status,2, status,0
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1070 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1071 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1073 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1074 ;;Total ram usage:       12 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; Hardware stack levels required when called:    1
  1077 ;; This function calls:
  1078 ;;		Nothing
  1079 ;; This function is called by:
  1080 ;;		_ServoOut
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           	psect	text3
  1085  000BD6                     __ptext3:
  1086                           	opt callstack 0
  1087  000BD6                     ___lmul:
  1088                           	opt callstack 27
  1089                           
  1090                           ;incstack = 0
  1091  000BD6  0E00               	movlw	0
  1092  000BD8  6E09               	movwf	___lmul@product,c
  1093  000BDA  0E00               	movlw	0
  1094  000BDC  6E0A               	movwf	___lmul@product+1,c
  1095  000BDE  0E00               	movlw	0
  1096  000BE0  6E0B               	movwf	___lmul@product+2,c
  1097  000BE2  0E00               	movlw	0
  1098  000BE4  6E0C               	movwf	___lmul@product+3,c
  1099  000BE6                     l2731:
  1100  000BE6  A001               	btfss	___lmul@multiplier,0,c
  1101  000BE8  D008               	goto	l2735
  1102  000BEA  5005               	movf	___lmul@multiplicand,w,c
  1103  000BEC  2609               	addwf	___lmul@product,f,c
  1104  000BEE  5006               	movf	___lmul@multiplicand+1,w,c
  1105  000BF0  220A               	addwfc	___lmul@product+1,f,c
  1106  000BF2  5007               	movf	___lmul@multiplicand+2,w,c
  1107  000BF4  220B               	addwfc	___lmul@product+2,f,c
  1108  000BF6  5008               	movf	___lmul@multiplicand+3,w,c
  1109  000BF8  220C               	addwfc	___lmul@product+3,f,c
  1110  000BFA                     l2735:
  1111  000BFA  90D8               	bcf	status,0,c
  1112  000BFC  3605               	rlcf	___lmul@multiplicand,f,c
  1113  000BFE  3606               	rlcf	___lmul@multiplicand+1,f,c
  1114  000C00  3607               	rlcf	___lmul@multiplicand+2,f,c
  1115  000C02  3608               	rlcf	___lmul@multiplicand+3,f,c
  1116  000C04  90D8               	bcf	status,0,c
  1117  000C06  3204               	rrcf	___lmul@multiplier+3,f,c
  1118  000C08  3203               	rrcf	___lmul@multiplier+2,f,c
  1119  000C0A  3202               	rrcf	___lmul@multiplier+1,f,c
  1120  000C0C  3201               	rrcf	___lmul@multiplier,f,c
  1121  000C0E  5001               	movf	___lmul@multiplier,w,c
  1122  000C10  1002               	iorwf	___lmul@multiplier+1,w,c
  1123  000C12  1003               	iorwf	___lmul@multiplier+2,w,c
  1124  000C14  1004               	iorwf	___lmul@multiplier+3,w,c
  1125  000C16  A4D8               	btfss	status,2,c
  1126  000C18  D7E6               	goto	l2731
  1127  000C1A  C009  F001         	movff	___lmul@product,?___lmul
  1128  000C1E  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1129  000C22  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1130  000C26  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1131  000C2A  0012               	return		;funcret
  1132  000C2C                     __end_of___lmul:
  1133                           	opt callstack 0
  1134                           
  1135 ;; *************** function ___aldiv *****************
  1136 ;; Defined at:
  1137 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  dividend        4   12[COMRAM] long 
  1140 ;;  divisor         4   16[COMRAM] long 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  quotient        4   22[COMRAM] long 
  1143 ;;  sign            1   21[COMRAM] unsigned char 
  1144 ;;  counter         1   20[COMRAM] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  4   12[COMRAM] long 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2, status,0
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1154 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1155 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1157 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1158 ;;Total ram usage:       14 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    1
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_ServoOut
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text4
  1169  00065C                     __ptext4:
  1170                           	opt callstack 0
  1171  00065C                     ___aldiv:
  1172                           	opt callstack 27
  1173                           
  1174                           ;incstack = 0
  1175  00065C  0E00               	movlw	0
  1176  00065E  6E16               	movwf	___aldiv@sign,c
  1177  000660  AE14               	btfss	___aldiv@divisor+3,7,c
  1178  000662  D00A               	goto	l2747
  1179  000664  1E14               	comf	___aldiv@divisor+3,f,c
  1180  000666  1E13               	comf	___aldiv@divisor+2,f,c
  1181  000668  1E12               	comf	___aldiv@divisor+1,f,c
  1182  00066A  6C11               	negf	___aldiv@divisor,c
  1183  00066C  0E00               	movlw	0
  1184  00066E  2212               	addwfc	___aldiv@divisor+1,f,c
  1185  000670  2213               	addwfc	___aldiv@divisor+2,f,c
  1186  000672  2214               	addwfc	___aldiv@divisor+3,f,c
  1187  000674  0E01               	movlw	1
  1188  000676  6E16               	movwf	___aldiv@sign,c
  1189  000678                     l2747:
  1190  000678  AE10               	btfss	___aldiv@dividend+3,7,c
  1191  00067A  D00A               	goto	l2753
  1192  00067C  1E10               	comf	___aldiv@dividend+3,f,c
  1193  00067E  1E0F               	comf	___aldiv@dividend+2,f,c
  1194  000680  1E0E               	comf	___aldiv@dividend+1,f,c
  1195  000682  6C0D               	negf	___aldiv@dividend,c
  1196  000684  0E00               	movlw	0
  1197  000686  220E               	addwfc	___aldiv@dividend+1,f,c
  1198  000688  220F               	addwfc	___aldiv@dividend+2,f,c
  1199  00068A  2210               	addwfc	___aldiv@dividend+3,f,c
  1200  00068C  0E01               	movlw	1
  1201  00068E  1A16               	xorwf	___aldiv@sign,f,c
  1202  000690                     l2753:
  1203  000690  0E00               	movlw	0
  1204  000692  6E17               	movwf	___aldiv@quotient,c
  1205  000694  0E00               	movlw	0
  1206  000696  6E18               	movwf	___aldiv@quotient+1,c
  1207  000698  0E00               	movlw	0
  1208  00069A  6E19               	movwf	___aldiv@quotient+2,c
  1209  00069C  0E00               	movlw	0
  1210  00069E  6E1A               	movwf	___aldiv@quotient+3,c
  1211  0006A0  5011               	movf	___aldiv@divisor,w,c
  1212  0006A2  1012               	iorwf	___aldiv@divisor+1,w,c
  1213  0006A4  1013               	iorwf	___aldiv@divisor+2,w,c
  1214  0006A6  1014               	iorwf	___aldiv@divisor+3,w,c
  1215  0006A8  B4D8               	btfsc	status,2,c
  1216  0006AA  D02A               	goto	l2775
  1217  0006AC  0E01               	movlw	1
  1218  0006AE  6E15               	movwf	___aldiv@counter,c
  1219  0006B0  D006               	goto	l2761
  1220  0006B2                     l2759:
  1221  0006B2  90D8               	bcf	status,0,c
  1222  0006B4  3611               	rlcf	___aldiv@divisor,f,c
  1223  0006B6  3612               	rlcf	___aldiv@divisor+1,f,c
  1224  0006B8  3613               	rlcf	___aldiv@divisor+2,f,c
  1225  0006BA  3614               	rlcf	___aldiv@divisor+3,f,c
  1226  0006BC  2A15               	incf	___aldiv@counter,f,c
  1227  0006BE                     l2761:
  1228  0006BE  AE14               	btfss	___aldiv@divisor+3,7,c
  1229  0006C0  D7F8               	goto	l2759
  1230  0006C2                     u990:
  1231  0006C2  90D8               	bcf	status,0,c
  1232  0006C4  3617               	rlcf	___aldiv@quotient,f,c
  1233  0006C6  3618               	rlcf	___aldiv@quotient+1,f,c
  1234  0006C8  3619               	rlcf	___aldiv@quotient+2,f,c
  1235  0006CA  361A               	rlcf	___aldiv@quotient+3,f,c
  1236  0006CC  5011               	movf	___aldiv@divisor,w,c
  1237  0006CE  5C0D               	subwf	___aldiv@dividend,w,c
  1238  0006D0  5012               	movf	___aldiv@divisor+1,w,c
  1239  0006D2  580E               	subwfb	___aldiv@dividend+1,w,c
  1240  0006D4  5013               	movf	___aldiv@divisor+2,w,c
  1241  0006D6  580F               	subwfb	___aldiv@dividend+2,w,c
  1242  0006D8  5014               	movf	___aldiv@divisor+3,w,c
  1243  0006DA  5810               	subwfb	___aldiv@dividend+3,w,c
  1244  0006DC  A0D8               	btfss	status,0,c
  1245  0006DE  D009               	goto	l2771
  1246  0006E0  5011               	movf	___aldiv@divisor,w,c
  1247  0006E2  5E0D               	subwf	___aldiv@dividend,f,c
  1248  0006E4  5012               	movf	___aldiv@divisor+1,w,c
  1249  0006E6  5A0E               	subwfb	___aldiv@dividend+1,f,c
  1250  0006E8  5013               	movf	___aldiv@divisor+2,w,c
  1251  0006EA  5A0F               	subwfb	___aldiv@dividend+2,f,c
  1252  0006EC  5014               	movf	___aldiv@divisor+3,w,c
  1253  0006EE  5A10               	subwfb	___aldiv@dividend+3,f,c
  1254  0006F0  8017               	bsf	___aldiv@quotient,0,c
  1255  0006F2                     l2771:
  1256  0006F2  90D8               	bcf	status,0,c
  1257  0006F4  3214               	rrcf	___aldiv@divisor+3,f,c
  1258  0006F6  3213               	rrcf	___aldiv@divisor+2,f,c
  1259  0006F8  3212               	rrcf	___aldiv@divisor+1,f,c
  1260  0006FA  3211               	rrcf	___aldiv@divisor,f,c
  1261  0006FC  2E15               	decfsz	___aldiv@counter,f,c
  1262  0006FE  D7E1               	goto	u990
  1263  000700                     l2775:
  1264  000700  5016               	movf	___aldiv@sign,w,c
  1265  000702  B4D8               	btfsc	status,2,c
  1266  000704  D008               	goto	l2779
  1267  000706  1E1A               	comf	___aldiv@quotient+3,f,c
  1268  000708  1E19               	comf	___aldiv@quotient+2,f,c
  1269  00070A  1E18               	comf	___aldiv@quotient+1,f,c
  1270  00070C  6C17               	negf	___aldiv@quotient,c
  1271  00070E  0E00               	movlw	0
  1272  000710  2218               	addwfc	___aldiv@quotient+1,f,c
  1273  000712  2219               	addwfc	___aldiv@quotient+2,f,c
  1274  000714  221A               	addwfc	___aldiv@quotient+3,f,c
  1275  000716                     l2779:
  1276  000716  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  1277  00071A  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  1278  00071E  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  1279  000722  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  1280  000726  0012               	return		;funcret
  1281  000728                     __end_of___aldiv:
  1282                           	opt callstack 0
  1283                           
  1284 ;; *************** function _L6470_command *****************
  1285 ;; Defined at:
  1286 ;;		line 23 in file "can_command.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1304 ;;Total ram usage:        2 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    4
  1307 ;; This function calls:
  1308 ;;		_L6470_Move
  1309 ;;		_L6470_Run
  1310 ;;		_L6470_Stop
  1311 ;;		_L6470_change
  1312 ;; This function is called by:
  1313 ;;		_can_recieve
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text5
  1318  000A5E                     __ptext5:
  1319                           	opt callstack 0
  1320  000A5E                     _L6470_command:
  1321                           	opt callstack 25
  1322                           
  1323                           ;can_command.c: 24:     switch(data.c[1]){
  1324                           
  1325                           ;incstack = 0
  1326  000A5E  D031               	goto	l2871
  1327  000A60                     l2865:
  1328                           
  1329                           ;can_command.c: 26:             L6470_Stop(data.c[2]);
  1330  000A60  C046  F002         	movff	_data+2,L6470_Stop@mode
  1331  000A64  6A03               	clrf	L6470_Stop@mode+1,c
  1332  000A66  EC58  F006         	call	_L6470_Stop	;wreg free
  1333  000A6A                     l780:
  1334                           
  1335                           ;can_command.c: 28:             L6470_Run(data.c[2],L6470_change(&data.c[3],3));
  1336  000A6A  0E47               	movlw	low (_data+3)
  1337  000A6C  6E01               	movwf	L6470_change@dt,c
  1338  000A6E  0E00               	movlw	high (_data+3)
  1339  000A70  6E02               	movwf	L6470_change@dt+1,c
  1340  000A72  0E00               	movlw	0
  1341  000A74  6E04               	movwf	L6470_change@num+1,c
  1342  000A76  0E03               	movlw	3
  1343  000A78  6E03               	movwf	L6470_change@num,c
  1344  000A7A  EC73  F005         	call	_L6470_change	;wreg free
  1345  000A7E  C001  F013         	movff	?_L6470_change,L6470_Run@speed
  1346  000A82  C002  F014         	movff	?_L6470_change+1,L6470_Run@speed+1
  1347  000A86  C003  F015         	movff	?_L6470_change+2,L6470_Run@speed+2
  1348  000A8A  C004  F016         	movff	?_L6470_change+3,L6470_Run@speed+3
  1349  000A8E  5046               	movf	_data+2,w,c
  1350  000A90  EC8B  F006         	call	_L6470_Run
  1351                           
  1352                           ;can_command.c: 29:             break;
  1353  000A94  0012               	return	
  1354  000A96                     l2867:
  1355                           
  1356                           ;can_command.c: 31:             L6470_Move(data.c[2],L6470_change(&data.c[3],3));
  1357  000A96  0E47               	movlw	low (_data+3)
  1358  000A98  6E01               	movwf	L6470_change@dt,c
  1359  000A9A  0E00               	movlw	high (_data+3)
  1360  000A9C  6E02               	movwf	L6470_change@dt+1,c
  1361  000A9E  0E00               	movlw	0
  1362  000AA0  6E04               	movwf	L6470_change@num+1,c
  1363  000AA2  0E03               	movlw	3
  1364  000AA4  6E03               	movwf	L6470_change@num,c
  1365  000AA6  EC73  F005         	call	_L6470_change	;wreg free
  1366  000AAA  C001  F013         	movff	?_L6470_change,L6470_Move@step
  1367  000AAE  C002  F014         	movff	?_L6470_change+1,L6470_Move@step+1
  1368  000AB2  C003  F015         	movff	?_L6470_change+2,L6470_Move@step+2
  1369  000AB6  C004  F016         	movff	?_L6470_change+3,L6470_Move@step+3
  1370  000ABA  5046               	movf	_data+2,w,c
  1371  000ABC  EC72  F006         	call	_L6470_Move
  1372                           
  1373                           ;can_command.c: 32:             break;
  1374  000AC0  0012               	return	
  1375  000AC2                     l2871:
  1376  000AC2  5045               	movf	_data+1,w,c
  1377  000AC4  6E18               	movwf	??_L6470_command& (0+255),c
  1378  000AC6  6A19               	clrf	(??_L6470_command+1)& (0+255),c
  1379                           
  1380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1381                           ; Switch size 1, requested type "simple"
  1382                           ; Number of cases is 1, Range of values is 0 to 0
  1383                           ; switch strategies available:
  1384                           ; Name         Instructions Cycles
  1385                           ; simple_byte            4     3 (average)
  1386                           ;	Chosen strategy is simple_byte
  1387  000AC8  5019               	movf	??_L6470_command+1,w,c
  1388  000ACA  0A00               	xorlw	0	; case 0
  1389  000ACC  A4D8               	btfss	status,2,c
  1390  000ACE  0012               	return	
  1391                           
  1392                           ; Switch size 1, requested type "simple"
  1393                           ; Number of cases is 3, Range of values is 0 to 80
  1394                           ; switch strategies available:
  1395                           ; Name         Instructions Cycles
  1396                           ; simple_byte           10     6 (average)
  1397                           ;	Chosen strategy is simple_byte
  1398  000AD0  5018               	movf	??_L6470_command,w,c
  1399  000AD2  0A00               	xorlw	0	; case 0
  1400  000AD4  B4D8               	btfsc	status,2,c
  1401  000AD6  D7C4               	goto	l2865
  1402  000AD8  0A40               	xorlw	64	; case 64
  1403  000ADA  B4D8               	btfsc	status,2,c
  1404  000ADC  D7DC               	goto	l2867
  1405  000ADE  0A10               	xorlw	16	; case 80
  1406  000AE0  A4D8               	btfss	status,2,c
  1407  000AE2  0012               	return	
  1408  000AE4  D7C2               	goto	l780
  1409  000AE6                     __end_of_L6470_command:
  1410                           	opt callstack 0
  1411                           
  1412 ;; *************** function _L6470_change *****************
  1413 ;; Defined at:
  1414 ;;		line 13 in file "can_command.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  dt              2    0[COMRAM] PTR unsigned char 
  1417 ;;		 -> data(8), 
  1418 ;;  num             2    2[COMRAM] int 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  val             4   11[COMRAM] unsigned long 
  1421 ;;  i               2    9[COMRAM] int 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  4    0[COMRAM] unsigned long 
  1424 ;; Registers used:
  1425 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1431 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1432 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1433 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1434 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1435 ;;Total ram usage:       15 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    1
  1438 ;; This function calls:
  1439 ;;		Nothing
  1440 ;; This function is called by:
  1441 ;;		_L6470_command
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text6
  1446  000AE6                     __ptext6:
  1447                           	opt callstack 0
  1448  000AE6                     _L6470_change:
  1449                           	opt callstack 27
  1450                           
  1451                           ;can_command.c: 14:     int i;;can_command.c: 15:     unsigned long val = 0;
  1452                           
  1453                           ;incstack = 0
  1454  000AE6  0E00               	movlw	0
  1455  000AE8  6E0C               	movwf	L6470_change@val,c
  1456  000AEA  0E00               	movlw	0
  1457  000AEC  6E0D               	movwf	L6470_change@val+1,c
  1458  000AEE  0E00               	movlw	0
  1459  000AF0  6E0E               	movwf	L6470_change@val+2,c
  1460  000AF2  0E00               	movlw	0
  1461  000AF4  6E0F               	movwf	L6470_change@val+3,c
  1462                           
  1463                           ;can_command.c: 16:     for(i=0; i<num; i++){
  1464  000AF6  0E00               	movlw	0
  1465  000AF8  6E0B               	movwf	L6470_change@i+1,c
  1466  000AFA  0E00               	movlw	0
  1467  000AFC  6E0A               	movwf	L6470_change@i,c
  1468  000AFE  D01D               	goto	l2727
  1469  000B00                     l2721:
  1470                           
  1471                           ;can_command.c: 17:         val = (val << 8) + *dt;
  1472  000B00  C001  FFD9         	movff	L6470_change@dt,fsr2l
  1473  000B04  C002  FFDA         	movff	L6470_change@dt+1,fsr2h
  1474  000B08  50DF               	movf	indf2,w,c
  1475  000B0A  6E05               	movwf	??_L6470_change& (0+255),c
  1476  000B0C  5005               	movf	??_L6470_change,w,c
  1477  000B0E  C00C  F007         	movff	L6470_change@val,??_L6470_change+2
  1478  000B12  C00D  F008         	movff	L6470_change@val+1,??_L6470_change+3
  1479  000B16  C00E  F009         	movff	L6470_change@val+2,??_L6470_change+4
  1480  000B1A  6A06               	clrf	(??_L6470_change+1)& (0+255),c
  1481  000B1C  2406               	addwf	??_L6470_change+1,w,c
  1482  000B1E  6E0C               	movwf	L6470_change@val,c
  1483  000B20  0E00               	movlw	0
  1484  000B22  2007               	addwfc	??_L6470_change+2,w,c
  1485  000B24  6E0D               	movwf	L6470_change@val+1,c
  1486  000B26  0E00               	movlw	0
  1487  000B28  2008               	addwfc	??_L6470_change+3,w,c
  1488  000B2A  6E0E               	movwf	L6470_change@val+2,c
  1489  000B2C  0E00               	movlw	0
  1490  000B2E  2009               	addwfc	??_L6470_change+4,w,c
  1491  000B30  6E0F               	movwf	L6470_change@val+3,c
  1492                           
  1493                           ;can_command.c: 18:         ++dt;
  1494  000B32  4A01               	infsnz	L6470_change@dt,f,c
  1495  000B34  2A02               	incf	L6470_change@dt+1,f,c
  1496                           
  1497                           ;can_command.c: 19:     }
  1498  000B36  4A0A               	infsnz	L6470_change@i,f,c
  1499  000B38  2A0B               	incf	L6470_change@i+1,f,c
  1500  000B3A                     l2727:
  1501  000B3A  5003               	movf	L6470_change@num,w,c
  1502  000B3C  5C0A               	subwf	L6470_change@i,w,c
  1503  000B3E  500B               	movf	L6470_change@i+1,w,c
  1504  000B40  0A80               	xorlw	128
  1505  000B42  6E05               	movwf	??_L6470_change& (0+255),c
  1506  000B44  5004               	movf	L6470_change@num+1,w,c
  1507  000B46  0A80               	xorlw	128
  1508  000B48  5805               	subwfb	??_L6470_change& (0+255),w,c
  1509  000B4A  A0D8               	btfss	status,0,c
  1510  000B4C  D7D9               	goto	l2721
  1511                           
  1512                           ;can_command.c: 20:     return val;
  1513  000B4E  C00C  F001         	movff	L6470_change@val,?_L6470_change
  1514  000B52  C00D  F002         	movff	L6470_change@val+1,?_L6470_change+1
  1515  000B56  C00E  F003         	movff	L6470_change@val+2,?_L6470_change+2
  1516  000B5A  C00F  F004         	movff	L6470_change@val+3,?_L6470_change+3
  1517  000B5E  0012               	return		;funcret
  1518  000B60                     __end_of_L6470_change:
  1519                           	opt callstack 0
  1520                           
  1521 ;; *************** function _L6470_Stop *****************
  1522 ;; Defined at:
  1523 ;;		line 205 in file "L6470.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  mode            2    1[COMRAM] int 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  cmd             4    3[COMRAM] unsigned char [4]
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1538 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1540 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1541 ;;Total ram usage:        6 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    2
  1544 ;; This function calls:
  1545 ;;		_SPI_transfer
  1546 ;; This function is called by:
  1547 ;;		_L6470_command
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text7
  1552  000CB0                     __ptext7:
  1553                           	opt callstack 0
  1554  000CB0                     _L6470_Stop:
  1555                           	opt callstack 26
  1556                           
  1557                           ;L6470.c: 205: void L6470_Stop(int mode);L6470.c: 206: {;L6470.c: 207:      unsigned cha
      +                          r cmd[4] = {0xB0,0xB8,0xA0,0xA8} ;
  1558                           
  1559                           ;incstack = 0
  1560  000CB0  C04C  F004         	movff	L6470_Stop@F12229,L6470_Stop@cmd
  1561  000CB4  C04D  F005         	movff	L6470_Stop@F12229+1,L6470_Stop@cmd+1
  1562  000CB8  C04E  F006         	movff	L6470_Stop@F12229+2,L6470_Stop@cmd+2
  1563  000CBC  C04F  F007         	movff	L6470_Stop@F12229+3,L6470_Stop@cmd+3
  1564  000CC0                     l2711:
  1565  000CC0  5033               	movf	_Busy,w,c
  1566  000CC2  1034               	iorwf	_Busy+1,w,c
  1567  000CC4  A4D8               	btfss	status,2,c
  1568  000CC6  D002               	goto	u920
  1569  000CC8  A281               	btfss	3969,1,c	;volatile
  1570  000CCA  D7FA               	goto	l2711
  1571  000CCC                     u920:
  1572                           
  1573                           ;L6470.c: 210:      PORTBbits.RB0 = 0 ;
  1574  000CCC  9081               	bcf	3969,0,c	;volatile
  1575                           
  1576                           ;L6470.c: 211:      SPI_transfer(cmd[mode]) ;
  1577  000CCE  0E04               	movlw	low L6470_Stop@cmd
  1578  000CD0  2402               	addwf	L6470_Stop@mode,w,c
  1579  000CD2  6ED9               	movwf	fsr2l,c
  1580  000CD4  0E00               	movlw	high L6470_Stop@cmd
  1581  000CD6  2003               	addwfc	L6470_Stop@mode+1,w,c
  1582  000CD8  6EDA               	movwf	fsr2h,c
  1583  000CDA  50DF               	movf	indf2,w,c
  1584  000CDC  ECB8  F006         	call	_SPI_transfer
  1585                           
  1586                           ;L6470.c: 212:      PORTBbits.RB0 = 1 ;
  1587  000CE0  8081               	bsf	3969,0,c	;volatile
  1588  000CE2  0012               	return		;funcret
  1589  000CE4                     __end_of_L6470_Stop:
  1590                           	opt callstack 0
  1591                           
  1592 ;; *************** function _L6470_Run *****************
  1593 ;; Defined at:
  1594 ;;		line 174 in file "L6470.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  dir             1    wreg     unsigned char 
  1597 ;;  speed           4   18[COMRAM] unsigned long 
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;  dir             1   22[COMRAM] unsigned char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1612 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1613 ;;Total ram usage:        5 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    3
  1616 ;; This function calls:
  1617 ;;		_CMD_Send
  1618 ;; This function is called by:
  1619 ;;		_L6470_command
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           	psect	text8
  1624  000D16                     __ptext8:
  1625                           	opt callstack 0
  1626  000D16                     _L6470_Run:
  1627                           	opt callstack 25
  1628                           
  1629                           ;incstack = 0
  1630                           ;L6470_Run@dir stored from wreg
  1631  000D16  6E17               	movwf	L6470_Run@dir,c
  1632  000D18                     
  1633                           ;L6470.c: 174: void L6470_Run(char dir,unsigned long speed);L6470.c: 175: {;L6470.c: 176
      +                          :      while( (Busy==0) && (PORTBbits.RB1==0) ) ;
  1634  000D18  5033               	movf	_Busy,w,c
  1635  000D1A  1034               	iorwf	_Busy+1,w,c
  1636  000D1C  A4D8               	btfss	status,2,c
  1637  000D1E  D002               	goto	u880
  1638  000D20  A281               	btfss	3969,1,c	;volatile
  1639  000D22  D7FA               	goto	l2693
  1640  000D24                     u880:
  1641                           
  1642                           ;L6470.c: 177:      CMD_Send(0x50|dir,speed,3) ;
  1643  000D24  C013  F002         	movff	L6470_Run@speed,CMD_Send@val
  1644  000D28  C014  F003         	movff	L6470_Run@speed+1,CMD_Send@val+1
  1645  000D2C  C015  F004         	movff	L6470_Run@speed+2,CMD_Send@val+2
  1646  000D30  C016  F005         	movff	L6470_Run@speed+3,CMD_Send@val+3
  1647  000D34  0E00               	movlw	0
  1648  000D36  6E07               	movwf	CMD_Send@num+1,c
  1649  000D38  0E03               	movlw	3
  1650  000D3A  6E06               	movwf	CMD_Send@num,c
  1651  000D3C  5017               	movf	L6470_Run@dir,w,c
  1652  000D3E  0950               	iorlw	80
  1653  000D40  ECF3  F003         	call	_CMD_Send
  1654  000D44  0012               	return		;funcret
  1655  000D46                     __end_of_L6470_Run:
  1656                           	opt callstack 0
  1657                           
  1658 ;; *************** function _L6470_Move *****************
  1659 ;; Defined at:
  1660 ;;		line 188 in file "L6470.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  dir             1    wreg     unsigned char 
  1663 ;;  step            4   18[COMRAM] unsigned long 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;  dir             1   22[COMRAM] unsigned char 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1678 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1679 ;;Total ram usage:        5 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    3
  1682 ;; This function calls:
  1683 ;;		_CMD_Send
  1684 ;; This function is called by:
  1685 ;;		_L6470_command
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text9
  1690  000CE4                     __ptext9:
  1691                           	opt callstack 0
  1692  000CE4                     _L6470_Move:
  1693                           	opt callstack 25
  1694                           
  1695                           ;incstack = 0
  1696                           ;L6470_Move@dir stored from wreg
  1697  000CE4  6E17               	movwf	L6470_Move@dir,c
  1698                           
  1699                           ;L6470.c: 188: void L6470_Move(char dir,unsigned long step);L6470.c: 189: {;L6470.c: 190
      +                          :     PORTCbits.RC2 = 1;
  1700  000CE6  8482               	bsf	3970,2,c	;volatile
  1701  000CE8                     l2703:
  1702  000CE8  5033               	movf	_Busy,w,c
  1703  000CEA  1034               	iorwf	_Busy+1,w,c
  1704  000CEC  A4D8               	btfss	status,2,c
  1705  000CEE  D002               	goto	u900
  1706  000CF0  A281               	btfss	3969,1,c	;volatile
  1707  000CF2  D7FA               	goto	l2703
  1708  000CF4                     u900:
  1709                           
  1710                           ;L6470.c: 192:      CMD_Send(0x40|dir,step,3) ;
  1711  000CF4  C013  F002         	movff	L6470_Move@step,CMD_Send@val
  1712  000CF8  C014  F003         	movff	L6470_Move@step+1,CMD_Send@val+1
  1713  000CFC  C015  F004         	movff	L6470_Move@step+2,CMD_Send@val+2
  1714  000D00  C016  F005         	movff	L6470_Move@step+3,CMD_Send@val+3
  1715  000D04  0E00               	movlw	0
  1716  000D06  6E07               	movwf	CMD_Send@num+1,c
  1717  000D08  0E03               	movlw	3
  1718  000D0A  6E06               	movwf	CMD_Send@num,c
  1719  000D0C  5017               	movf	L6470_Move@dir,w,c
  1720  000D0E  0940               	iorlw	64
  1721  000D10  ECF3  F003         	call	_CMD_Send
  1722  000D14  0012               	return		;funcret
  1723  000D16                     __end_of_L6470_Move:
  1724                           	opt callstack 0
  1725                           
  1726 ;; *************** function _Wait *****************
  1727 ;; Defined at:
  1728 ;;		line 165 in file "main.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  num             2    0[COMRAM] unsigned int 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  i               2    3[COMRAM] int 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1745 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1746 ;;Total ram usage:        5 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    1
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text10
  1757  000D46                     __ptext10:
  1758                           	opt callstack 0
  1759  000D46                     _Wait:
  1760                           	opt callstack 29
  1761                           
  1762                           ;main.c: 165: void Wait(unsigned int num);main.c: 166: {;main.c: 167:      int i ;;main.
      +                          c: 170:      for (i=0 ; i<num ; i++) {
  1763                           
  1764                           ;incstack = 0
  1765  000D46  0E00               	movlw	0
  1766  000D48  6E05               	movwf	Wait@i+1,c
  1767  000D4A  0E00               	movlw	0
  1768  000D4C  6E04               	movwf	Wait@i,c
  1769  000D4E  D009               	goto	l369
  1770  000D50                     l3039:
  1771                           
  1772                           ;main.c: 171:           _delay((unsigned long)((10)*(16000000/4000.0))) ;
  1773  000D50  0E34               	movlw	52
  1774  000D52  6E03               	movwf	??_Wait& (0+255),c
  1775  000D54  0EF2               	movlw	242
  1776  000D56                     u1297:
  1777  000D56  2EE8               	decfsz	wreg,f,c
  1778  000D58  D7FE               	bra	u1297
  1779  000D5A  2E03               	decfsz	??_Wait& (0+255),f,c
  1780  000D5C  D7FC               	bra	u1297
  1781                           
  1782                           ;main.c: 172:      }
  1783  000D5E  4A04               	infsnz	Wait@i,f,c
  1784  000D60  2A05               	incf	Wait@i+1,f,c
  1785  000D62                     l369:
  1786  000D62  5001               	movf	Wait@num,w,c
  1787  000D64  5C04               	subwf	Wait@i,w,c
  1788  000D66  5002               	movf	Wait@num+1,w,c
  1789  000D68  5805               	subwfb	Wait@i+1,w,c
  1790  000D6A  B0D8               	btfsc	status,0,c
  1791  000D6C  0012               	return	
  1792  000D6E  D7F0               	goto	l3039
  1793  000D70                     __end_of_Wait:
  1794                           	opt callstack 0
  1795                           
  1796 ;; *************** function _SPI_Init *****************
  1797 ;; Defined at:
  1798 ;;		line 36 in file "SPIlib.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  mode            1    wreg     unsigned char 
  1801 ;;  divider         1    0[COMRAM] unsigned char 
  1802 ;;  sdo             2    1[COMRAM] int 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  mode            1    5[COMRAM] unsigned char 
  1805 ;;  con             1    4[COMRAM] unsigned char 
  1806 ;;  stat            1    3[COMRAM] unsigned char 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		wreg, status,2, status,0
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1816 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1817 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1819 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1820 ;;Total ram usage:        6 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; Hardware stack levels required when called:    1
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text11
  1831  000C2C                     __ptext11:
  1832                           	opt callstack 0
  1833  000C2C                     _SPI_Init:
  1834                           	opt callstack 29
  1835                           
  1836                           ;incstack = 0
  1837                           ;SPI_Init@mode stored from wreg
  1838  000C2C  6E06               	movwf	SPI_Init@mode,c
  1839                           
  1840                           ;SPIlib.c: 36: void SPI_Init(char mode,char divider,int sdo);SPIlib.c: 37: {;SPIlib.c: 3
      +                          8:      char con , stat ;;SPIlib.c: 65:      con = 0b00100000 ;
  1841  000C2E  0E20               	movlw	32
  1842  000C30  6E05               	movwf	SPI_Init@con,c
  1843                           
  1844                           ;SPIlib.c: 66:      stat = 0b00000000 ;
  1845  000C32  0E00               	movlw	0
  1846  000C34  6E04               	movwf	SPI_Init@stat,c
  1847                           
  1848                           ;SPIlib.c: 67:      con = con | divider ;
  1849  000C36  5005               	movf	SPI_Init@con,w,c
  1850  000C38  1001               	iorwf	SPI_Init@divider,w,c
  1851  000C3A  6E05               	movwf	SPI_Init@con,c
  1852                           
  1853                           ;SPIlib.c: 68:      if (mode == 0 || mode == 2) {
  1854  000C3C  5006               	movf	SPI_Init@mode,w,c
  1855  000C3E  B4D8               	btfsc	status,2,c
  1856  000C40  D004               	goto	u1110
  1857  000C42  0E02               	movlw	2
  1858  000C44  1806               	xorwf	SPI_Init@mode,w,c
  1859  000C46  A4D8               	btfss	status,2,c
  1860  000C48  D003               	goto	l732
  1861  000C4A                     u1110:
  1862                           
  1863                           ;SPIlib.c: 69:           stat = stat | 0x40 ;
  1864  000C4A  5004               	movf	SPI_Init@stat,w,c
  1865  000C4C  0940               	iorlw	64
  1866  000C4E  6E04               	movwf	SPI_Init@stat,c
  1867  000C50                     l732:
  1868                           
  1869                           ;SPIlib.c: 71:      if (mode == 2 || mode == 3) {
  1870  000C50  0E02               	movlw	2
  1871  000C52  1806               	xorwf	SPI_Init@mode,w,c
  1872  000C54  B4D8               	btfsc	status,2,c
  1873  000C56  D004               	goto	u1130
  1874  000C58  0E03               	movlw	3
  1875  000C5A  1806               	xorwf	SPI_Init@mode,w,c
  1876  000C5C  A4D8               	btfss	status,2,c
  1877  000C5E  D003               	goto	l2963
  1878  000C60                     u1130:
  1879                           
  1880                           ;SPIlib.c: 72:           con = con | 0x10 ;
  1881  000C60  5005               	movf	SPI_Init@con,w,c
  1882  000C62  0910               	iorlw	16
  1883  000C64  6E05               	movwf	SPI_Init@con,c
  1884  000C66                     l2963:
  1885                           
  1886                           ;SPIlib.c: 74:      SSPCON1 = con ;
  1887  000C66  C005  FFC6         	movff	SPI_Init@con,4038	;volatile
  1888                           
  1889                           ;SPIlib.c: 75:      SSPSTAT = stat ;
  1890  000C6A  C004  FFC7         	movff	SPI_Init@stat,4039	;volatile
  1891                           
  1892                           ;SPIlib.c: 76:      PIR1bits.SSPIF = 0 ;
  1893  000C6E  969E               	bcf	3998,3,c	;volatile
  1894                           
  1895                           ;SPIlib.c: 77:      INTCONbits.PEIE = 1 ;
  1896  000C70  8CF2               	bsf	4082,6,c	;volatile
  1897                           
  1898                           ;SPIlib.c: 78:      INTCONbits.GIE = 1 ;
  1899  000C72  8EF2               	bsf	4082,7,c	;volatile
  1900  000C74  0012               	return		;funcret
  1901  000C76                     __end_of_SPI_Init:
  1902                           	opt callstack 0
  1903                           
  1904 ;; *************** function _L6470_Init *****************
  1905 ;; Defined at:
  1906 ;;		line 62 in file "L6470.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  val             4   27[COMRAM] long 
  1911 ;;  i               2   31[COMRAM] int 
  1912 ;;  config          2   24[COMRAM] struct CONFIG_t
  1913 ;;  step_mode       1   26[COMRAM] struct STEP_MODE_t
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  4   20[COMRAM] unsigned long 
  1916 ;; Registers used:
  1917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1924 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1926 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1927 ;;Total ram usage:       13 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    3
  1930 ;; This function calls:
  1931 ;;		_CMD_Send
  1932 ;;		_L6470_GetRegister
  1933 ;;		_SPI_transfer
  1934 ;; This function is called by:
  1935 ;;		_main
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text12
  1940  000258                     __ptext12:
  1941                           	opt callstack 0
  1942  000258                     _L6470_Init:
  1943                           	opt callstack 27
  1944                           
  1945                           ;L6470.c: 64:      union STEP_MODE_t step_mode ;;L6470.c: 65:      union CONFIG_t config
      +                           ;;L6470.c: 66:      long val ;;L6470.c: 67:      int i ;;L6470.c: 70:      for (i=0 ; i
      +                          <4 ; i++) {
  1946                           
  1947                           ;incstack = 0
  1948  000258  0E00               	movlw	0
  1949  00025A  6E21               	movwf	L6470_Init@i+1,c
  1950  00025C  0E00               	movlw	0
  1951  00025E  6E20               	movwf	L6470_Init@i,c
  1952  000260                     l396:
  1953                           
  1954                           ;L6470.c: 71:           PORTBbits.RB0 = 0 ;
  1955  000260  9081               	bcf	3969,0,c	;volatile
  1956                           
  1957                           ;L6470.c: 72:           SPI_transfer(0x00) ;
  1958  000262  0E00               	movlw	0
  1959  000264  ECB8  F006         	call	_SPI_transfer
  1960                           
  1961                           ;L6470.c: 73:           PORTBbits.RB0 = 1 ;
  1962  000268  8081               	bsf	3969,0,c	;volatile
  1963                           
  1964                           ;L6470.c: 74:      }
  1965  00026A  4A20               	infsnz	L6470_Init@i,f,c
  1966  00026C  2A21               	incf	L6470_Init@i+1,f,c
  1967  00026E  BE21               	btfsc	L6470_Init@i+1,7,c
  1968  000270  D7F7               	goto	l396
  1969  000272  5021               	movf	L6470_Init@i+1,w,c
  1970  000274  E104               	bnz	u1140
  1971  000276  0E04               	movlw	4
  1972  000278  5C20               	subwf	L6470_Init@i,w,c
  1973  00027A  A0D8               	btfss	status,0,c
  1974  00027C  D7F1               	goto	l396
  1975  00027E                     u1140:
  1976                           
  1977                           ;L6470.c: 75:      PORTBbits.RB0 = 0 ;
  1978  00027E  9081               	bcf	3969,0,c	;volatile
  1979                           
  1980                           ;L6470.c: 76:      SPI_transfer(0xC0) ;
  1981  000280  0EC0               	movlw	192
  1982  000282  ECB8  F006         	call	_SPI_transfer
  1983                           
  1984                           ;L6470.c: 77:      PORTBbits.RB0 = 1 ;
  1985  000286  8081               	bsf	3969,0,c	;volatile
  1986                           
  1987                           ;L6470.c: 79:      CMD_Send(0x05,0x008A,2) ;
  1988  000288  0E8A               	movlw	138
  1989  00028A  6E02               	movwf	CMD_Send@val,c
  1990  00028C  0E00               	movlw	0
  1991  00028E  6E03               	movwf	CMD_Send@val+1,c
  1992  000290  0E00               	movlw	0
  1993  000292  6E04               	movwf	CMD_Send@val+2,c
  1994  000294  0E00               	movlw	0
  1995  000296  6E05               	movwf	CMD_Send@val+3,c
  1996  000298  0E00               	movlw	0
  1997  00029A  6E07               	movwf	CMD_Send@num+1,c
  1998  00029C  0E02               	movlw	2
  1999  00029E  6E06               	movwf	CMD_Send@num,c
  2000  0002A0  0E05               	movlw	5
  2001  0002A2  ECF3  F003         	call	_CMD_Send
  2002                           
  2003                           ;L6470.c: 80:      CMD_Send(0x06,0x008A,2) ;
  2004  0002A6  0E8A               	movlw	138
  2005  0002A8  6E02               	movwf	CMD_Send@val,c
  2006  0002AA  0E00               	movlw	0
  2007  0002AC  6E03               	movwf	CMD_Send@val+1,c
  2008  0002AE  0E00               	movlw	0
  2009  0002B0  6E04               	movwf	CMD_Send@val+2,c
  2010  0002B2  0E00               	movlw	0
  2011  0002B4  6E05               	movwf	CMD_Send@val+3,c
  2012  0002B6  0E00               	movlw	0
  2013  0002B8  6E07               	movwf	CMD_Send@num+1,c
  2014  0002BA  0E02               	movlw	2
  2015  0002BC  6E06               	movwf	CMD_Send@num,c
  2016  0002BE  0E06               	movlw	6
  2017  0002C0  ECF3  F003         	call	_CMD_Send
  2018                           
  2019                           ;L6470.c: 81:      CMD_Send(0x07,0x0020,2) ;
  2020  0002C4  0E20               	movlw	32
  2021  0002C6  6E02               	movwf	CMD_Send@val,c
  2022  0002C8  0E00               	movlw	0
  2023  0002CA  6E03               	movwf	CMD_Send@val+1,c
  2024  0002CC  0E00               	movlw	0
  2025  0002CE  6E04               	movwf	CMD_Send@val+2,c
  2026  0002D0  0E00               	movlw	0
  2027  0002D2  6E05               	movwf	CMD_Send@val+3,c
  2028  0002D4  0E00               	movlw	0
  2029  0002D6  6E07               	movwf	CMD_Send@num+1,c
  2030  0002D8  0E02               	movlw	2
  2031  0002DA  6E06               	movwf	CMD_Send@num,c
  2032  0002DC  0E07               	movlw	7
  2033  0002DE  ECF3  F003         	call	_CMD_Send
  2034                           
  2035                           ;L6470.c: 82:      CMD_Send(0x08,0x0001,2) ;
  2036  0002E2  0E01               	movlw	1
  2037  0002E4  6E02               	movwf	CMD_Send@val,c
  2038  0002E6  0E00               	movlw	0
  2039  0002E8  6E03               	movwf	CMD_Send@val+1,c
  2040  0002EA  0E00               	movlw	0
  2041  0002EC  6E04               	movwf	CMD_Send@val+2,c
  2042  0002EE  0E00               	movlw	0
  2043  0002F0  6E05               	movwf	CMD_Send@val+3,c
  2044  0002F2  0E00               	movlw	0
  2045  0002F4  6E07               	movwf	CMD_Send@num+1,c
  2046  0002F6  0E02               	movlw	2
  2047  0002F8  6E06               	movwf	CMD_Send@num,c
  2048  0002FA  0E08               	movlw	8
  2049  0002FC  ECF3  F003         	call	_CMD_Send
  2050                           
  2051                           ;L6470.c: 83:      CMD_Send(0x09,0xFF,1) ;
  2052  000300  0EFF               	movlw	255
  2053  000302  6E02               	movwf	CMD_Send@val,c
  2054  000304  0E00               	movlw	0
  2055  000306  6E03               	movwf	CMD_Send@val+1,c
  2056  000308  0E00               	movlw	0
  2057  00030A  6E04               	movwf	CMD_Send@val+2,c
  2058  00030C  0E00               	movlw	0
  2059  00030E  6E05               	movwf	CMD_Send@val+3,c
  2060  000310  0E00               	movlw	0
  2061  000312  6E07               	movwf	CMD_Send@num+1,c
  2062  000314  0E01               	movlw	1
  2063  000316  6E06               	movwf	CMD_Send@num,c
  2064  000318  0E09               	movlw	9
  2065  00031A  ECF3  F003         	call	_CMD_Send
  2066                           
  2067                           ;L6470.c: 84:      CMD_Send(0x0A,0xF0,1) ;
  2068  00031E  0EF0               	movlw	240
  2069  000320  6E02               	movwf	CMD_Send@val,c
  2070  000322  0E00               	movlw	0
  2071  000324  6E03               	movwf	CMD_Send@val+1,c
  2072  000326  0E00               	movlw	0
  2073  000328  6E04               	movwf	CMD_Send@val+2,c
  2074  00032A  0E00               	movlw	0
  2075  00032C  6E05               	movwf	CMD_Send@val+3,c
  2076  00032E  0E00               	movlw	0
  2077  000330  6E07               	movwf	CMD_Send@num+1,c
  2078  000332  0E01               	movlw	1
  2079  000334  6E06               	movwf	CMD_Send@num,c
  2080  000336  0E0A               	movlw	10
  2081  000338  ECF3  F003         	call	_CMD_Send
  2082                           
  2083                           ;L6470.c: 85:      CMD_Send(0x0B,0xF0,1) ;
  2084  00033C  0EF0               	movlw	240
  2085  00033E  6E02               	movwf	CMD_Send@val,c
  2086  000340  0E00               	movlw	0
  2087  000342  6E03               	movwf	CMD_Send@val+1,c
  2088  000344  0E00               	movlw	0
  2089  000346  6E04               	movwf	CMD_Send@val+2,c
  2090  000348  0E00               	movlw	0
  2091  00034A  6E05               	movwf	CMD_Send@val+3,c
  2092  00034C  0E00               	movlw	0
  2093  00034E  6E07               	movwf	CMD_Send@num+1,c
  2094  000350  0E01               	movlw	1
  2095  000352  6E06               	movwf	CMD_Send@num,c
  2096  000354  0E0B               	movlw	11
  2097  000356  ECF3  F003         	call	_CMD_Send
  2098                           
  2099                           ;L6470.c: 86:      CMD_Send(0x0C,0xF0,1) ;
  2100  00035A  0EF0               	movlw	240
  2101  00035C  6E02               	movwf	CMD_Send@val,c
  2102  00035E  0E00               	movlw	0
  2103  000360  6E03               	movwf	CMD_Send@val+1,c
  2104  000362  0E00               	movlw	0
  2105  000364  6E04               	movwf	CMD_Send@val+2,c
  2106  000366  0E00               	movlw	0
  2107  000368  6E05               	movwf	CMD_Send@val+3,c
  2108  00036A  0E00               	movlw	0
  2109  00036C  6E07               	movwf	CMD_Send@num+1,c
  2110  00036E  0E01               	movlw	1
  2111  000370  6E06               	movwf	CMD_Send@num,c
  2112  000372  0E0C               	movlw	12
  2113  000374  ECF3  F003         	call	_CMD_Send
  2114                           
  2115                           ;L6470.c: 87:      CMD_Send(0x13,0x0F,1) ;
  2116  000378  0E0F               	movlw	15
  2117  00037A  6E02               	movwf	CMD_Send@val,c
  2118  00037C  0E00               	movlw	0
  2119  00037E  6E03               	movwf	CMD_Send@val+1,c
  2120  000380  0E00               	movlw	0
  2121  000382  6E04               	movwf	CMD_Send@val+2,c
  2122  000384  0E00               	movlw	0
  2123  000386  6E05               	movwf	CMD_Send@val+3,c
  2124  000388  0E00               	movlw	0
  2125  00038A  6E07               	movwf	CMD_Send@num+1,c
  2126  00038C  0E01               	movlw	1
  2127  00038E  6E06               	movwf	CMD_Send@num,c
  2128  000390  0E13               	movlw	19
  2129  000392  ECF3  F003         	call	_CMD_Send
  2130                           
  2131                           ;L6470.c: 88:      CMD_Send(0x14,0x7F,1) ;
  2132  000396  0E7F               	movlw	127
  2133  000398  6E02               	movwf	CMD_Send@val,c
  2134  00039A  0E00               	movlw	0
  2135  00039C  6E03               	movwf	CMD_Send@val+1,c
  2136  00039E  0E00               	movlw	0
  2137  0003A0  6E04               	movwf	CMD_Send@val+2,c
  2138  0003A2  0E00               	movlw	0
  2139  0003A4  6E05               	movwf	CMD_Send@val+3,c
  2140  0003A6  0E00               	movlw	0
  2141  0003A8  6E07               	movwf	CMD_Send@num+1,c
  2142  0003AA  0E01               	movlw	1
  2143  0003AC  6E06               	movwf	CMD_Send@num,c
  2144  0003AE  0E14               	movlw	20
  2145  0003B0  ECF3  F003         	call	_CMD_Send
  2146                           
  2147                           ;L6470.c: 90:      step_mode.DT = 0x07 ;
  2148  0003B4  0E07               	movlw	7
  2149  0003B6  6E1B               	movwf	L6470_Init@step_mode,c
  2150                           
  2151                           ;L6470.c: 91:      step_mode.STEP_SEL = 0 ;
  2152  0003B8  0EF8               	movlw	-8
  2153  0003BA  161B               	andwf	L6470_Init@step_mode,f,c
  2154                           
  2155                           ;L6470.c: 92:      step_mode.SYNC_EN = Busy = 0 ;
  2156  0003BC  0E00               	movlw	0
  2157  0003BE  6E34               	movwf	_Busy+1,c
  2158  0003C0  0E00               	movlw	0
  2159  0003C2  6E33               	movwf	_Busy,c
  2160  0003C4  B033               	btfsc	_Busy,0,c
  2161  0003C6  D002               	bra	u1155
  2162  0003C8  9E1B               	bcf	L6470_Init@step_mode,7,c
  2163  0003CA  D001               	bra	u1156
  2164  0003CC                     u1155:
  2165  0003CC  8E1B               	bsf	L6470_Init@step_mode,7,c
  2166  0003CE                     u1156:
  2167                           
  2168                           ;L6470.c: 93:      val = step_mode.DT ;
  2169  0003CE  501B               	movf	L6470_Init@step_mode,w,c
  2170  0003D0  6E1C               	movwf	L6470_Init@val,c
  2171  0003D2  6A1D               	clrf	L6470_Init@val+1,c
  2172  0003D4  6A1E               	clrf	L6470_Init@val+2,c
  2173  0003D6  6A1F               	clrf	L6470_Init@val+3,c
  2174                           
  2175                           ;L6470.c: 94:      CMD_Send(0x16,val,1) ;
  2176  0003D8  C01C  F002         	movff	L6470_Init@val,CMD_Send@val
  2177  0003DC  C01D  F003         	movff	L6470_Init@val+1,CMD_Send@val+1
  2178  0003E0  C01E  F004         	movff	L6470_Init@val+2,CMD_Send@val+2
  2179  0003E4  C01F  F005         	movff	L6470_Init@val+3,CMD_Send@val+3
  2180  0003E8  0E00               	movlw	0
  2181  0003EA  6E07               	movwf	CMD_Send@num+1,c
  2182  0003EC  0E01               	movlw	1
  2183  0003EE  6E06               	movwf	CMD_Send@num,c
  2184  0003F0  0E16               	movlw	22
  2185  0003F2  ECF3  F003         	call	_CMD_Send
  2186                           
  2187                           ;L6470.c: 96:      config.DT = 0x2F88 ;
  2188  0003F6  0E2F               	movlw	47
  2189  0003F8  6E1A               	movwf	L6470_Init@config+1,c
  2190  0003FA  0E88               	movlw	136
  2191  0003FC  6E19               	movwf	L6470_Init@config,c
  2192                           
  2193                           ;L6470.c: 97:      config.OSC_SEL = 0 ;
  2194  0003FE  0EF8               	movlw	-8
  2195  000400  1619               	andwf	L6470_Init@config,f,c
  2196                           
  2197                           ;L6470.c: 98:      config.EXT_CLK = 0 ;
  2198  000402  9619               	bcf	L6470_Init@config,3,c
  2199                           
  2200                           ;L6470.c: 99:      config.SW_MODE = 1 ;
  2201  000404  8819               	bsf	L6470_Init@config,4,c
  2202                           
  2203                           ;L6470.c: 100:      val = config.DT ;
  2204  000406  C019  F01C         	movff	L6470_Init@config,L6470_Init@val
  2205  00040A  C01A  F01D         	movff	L6470_Init@config+1,L6470_Init@val+1
  2206  00040E  6A1E               	clrf	L6470_Init@val+2,c
  2207  000410  6A1F               	clrf	L6470_Init@val+3,c
  2208                           
  2209                           ;L6470.c: 101:      CMD_Send(0x18,val,2) ;
  2210  000412  C01C  F002         	movff	L6470_Init@val,CMD_Send@val
  2211  000416  C01D  F003         	movff	L6470_Init@val+1,CMD_Send@val+1
  2212  00041A  C01E  F004         	movff	L6470_Init@val+2,CMD_Send@val+2
  2213  00041E  C01F  F005         	movff	L6470_Init@val+3,CMD_Send@val+3
  2214  000422  0E00               	movlw	0
  2215  000424  6E07               	movwf	CMD_Send@num+1,c
  2216  000426  0E02               	movlw	2
  2217  000428  6E06               	movwf	CMD_Send@num,c
  2218  00042A  0E18               	movlw	24
  2219  00042C  ECF3  F003         	call	_CMD_Send
  2220                           
  2221                           ;L6470.c: 102:      return L6470_GetRegister(0x19,2) ;
  2222  000430  0E00               	movlw	0
  2223  000432  6E03               	movwf	L6470_GetRegister@num+1,c
  2224  000434  0E02               	movlw	2
  2225  000436  6E02               	movwf	L6470_GetRegister@num,c
  2226  000438  0E19               	movlw	25
  2227  00043A  EC94  F003         	call	_L6470_GetRegister
  2228  00043E  C002  F015         	movff	?_L6470_GetRegister,?_L6470_Init
  2229  000442  C003  F016         	movff	?_L6470_GetRegister+1,?_L6470_Init+1
  2230  000446  C004  F017         	movff	?_L6470_GetRegister+2,?_L6470_Init+2
  2231  00044A  C005  F018         	movff	?_L6470_GetRegister+3,?_L6470_Init+3
  2232  00044E  0012               	return		;funcret
  2233  000450                     __end_of_L6470_Init:
  2234                           	opt callstack 0
  2235                           
  2236 ;; *************** function _L6470_GetRegister *****************
  2237 ;; Defined at:
  2238 ;;		line 112 in file "L6470.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  regadrs         1    wreg     unsigned char 
  2241 ;;  num             2    1[COMRAM] int 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  regadrs         1   15[COMRAM] unsigned char 
  2244 ;;  ans             4   16[COMRAM] unsigned long 
  2245 ;;  dt              4    9[COMRAM] unsigned long 
  2246 ;;  i               2   13[COMRAM] int 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  4    1[COMRAM] unsigned long 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2256 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2257 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2258 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2259 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2260 ;;Total ram usage:       19 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    2
  2263 ;; This function calls:
  2264 ;;		_SPI_transfer
  2265 ;; This function is called by:
  2266 ;;		_L6470_Init
  2267 ;;		_L6470_ALARM
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text13
  2272  000728                     __ptext13:
  2273                           	opt callstack 0
  2274  000728                     _L6470_GetRegister:
  2275                           	opt callstack 27
  2276                           
  2277                           ;incstack = 0
  2278                           ;L6470_GetRegister@regadrs stored from wreg
  2279  000728  6E10               	movwf	L6470_GetRegister@regadrs,c
  2280                           
  2281                           ;L6470.c: 112: unsigned long L6470_GetRegister(char regadrs,int num);L6470.c: 113: {;L64
      +                          70.c: 114:      unsigned long ans , dt ;;L6470.c: 115:      int i ;;L6470.c: 117:      P
      +                          ORTBbits.RB0 = 0 ;
  2282  00072A  9081               	bcf	3969,0,c	;volatile
  2283                           
  2284                           ;L6470.c: 118:      if (regadrs == 0x19) SPI_transfer(0xD0) ;
  2285  00072C  0E19               	movlw	25
  2286  00072E  1810               	xorwf	L6470_GetRegister@regadrs,w,c
  2287  000730  A4D8               	btfss	status,2,c
  2288  000732  D004               	goto	l2841
  2289  000734  0ED0               	movlw	208
  2290  000736  ECB8  F006         	call	_SPI_transfer
  2291  00073A  D004               	goto	l2843
  2292  00073C                     l2841:
  2293  00073C  5010               	movf	L6470_GetRegister@regadrs,w,c
  2294  00073E  0920               	iorlw	32
  2295  000740  ECB8  F006         	call	_SPI_transfer
  2296  000744                     l2843:
  2297                           
  2298                           ;L6470.c: 120:      PORTBbits.RB0 = 1 ;
  2299  000744  8081               	bsf	3969,0,c	;volatile
  2300                           
  2301                           ;L6470.c: 121:      ans = dt = 0 ;
  2302  000746  0E00               	movlw	0
  2303  000748  6E0A               	movwf	L6470_GetRegister@dt,c
  2304  00074A  0E00               	movlw	0
  2305  00074C  6E0B               	movwf	L6470_GetRegister@dt+1,c
  2306  00074E  0E00               	movlw	0
  2307  000750  6E0C               	movwf	L6470_GetRegister@dt+2,c
  2308  000752  0E00               	movlw	0
  2309  000754  6E0D               	movwf	L6470_GetRegister@dt+3,c
  2310  000756  C00A  F011         	movff	L6470_GetRegister@dt,L6470_GetRegister@ans
  2311  00075A  C00B  F012         	movff	L6470_GetRegister@dt+1,L6470_GetRegister@ans+1
  2312  00075E  C00C  F013         	movff	L6470_GetRegister@dt+2,L6470_GetRegister@ans+2
  2313  000762  C00D  F014         	movff	L6470_GetRegister@dt+3,L6470_GetRegister@ans+3
  2314                           
  2315                           ;L6470.c: 122:      for (i=0 ; i<num ; i++) {
  2316  000766  0E00               	movlw	0
  2317  000768  6E0F               	movwf	L6470_GetRegister@i+1,c
  2318  00076A  0E00               	movlw	0
  2319  00076C  6E0E               	movwf	L6470_GetRegister@i,c
  2320  00076E  D028               	goto	l2861
  2321  000770                     l2849:
  2322                           
  2323                           ;L6470.c: 123:           ans = ans << 8 ;
  2324  000770  C011  F007         	movff	L6470_GetRegister@ans,??_L6470_GetRegister+1
  2325  000774  C012  F008         	movff	L6470_GetRegister@ans+1,??_L6470_GetRegister+2
  2326  000778  C013  F009         	movff	L6470_GetRegister@ans+2,??_L6470_GetRegister+3
  2327  00077C  6A06               	clrf	??_L6470_GetRegister& (0+255),c
  2328  00077E  C006  F011         	movff	??_L6470_GetRegister,L6470_GetRegister@ans
  2329  000782  C007  F012         	movff	??_L6470_GetRegister+1,L6470_GetRegister@ans+1
  2330  000786  C008  F013         	movff	??_L6470_GetRegister+2,L6470_GetRegister@ans+2
  2331  00078A  C009  F014         	movff	??_L6470_GetRegister+3,L6470_GetRegister@ans+3
  2332                           
  2333                           ;L6470.c: 124:           PORTBbits.RB0 = 0 ;
  2334  00078E  9081               	bcf	3969,0,c	;volatile
  2335                           
  2336                           ;L6470.c: 125:           dt = SPI_transfer(0x00) ;
  2337  000790  0E00               	movlw	0
  2338  000792  ECB8  F006         	call	_SPI_transfer
  2339  000796  6E06               	movwf	??_L6470_GetRegister& (0+255),c
  2340  000798  5006               	movf	??_L6470_GetRegister,w,c
  2341  00079A  6E0A               	movwf	L6470_GetRegister@dt,c
  2342  00079C  6A0B               	clrf	L6470_GetRegister@dt+1,c
  2343  00079E  6A0C               	clrf	L6470_GetRegister@dt+2,c
  2344  0007A0  6A0D               	clrf	L6470_GetRegister@dt+3,c
  2345                           
  2346                           ;L6470.c: 126:           PORTBbits.RB0 = 1 ;
  2347  0007A2  8081               	bsf	3969,0,c	;volatile
  2348                           
  2349                           ;L6470.c: 127:           ans = ans | dt ;
  2350  0007A4  500A               	movf	L6470_GetRegister@dt,w,c
  2351  0007A6  1011               	iorwf	L6470_GetRegister@ans,w,c
  2352  0007A8  6E11               	movwf	L6470_GetRegister@ans,c
  2353  0007AA  500B               	movf	L6470_GetRegister@dt+1,w,c
  2354  0007AC  1012               	iorwf	L6470_GetRegister@ans+1,w,c
  2355  0007AE  6E12               	movwf	L6470_GetRegister@ans+1,c
  2356  0007B0  500C               	movf	L6470_GetRegister@dt+2,w,c
  2357  0007B2  1013               	iorwf	L6470_GetRegister@ans+2,w,c
  2358  0007B4  6E13               	movwf	L6470_GetRegister@ans+2,c
  2359  0007B6  500D               	movf	L6470_GetRegister@dt+3,w,c
  2360  0007B8  1014               	iorwf	L6470_GetRegister@ans+3,w,c
  2361  0007BA  6E14               	movwf	L6470_GetRegister@ans+3,c
  2362                           
  2363                           ;L6470.c: 128:      }
  2364  0007BC  4A0E               	infsnz	L6470_GetRegister@i,f,c
  2365  0007BE  2A0F               	incf	L6470_GetRegister@i+1,f,c
  2366  0007C0                     l2861:
  2367  0007C0  5002               	movf	L6470_GetRegister@num,w,c
  2368  0007C2  5C0E               	subwf	L6470_GetRegister@i,w,c
  2369  0007C4  500F               	movf	L6470_GetRegister@i+1,w,c
  2370  0007C6  0A80               	xorlw	128
  2371  0007C8  6E06               	movwf	??_L6470_GetRegister& (0+255),c
  2372  0007CA  5003               	movf	L6470_GetRegister@num+1,w,c
  2373  0007CC  0A80               	xorlw	128
  2374  0007CE  5806               	subwfb	??_L6470_GetRegister& (0+255),w,c
  2375  0007D0  A0D8               	btfss	status,0,c
  2376  0007D2  D7CE               	goto	l2849
  2377                           
  2378                           ;L6470.c: 129:      return ans ;
  2379  0007D4  C011  F002         	movff	L6470_GetRegister@ans,?_L6470_GetRegister
  2380  0007D8  C012  F003         	movff	L6470_GetRegister@ans+1,?_L6470_GetRegister+1
  2381  0007DC  C013  F004         	movff	L6470_GetRegister@ans+2,?_L6470_GetRegister+2
  2382  0007E0  C014  F005         	movff	L6470_GetRegister@ans+3,?_L6470_GetRegister+3
  2383  0007E4  0012               	return		;funcret
  2384  0007E6                     __end_of_L6470_GetRegister:
  2385                           	opt callstack 0
  2386                           
  2387 ;; *************** function _CMD_Send *****************
  2388 ;; Defined at:
  2389 ;;		line 27 in file "L6470.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  cmd             1    wreg     unsigned char 
  2392 ;;  val             4    1[COMRAM] unsigned long 
  2393 ;;  num             2    5[COMRAM] int 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  cmd             1   15[COMRAM] unsigned char 
  2396 ;;  dt              4   11[COMRAM] unsigned char [4]
  2397 ;;  i               2   16[COMRAM] int 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2407 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2408 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2409 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2410 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2411 ;;Total ram usage:       17 bytes
  2412 ;; Hardware stack levels used:    1
  2413 ;; Hardware stack levels required when called:    2
  2414 ;; This function calls:
  2415 ;;		_SPI_transfer
  2416 ;; This function is called by:
  2417 ;;		_L6470_Init
  2418 ;;		_L6470_Run
  2419 ;;		_L6470_Move
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text14
  2424  0007E6                     __ptext14:
  2425                           	opt callstack 0
  2426  0007E6                     _CMD_Send:
  2427                           	opt callstack 25
  2428                           
  2429                           ;incstack = 0
  2430                           ;CMD_Send@cmd stored from wreg
  2431  0007E6  6E10               	movwf	CMD_Send@cmd,c
  2432                           
  2433                           ;L6470.c: 27: void CMD_Send(char cmd,unsigned long val,int num);L6470.c: 28: {;L6470.c: 
      +                          29:      unsigned char dt[4] ;;L6470.c: 30:      int i ;;L6470.c: 32:      for (i=0 ; i<
      +                          num ; i++) {
  2434  0007E8  0E00               	movlw	0
  2435  0007EA  6E12               	movwf	CMD_Send@i+1,c
  2436  0007EC  0E00               	movlw	0
  2437  0007EE  6E11               	movwf	CMD_Send@i,c
  2438  0007F0  D021               	goto	l2667
  2439  0007F2                     l2661:
  2440                           
  2441                           ;L6470.c: 33:           dt[i] = val & 0xff ;
  2442  0007F2  0E0C               	movlw	low CMD_Send@dt
  2443  0007F4  2411               	addwf	CMD_Send@i,w,c
  2444  0007F6  6ED9               	movwf	fsr2l,c
  2445  0007F8  0E00               	movlw	high CMD_Send@dt
  2446  0007FA  2012               	addwfc	CMD_Send@i+1,w,c
  2447  0007FC  6EDA               	movwf	fsr2h,c
  2448  0007FE  C002  FFDF         	movff	CMD_Send@val,indf2
  2449                           
  2450                           ;L6470.c: 34:           val = val >> 8 ;
  2451  000802  C002  F008         	movff	CMD_Send@val,??_CMD_Send
  2452  000806  C003  F009         	movff	CMD_Send@val+1,??_CMD_Send+1
  2453  00080A  C004  F00A         	movff	CMD_Send@val+2,??_CMD_Send+2
  2454  00080E  C005  F00B         	movff	CMD_Send@val+3,??_CMD_Send+3
  2455  000812  C009  F008         	movff	??_CMD_Send+1,??_CMD_Send
  2456  000816  C00A  F009         	movff	??_CMD_Send+2,??_CMD_Send+1
  2457  00081A  C00B  F00A         	movff	??_CMD_Send+3,??_CMD_Send+2
  2458  00081E  6A0B               	clrf	??_CMD_Send+3,c
  2459  000820  C008  F002         	movff	??_CMD_Send,CMD_Send@val
  2460  000824  C009  F003         	movff	??_CMD_Send+1,CMD_Send@val+1
  2461  000828  C00A  F004         	movff	??_CMD_Send+2,CMD_Send@val+2
  2462  00082C  C00B  F005         	movff	??_CMD_Send+3,CMD_Send@val+3
  2463                           
  2464                           ;L6470.c: 35:      }
  2465  000830  4A11               	infsnz	CMD_Send@i,f,c
  2466  000832  2A12               	incf	CMD_Send@i+1,f,c
  2467  000834                     l2667:
  2468  000834  5006               	movf	CMD_Send@num,w,c
  2469  000836  5C11               	subwf	CMD_Send@i,w,c
  2470  000838  5012               	movf	CMD_Send@i+1,w,c
  2471  00083A  0A80               	xorlw	128
  2472  00083C  6E08               	movwf	??_CMD_Send& (0+255),c
  2473  00083E  5007               	movf	CMD_Send@num+1,w,c
  2474  000840  0A80               	xorlw	128
  2475  000842  5808               	subwfb	??_CMD_Send& (0+255),w,c
  2476  000844  A0D8               	btfss	status,0,c
  2477  000846  D7D5               	goto	l2661
  2478                           
  2479                           ;L6470.c: 37:      PORTBbits.RB0 = 0 ;
  2480  000848  9081               	bcf	3969,0,c	;volatile
  2481                           
  2482                           ;L6470.c: 38:      SPI_transfer(cmd) ;
  2483  00084A  5010               	movf	CMD_Send@cmd,w,c
  2484  00084C  ECB8  F006         	call	_SPI_transfer
  2485                           
  2486                           ;L6470.c: 39:      PORTBbits.RB0 = 1 ;
  2487  000850  8081               	bsf	3969,0,c	;volatile
  2488                           
  2489                           ;L6470.c: 40:      switch (num) {
  2490  000852  D010               	goto	l2687
  2491  000854                     l389:
  2492                           
  2493                           ;L6470.c: 42:                PORTBbits.RB0 = 0 ;
  2494  000854  9081               	bcf	3969,0,c	;volatile
  2495                           
  2496                           ;L6470.c: 43:                SPI_transfer(dt[2]) ;
  2497  000856  500E               	movf	CMD_Send@dt+2,w,c
  2498  000858  ECB8  F006         	call	_SPI_transfer
  2499                           
  2500                           ;L6470.c: 44:                PORTBbits.RB0 = 1 ;
  2501  00085C  8081               	bsf	3969,0,c	;volatile
  2502  00085E                     l2677:
  2503                           
  2504                           ;L6470.c: 46:                PORTBbits.RB0 = 0 ;
  2505  00085E  9081               	bcf	3969,0,c	;volatile
  2506                           
  2507                           ;L6470.c: 47:                SPI_transfer(dt[1]) ;
  2508  000860  500D               	movf	CMD_Send@dt+1,w,c
  2509  000862  ECB8  F006         	call	_SPI_transfer
  2510                           
  2511                           ;L6470.c: 48:                PORTBbits.RB0 = 1 ;
  2512  000866  8081               	bsf	3969,0,c	;volatile
  2513  000868                     l2681:
  2514                           
  2515                           ;L6470.c: 50:                PORTBbits.RB0 = 0 ;
  2516  000868  9081               	bcf	3969,0,c	;volatile
  2517                           
  2518                           ;L6470.c: 51:                SPI_transfer(dt[0]) ;
  2519  00086A  500C               	movf	CMD_Send@dt,w,c
  2520  00086C  ECB8  F006         	call	_SPI_transfer
  2521                           
  2522                           ;L6470.c: 52:                PORTBbits.RB0 = 1 ;
  2523  000870  8081               	bsf	3969,0,c	;volatile
  2524                           
  2525                           ;L6470.c: 53:                break ;
  2526  000872  0012               	return	
  2527  000874                     l2687:
  2528  000874  C006  F008         	movff	CMD_Send@num,??_CMD_Send
  2529  000878  C007  F009         	movff	CMD_Send@num+1,??_CMD_Send+1
  2530                           
  2531                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2532                           ; Switch size 1, requested type "simple"
  2533                           ; Number of cases is 1, Range of values is 0 to 0
  2534                           ; switch strategies available:
  2535                           ; Name         Instructions Cycles
  2536                           ; simple_byte            4     3 (average)
  2537                           ;	Chosen strategy is simple_byte
  2538  00087C  5009               	movf	??_CMD_Send+1,w,c
  2539  00087E  0A00               	xorlw	0	; case 0
  2540  000880  A4D8               	btfss	status,2,c
  2541  000882  0012               	return	
  2542                           
  2543                           ; Switch size 1, requested type "simple"
  2544                           ; Number of cases is 3, Range of values is 1 to 3
  2545                           ; switch strategies available:
  2546                           ; Name         Instructions Cycles
  2547                           ; simple_byte           10     6 (average)
  2548                           ;	Chosen strategy is simple_byte
  2549  000884  5008               	movf	??_CMD_Send,w,c
  2550  000886  0A01               	xorlw	1	; case 1
  2551  000888  B4D8               	btfsc	status,2,c
  2552  00088A  D7EE               	goto	l2681
  2553  00088C  0A03               	xorlw	3	; case 2
  2554  00088E  B4D8               	btfsc	status,2,c
  2555  000890  D7E6               	goto	l2677
  2556  000892  0A01               	xorlw	1	; case 3
  2557  000894  A4D8               	btfss	status,2,c
  2558  000896  0012               	return	
  2559  000898  D7DD               	goto	l389
  2560  00089A                     __end_of_CMD_Send:
  2561                           	opt callstack 0
  2562                           
  2563 ;; *************** function _SPI_transfer *****************
  2564 ;; Defined at:
  2565 ;;		line 119 in file "SPIlib.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  dt              1    wreg     unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  dt              1    0[COMRAM] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      unsigned char 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2580 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2582 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2583 ;;Total ram usage:        1 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    1
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_CMD_Send
  2590 ;;		_L6470_Init
  2591 ;;		_L6470_GetRegister
  2592 ;;		_L6470_Stop
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text15
  2597  000D70                     __ptext15:
  2598                           	opt callstack 0
  2599  000D70                     _SPI_transfer:
  2600                           	opt callstack 26
  2601                           
  2602                           ;incstack = 0
  2603                           ;SPI_transfer@dt stored from wreg
  2604  000D70  6E01               	movwf	SPI_transfer@dt,c
  2605                           
  2606                           ;SPIlib.c: 119: unsigned char SPI_transfer(char dt);SPIlib.c: 120: {;SPIlib.c: 121:     
      +                           SSPBUF = dt ;
  2607  000D72  C001  FFC9         	movff	SPI_transfer@dt,4041	;volatile
  2608  000D76                     l756:
  2609  000D76  A69E               	btfss	3998,3,c	;volatile
  2610  000D78  D7FE               	goto	l756
  2611                           
  2612                           ;SPIlib.c: 123:      PIR1bits.SSPIF = 0 ;
  2613  000D7A  969E               	bcf	3998,3,c	;volatile
  2614                           
  2615                           ;SPIlib.c: 124:      return SSPBUF ;
  2616  000D7C  50C9               	movf	4041,w,c	;volatile
  2617  000D7E  0012               	return		;funcret
  2618  000D80                     __end_of_SPI_transfer:
  2619                           	opt callstack 0
  2620                           
  2621 ;; *************** function _ECAN_Initialize *****************
  2622 ;; Defined at:
  2623 ;;		line 61 in file "mcc_generated_files/ecan.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, status,2, status,0
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2640 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2641 ;;Total ram usage:        1 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    1
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_main
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text16
  2652  00089A                     __ptext16:
  2653                           	opt callstack 0
  2654  00089A                     _ECAN_Initialize:
  2655                           	opt callstack 29
  2656                           
  2657                           ;mcc_generated_files/ecan.c: 63:     CANCON = 0x80;
  2658                           
  2659                           ;incstack = 0
  2660  00089A  0E80               	movlw	128
  2661  00089C  6E6F               	movwf	3951,c	;volatile
  2662  00089E                     l1721:
  2663  00089E  506E               	movf	3950,w,c	;volatile
  2664  0008A0  0BE0               	andlw	224
  2665  0008A2  0A80               	xorlw	128
  2666  0008A4  A4D8               	btfss	status,2,c
  2667  0008A6  D7FB               	goto	l1721
  2668                           
  2669                           ;mcc_generated_files/ecan.c: 69:     ECANCON = 0x00;
  2670  0008A8  0E00               	movlw	0
  2671  0008AA  6E72               	movwf	3954,c	;volatile
  2672                           
  2673                           ;mcc_generated_files/ecan.c: 74:     CIOCON = 0x20;
  2674  0008AC  0E20               	movlw	32
  2675  0008AE  6E70               	movwf	3952,c	;volatile
  2676                           
  2677                           ;mcc_generated_files/ecan.c: 88:     RXM0EIDH = 0xFF;
  2678  0008B0  010E               	movlb	14	; () banked
  2679  0008B2  69FA               	setf	250,b	;volatile
  2680                           
  2681                           ; BSR set to: 14
  2682                           ;mcc_generated_files/ecan.c: 89:     RXM0EIDL = 0xFF;
  2683  0008B4  69FB               	setf	251,b	;volatile
  2684                           
  2685                           ; BSR set to: 14
  2686                           ;mcc_generated_files/ecan.c: 90:     RXM0SIDH = 0xFF;
  2687  0008B6  69F8               	setf	248,b	;volatile
  2688                           
  2689                           ;mcc_generated_files/ecan.c: 91:     RXM0SIDL = 0xE3;
  2690  0008B8  0EE3               	movlw	227
  2691  0008BA  6FF9               	movwf	249,b	;volatile
  2692                           
  2693                           ; BSR set to: 14
  2694                           ;mcc_generated_files/ecan.c: 92:     RXM1EIDH = 0xFF;
  2695  0008BC  69FE               	setf	254,b	;volatile
  2696                           
  2697                           ; BSR set to: 14
  2698                           ;mcc_generated_files/ecan.c: 93:     RXM1EIDL = 0xFF;
  2699  0008BE  69FF               	setf	255,b	;volatile
  2700                           
  2701                           ; BSR set to: 14
  2702                           ;mcc_generated_files/ecan.c: 94:     RXM1SIDH = 0xFF;
  2703  0008C0  69FC               	setf	252,b	;volatile
  2704                           
  2705                           ;mcc_generated_files/ecan.c: 95:     RXM1SIDL = 0xE3;
  2706  0008C2  0EE3               	movlw	227
  2707  0008C4  6FFD               	movwf	253,b	;volatile
  2708                           
  2709                           ;mcc_generated_files/ecan.c: 100:     RXF0EIDH = 0x00;
  2710  0008C6  0E00               	movlw	0
  2711  0008C8  6FE2               	movwf	226,b	;volatile
  2712                           
  2713                           ;mcc_generated_files/ecan.c: 101:     RXF0EIDL = 0x00;
  2714  0008CA  0E00               	movlw	0
  2715  0008CC  6FE3               	movwf	227,b	;volatile
  2716                           
  2717                           ;mcc_generated_files/ecan.c: 102:     RXF0SIDH = 0x24;
  2718  0008CE  0E24               	movlw	36
  2719  0008D0  6FE0               	movwf	224,b	;volatile
  2720                           
  2721                           ;mcc_generated_files/ecan.c: 103:     RXF0SIDL = 0x60;
  2722  0008D2  0E60               	movlw	96
  2723  0008D4  6FE1               	movwf	225,b	;volatile
  2724                           
  2725                           ;mcc_generated_files/ecan.c: 104:     RXF1EIDH = 0x00;
  2726  0008D6  0E00               	movlw	0
  2727  0008D8  6FE6               	movwf	230,b	;volatile
  2728                           
  2729                           ;mcc_generated_files/ecan.c: 105:     RXF1EIDL = 0x00;
  2730  0008DA  0E00               	movlw	0
  2731  0008DC  6FE7               	movwf	231,b	;volatile
  2732                           
  2733                           ;mcc_generated_files/ecan.c: 106:     RXF1SIDH = 0x00;
  2734  0008DE  0E00               	movlw	0
  2735  0008E0  6FE4               	movwf	228,b	;volatile
  2736                           
  2737                           ;mcc_generated_files/ecan.c: 107:     RXF1SIDL = 0x00;
  2738  0008E2  0E00               	movlw	0
  2739  0008E4  6FE5               	movwf	229,b	;volatile
  2740                           
  2741                           ;mcc_generated_files/ecan.c: 108:     RXF2EIDH = 0x00;
  2742  0008E6  0E00               	movlw	0
  2743  0008E8  6FEA               	movwf	234,b	;volatile
  2744                           
  2745                           ;mcc_generated_files/ecan.c: 109:     RXF2EIDL = 0x00;
  2746  0008EA  0E00               	movlw	0
  2747  0008EC  6FEB               	movwf	235,b	;volatile
  2748                           
  2749                           ;mcc_generated_files/ecan.c: 110:     RXF2SIDH = 0x00;
  2750  0008EE  0E00               	movlw	0
  2751  0008F0  6FE8               	movwf	232,b	;volatile
  2752                           
  2753                           ;mcc_generated_files/ecan.c: 111:     RXF2SIDL = 0x00;
  2754  0008F2  0E00               	movlw	0
  2755  0008F4  6FE9               	movwf	233,b	;volatile
  2756                           
  2757                           ;mcc_generated_files/ecan.c: 112:     RXF3EIDH = 0x00;
  2758  0008F6  0E00               	movlw	0
  2759  0008F8  6FEE               	movwf	238,b	;volatile
  2760                           
  2761                           ;mcc_generated_files/ecan.c: 113:     RXF3EIDL = 0x00;
  2762  0008FA  0E00               	movlw	0
  2763  0008FC  6FEF               	movwf	239,b	;volatile
  2764                           
  2765                           ;mcc_generated_files/ecan.c: 114:     RXF3SIDH = 0x00;
  2766  0008FE  0E00               	movlw	0
  2767  000900  6FEC               	movwf	236,b	;volatile
  2768                           
  2769                           ;mcc_generated_files/ecan.c: 115:     RXF3SIDL = 0x00;
  2770  000902  0E00               	movlw	0
  2771  000904  6FED               	movwf	237,b	;volatile
  2772                           
  2773                           ;mcc_generated_files/ecan.c: 116:     RXF4EIDH = 0x00;
  2774  000906  0E00               	movlw	0
  2775  000908  6FF2               	movwf	242,b	;volatile
  2776                           
  2777                           ;mcc_generated_files/ecan.c: 117:     RXF4EIDL = 0x00;
  2778  00090A  0E00               	movlw	0
  2779  00090C  6FF3               	movwf	243,b	;volatile
  2780                           
  2781                           ;mcc_generated_files/ecan.c: 118:     RXF4SIDH = 0x00;
  2782  00090E  0E00               	movlw	0
  2783  000910  6FF0               	movwf	240,b	;volatile
  2784                           
  2785                           ;mcc_generated_files/ecan.c: 119:     RXF4SIDL = 0x00;
  2786  000912  0E00               	movlw	0
  2787  000914  6FF1               	movwf	241,b	;volatile
  2788                           
  2789                           ;mcc_generated_files/ecan.c: 120:     RXF5EIDH = 0x00;
  2790  000916  0E00               	movlw	0
  2791  000918  6FF6               	movwf	246,b	;volatile
  2792                           
  2793                           ;mcc_generated_files/ecan.c: 121:     RXF5EIDL = 0x00;
  2794  00091A  0E00               	movlw	0
  2795  00091C  6FF7               	movwf	247,b	;volatile
  2796                           
  2797                           ;mcc_generated_files/ecan.c: 122:     RXF5SIDH = 0x00;
  2798  00091E  0E00               	movlw	0
  2799  000920  6FF4               	movwf	244,b	;volatile
  2800                           
  2801                           ;mcc_generated_files/ecan.c: 123:     RXF5SIDL = 0x00;
  2802  000922  0E00               	movlw	0
  2803  000924  6FF5               	movwf	245,b	;volatile
  2804                           
  2805                           ;mcc_generated_files/ecan.c: 138:     BRGCON1 = 0x01;
  2806  000926  0E01               	movlw	1
  2807  000928  6F43               	movwf	67,b	;volatile
  2808                           
  2809                           ;mcc_generated_files/ecan.c: 139:     BRGCON2 = 0x98;
  2810  00092A  0E98               	movlw	152
  2811  00092C  6F44               	movwf	68,b	;volatile
  2812                           
  2813                           ;mcc_generated_files/ecan.c: 140:     BRGCON3 = 0x01;
  2814  00092E  0E01               	movlw	1
  2815  000930  6F45               	movwf	69,b	;volatile
  2816                           
  2817                           ;mcc_generated_files/ecan.c: 142:     CANCON = 0x00;
  2818  000932  0E00               	movlw	0
  2819  000934  6E6F               	movwf	3951,c	;volatile
  2820  000936                     l1737:
  2821  000936  CF6E F001          	movff	3950,??_ECAN_Initialize	;volatile
  2822  00093A  0EE0               	movlw	224
  2823  00093C  1601               	andwf	??_ECAN_Initialize,f,c
  2824  00093E  B4D8               	btfsc	status,2,c
  2825  000940  0012               	return	
  2826  000942  D7F9               	goto	l1737
  2827  000944                     __end_of_ECAN_Initialize:
  2828                           	opt callstack 0
  2829                           
  2830 ;; *************** function _CAN_receive *****************
  2831 ;; Defined at:
  2832 ;;		line 238 in file "mcc_generated_files/ecan.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;  tempCanMsg      2   19[COMRAM] PTR struct .
  2835 ;;		 -> rxMessage(14), 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  returnValue     1   21[COMRAM] unsigned char 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      unsigned char 
  2840 ;; Registers used:
  2841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2850 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2851 ;;Total ram usage:        3 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    2
  2854 ;; This function calls:
  2855 ;;		_convertReg2ExtendedCANid
  2856 ;;		_convertReg2StandardCANid
  2857 ;; This function is called by:
  2858 ;;		_main
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text17
  2863  000034                     __ptext17:
  2864                           	opt callstack 0
  2865  000034                     _CAN_receive:
  2866                           	opt callstack 28
  2867                           
  2868                           ;mcc_generated_files/ecan.c: 238: uint8_t CAN_receive(uCAN_MSG *tempCanMsg);mcc_generate
      +                          d_files/ecan.c: 239: {;mcc_generated_files/ecan.c: 240:     uint8_t returnValue = 0;
  2869                           
  2870                           ;incstack = 0
  2871  000034  0E00               	movlw	0
  2872  000036  6E16               	movwf	CAN_receive@returnValue,c
  2873                           
  2874                           ;mcc_generated_files/ecan.c: 243:     if (RXB0CONbits.RXFUL != 0)
  2875  000038  AE60               	btfss	3936,7,c	;volatile
  2876  00003A  D085               	goto	l256
  2877                           
  2878                           ;mcc_generated_files/ecan.c: 244:     {;mcc_generated_files/ecan.c: 245:         if ((RX
      +                          B0SIDL & 0x08) == 0x08)
  2879  00003C  A662               	btfss	3938,3,c	;volatile
  2880  00003E  D01E               	goto	l2887
  2881                           
  2882                           ;mcc_generated_files/ecan.c: 246:         {;mcc_generated_files/ecan.c: 248:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  2883  000040  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2884  000044  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2885  000048  0E02               	movlw	2
  2886  00004A  6EDF               	movwf	indf2,c
  2887                           
  2888                           ;mcc_generated_files/ecan.c: 249:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB0EIDH, RXB0EIDL, RXB0SIDH, RXB0SIDL);
  2889  00004C  CF64 F001          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  2890  000050  CF61 F002          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  2891  000054  CF62 F003          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  2892  000058  5063               	movf	3939,w,c	;volatile
  2893  00005A  EC28  F002         	call	_convertReg2ExtendedCANid
  2894  00005E  EE20 F001          	lfsr	2,1
  2895  000062  5014               	movf	CAN_receive@tempCanMsg,w,c
  2896  000064  26D9               	addwf	fsr2l,f,c
  2897  000066  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2898  000068  22DA               	addwfc	fsr2h,f,c
  2899  00006A  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  2900  00006E  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  2901  000072  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  2902  000076  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  2903                           
  2904                           ;mcc_generated_files/ecan.c: 250:         }
  2905  00007A  D019               	goto	l2891
  2906  00007C                     l2887:
  2907                           
  2908                           ;mcc_generated_files/ecan.c: 252:         {;mcc_generated_files/ecan.c: 254:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  2909  00007C  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2910  000080  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2911  000084  0E01               	movlw	1
  2912  000086  6EDF               	movwf	indf2,c
  2913                           
  2914                           ;mcc_generated_files/ecan.c: 255:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB0SIDH, RXB0SIDL);
  2915  000088  CF62 F001          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  2916  00008C  5061               	movf	3937,w,c	;volatile
  2917  00008E  ECB0  F005         	call	_convertReg2StandardCANid
  2918  000092  EE20 F001          	lfsr	2,1
  2919  000096  5014               	movf	CAN_receive@tempCanMsg,w,c
  2920  000098  26D9               	addwf	fsr2l,f,c
  2921  00009A  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2922  00009C  22DA               	addwfc	fsr2h,f,c
  2923  00009E  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  2924  0000A2  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  2925  0000A6  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  2926  0000AA  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  2927  0000AE                     l2891:
  2928                           
  2929                           ;mcc_generated_files/ecan.c: 258:         tempCanMsg->frame.dlc = RXB0DLC;
  2930  0000AE  EE20 F005          	lfsr	2,5
  2931  0000B2  5014               	movf	CAN_receive@tempCanMsg,w,c
  2932  0000B4  26D9               	addwf	fsr2l,f,c
  2933  0000B6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2934  0000B8  22DA               	addwfc	fsr2h,f,c
  2935  0000BA  CF65 FFDF          	movff	3941,indf2	;volatile
  2936                           
  2937                           ;mcc_generated_files/ecan.c: 259:         tempCanMsg->frame.data0 = RXB0D0;
  2938  0000BE  EE20 F006          	lfsr	2,6
  2939  0000C2  5014               	movf	CAN_receive@tempCanMsg,w,c
  2940  0000C4  26D9               	addwf	fsr2l,f,c
  2941  0000C6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2942  0000C8  22DA               	addwfc	fsr2h,f,c
  2943  0000CA  CF66 FFDF          	movff	3942,indf2	;volatile
  2944                           
  2945                           ;mcc_generated_files/ecan.c: 260:         tempCanMsg->frame.data1 = RXB0D1;
  2946  0000CE  EE20 F007          	lfsr	2,7
  2947  0000D2  5014               	movf	CAN_receive@tempCanMsg,w,c
  2948  0000D4  26D9               	addwf	fsr2l,f,c
  2949  0000D6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2950  0000D8  22DA               	addwfc	fsr2h,f,c
  2951  0000DA  CF67 FFDF          	movff	3943,indf2	;volatile
  2952                           
  2953                           ;mcc_generated_files/ecan.c: 261:         tempCanMsg->frame.data2 = RXB0D2;
  2954  0000DE  EE20 F008          	lfsr	2,8
  2955  0000E2  5014               	movf	CAN_receive@tempCanMsg,w,c
  2956  0000E4  26D9               	addwf	fsr2l,f,c
  2957  0000E6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2958  0000E8  22DA               	addwfc	fsr2h,f,c
  2959  0000EA  CF68 FFDF          	movff	3944,indf2	;volatile
  2960                           
  2961                           ;mcc_generated_files/ecan.c: 262:         tempCanMsg->frame.data3 = RXB0D3;
  2962  0000EE  EE20 F009          	lfsr	2,9
  2963  0000F2  5014               	movf	CAN_receive@tempCanMsg,w,c
  2964  0000F4  26D9               	addwf	fsr2l,f,c
  2965  0000F6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2966  0000F8  22DA               	addwfc	fsr2h,f,c
  2967  0000FA  CF69 FFDF          	movff	3945,indf2	;volatile
  2968                           
  2969                           ;mcc_generated_files/ecan.c: 263:         tempCanMsg->frame.data4 = RXB0D4;
  2970  0000FE  EE20 F00A          	lfsr	2,10
  2971  000102  5014               	movf	CAN_receive@tempCanMsg,w,c
  2972  000104  26D9               	addwf	fsr2l,f,c
  2973  000106  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2974  000108  22DA               	addwfc	fsr2h,f,c
  2975  00010A  CF6A FFDF          	movff	3946,indf2	;volatile
  2976                           
  2977                           ;mcc_generated_files/ecan.c: 264:         tempCanMsg->frame.data5 = RXB0D5;
  2978  00010E  EE20 F00B          	lfsr	2,11
  2979  000112  5014               	movf	CAN_receive@tempCanMsg,w,c
  2980  000114  26D9               	addwf	fsr2l,f,c
  2981  000116  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2982  000118  22DA               	addwfc	fsr2h,f,c
  2983  00011A  CF6B FFDF          	movff	3947,indf2	;volatile
  2984                           
  2985                           ;mcc_generated_files/ecan.c: 265:         tempCanMsg->frame.data6 = RXB0D6;
  2986  00011E  EE20 F00C          	lfsr	2,12
  2987  000122  5014               	movf	CAN_receive@tempCanMsg,w,c
  2988  000124  26D9               	addwf	fsr2l,f,c
  2989  000126  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2990  000128  22DA               	addwfc	fsr2h,f,c
  2991  00012A  CF6C FFDF          	movff	3948,indf2	;volatile
  2992                           
  2993                           ;mcc_generated_files/ecan.c: 266:         tempCanMsg->frame.data7 = RXB0D7;
  2994  00012E  EE20 F00D          	lfsr	2,13
  2995  000132  5014               	movf	CAN_receive@tempCanMsg,w,c
  2996  000134  26D9               	addwf	fsr2l,f,c
  2997  000136  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  2998  000138  22DA               	addwfc	fsr2h,f,c
  2999  00013A  CF6D FFDF          	movff	3949,indf2	;volatile
  3000                           
  3001                           ;mcc_generated_files/ecan.c: 267:         RXB0CONbits.RXFUL = 0;
  3002  00013E  9E60               	bcf	3936,7,c	;volatile
  3003  000140                     l2911:
  3004                           
  3005                           ;mcc_generated_files/ecan.c: 268:         returnValue = 1;
  3006  000140  0E01               	movlw	1
  3007  000142  6E16               	movwf	CAN_receive@returnValue,c
  3008                           
  3009                           ;mcc_generated_files/ecan.c: 269:     }
  3010  000144  D087               	goto	l2945
  3011  000146                     l256:
  3012  000146  010F               	movlb	15	; () banked
  3013  000148  AF30               	btfss	48,7,b	;volatile
  3014  00014A  D084               	goto	l2945
  3015                           
  3016                           ; BSR set to: 15
  3017                           ;mcc_generated_files/ecan.c: 271:     {;mcc_generated_files/ecan.c: 272:         if ((RX
      +                          B1SIDL & 0x08) == 0x08)
  3018  00014C  A732               	btfss	50,3,b	;volatile
  3019  00014E  D01E               	goto	l2919
  3020                           
  3021                           ; BSR set to: 15
  3022                           ;mcc_generated_files/ecan.c: 273:         {;mcc_generated_files/ecan.c: 275:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  3023  000150  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3024  000154  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3025  000158  0E02               	movlw	2
  3026  00015A  6EDF               	movwf	indf2,c
  3027                           
  3028                           ; BSR set to: 15
  3029                           ;mcc_generated_files/ecan.c: 276:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB1EIDH, RXB1EIDL, RXB1SIDH, RXB1SIDL);
  3030  00015C  CF34 F001          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  3031  000160  CF31 F002          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  3032  000164  CF32 F003          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  3033  000168  5133               	movf	51,w,b	;volatile
  3034  00016A  EC28  F002         	call	_convertReg2ExtendedCANid
  3035  00016E  EE20 F001          	lfsr	2,1
  3036  000172  5014               	movf	CAN_receive@tempCanMsg,w,c
  3037  000174  26D9               	addwf	fsr2l,f,c
  3038  000176  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3039  000178  22DA               	addwfc	fsr2h,f,c
  3040  00017A  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  3041  00017E  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  3042  000182  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  3043  000186  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  3044                           
  3045                           ;mcc_generated_files/ecan.c: 277:         }
  3046  00018A  D019               	goto	l2923
  3047  00018C                     l2919:
  3048                           
  3049                           ; BSR set to: 15
  3050                           ;mcc_generated_files/ecan.c: 279:         {;mcc_generated_files/ecan.c: 281:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  3051  00018C  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3052  000190  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3053  000194  0E01               	movlw	1
  3054  000196  6EDF               	movwf	indf2,c
  3055                           
  3056                           ; BSR set to: 15
  3057                           ;mcc_generated_files/ecan.c: 282:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB1SIDH, RXB1SIDL);
  3058  000198  CF32 F001          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  3059  00019C  5131               	movf	49,w,b	;volatile
  3060  00019E  ECB0  F005         	call	_convertReg2StandardCANid
  3061  0001A2  EE20 F001          	lfsr	2,1
  3062  0001A6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3063  0001A8  26D9               	addwf	fsr2l,f,c
  3064  0001AA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3065  0001AC  22DA               	addwfc	fsr2h,f,c
  3066  0001AE  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  3067  0001B2  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  3068  0001B6  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  3069  0001BA  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  3070  0001BE                     l2923:
  3071                           
  3072                           ;mcc_generated_files/ecan.c: 285:         tempCanMsg->frame.dlc = RXB1DLC;
  3073  0001BE  EE20 F005          	lfsr	2,5
  3074  0001C2  5014               	movf	CAN_receive@tempCanMsg,w,c
  3075  0001C4  26D9               	addwf	fsr2l,f,c
  3076  0001C6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3077  0001C8  22DA               	addwfc	fsr2h,f,c
  3078  0001CA  CF35 FFDF          	movff	3893,indf2	;volatile
  3079                           
  3080                           ;mcc_generated_files/ecan.c: 286:         tempCanMsg->frame.data0 = RXB1D0;
  3081  0001CE  EE20 F006          	lfsr	2,6
  3082  0001D2  5014               	movf	CAN_receive@tempCanMsg,w,c
  3083  0001D4  26D9               	addwf	fsr2l,f,c
  3084  0001D6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3085  0001D8  22DA               	addwfc	fsr2h,f,c
  3086  0001DA  CF36 FFDF          	movff	3894,indf2	;volatile
  3087                           
  3088                           ;mcc_generated_files/ecan.c: 287:         tempCanMsg->frame.data1 = RXB1D1;
  3089  0001DE  EE20 F007          	lfsr	2,7
  3090  0001E2  5014               	movf	CAN_receive@tempCanMsg,w,c
  3091  0001E4  26D9               	addwf	fsr2l,f,c
  3092  0001E6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3093  0001E8  22DA               	addwfc	fsr2h,f,c
  3094  0001EA  CF37 FFDF          	movff	3895,indf2	;volatile
  3095                           
  3096                           ;mcc_generated_files/ecan.c: 288:         tempCanMsg->frame.data2 = RXB1D2;
  3097  0001EE  EE20 F008          	lfsr	2,8
  3098  0001F2  5014               	movf	CAN_receive@tempCanMsg,w,c
  3099  0001F4  26D9               	addwf	fsr2l,f,c
  3100  0001F6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3101  0001F8  22DA               	addwfc	fsr2h,f,c
  3102  0001FA  CF38 FFDF          	movff	3896,indf2	;volatile
  3103                           
  3104                           ;mcc_generated_files/ecan.c: 289:         tempCanMsg->frame.data3 = RXB1D3;
  3105  0001FE  EE20 F009          	lfsr	2,9
  3106  000202  5014               	movf	CAN_receive@tempCanMsg,w,c
  3107  000204  26D9               	addwf	fsr2l,f,c
  3108  000206  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3109  000208  22DA               	addwfc	fsr2h,f,c
  3110  00020A  CF39 FFDF          	movff	3897,indf2	;volatile
  3111                           
  3112                           ;mcc_generated_files/ecan.c: 290:         tempCanMsg->frame.data4 = RXB1D4;
  3113  00020E  EE20 F00A          	lfsr	2,10
  3114  000212  5014               	movf	CAN_receive@tempCanMsg,w,c
  3115  000214  26D9               	addwf	fsr2l,f,c
  3116  000216  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3117  000218  22DA               	addwfc	fsr2h,f,c
  3118  00021A  CF3A FFDF          	movff	3898,indf2	;volatile
  3119                           
  3120                           ;mcc_generated_files/ecan.c: 291:         tempCanMsg->frame.data5 = RXB1D5;
  3121  00021E  EE20 F00B          	lfsr	2,11
  3122  000222  5014               	movf	CAN_receive@tempCanMsg,w,c
  3123  000224  26D9               	addwf	fsr2l,f,c
  3124  000226  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3125  000228  22DA               	addwfc	fsr2h,f,c
  3126  00022A  CF3B FFDF          	movff	3899,indf2	;volatile
  3127                           
  3128                           ;mcc_generated_files/ecan.c: 292:         tempCanMsg->frame.data6 = RXB1D6;
  3129  00022E  EE20 F00C          	lfsr	2,12
  3130  000232  5014               	movf	CAN_receive@tempCanMsg,w,c
  3131  000234  26D9               	addwf	fsr2l,f,c
  3132  000236  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3133  000238  22DA               	addwfc	fsr2h,f,c
  3134  00023A  CF3C FFDF          	movff	3900,indf2	;volatile
  3135                           
  3136                           ;mcc_generated_files/ecan.c: 293:         tempCanMsg->frame.data7 = RXB1D7;
  3137  00023E  EE20 F00D          	lfsr	2,13
  3138  000242  5014               	movf	CAN_receive@tempCanMsg,w,c
  3139  000244  26D9               	addwf	fsr2l,f,c
  3140  000246  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3141  000248  22DA               	addwfc	fsr2h,f,c
  3142  00024A  CF3D FFDF          	movff	3901,indf2	;volatile
  3143                           
  3144                           ;mcc_generated_files/ecan.c: 294:         RXB1CONbits.RXFUL = 0;
  3145  00024E  010F               	movlb	15	; () banked
  3146  000250  9F30               	bcf	48,7,b	;volatile
  3147  000252  D776               	goto	l2911
  3148  000254                     l2945:
  3149                           
  3150                           ;mcc_generated_files/ecan.c: 297:     return (returnValue);
  3151  000254  5016               	movf	CAN_receive@returnValue,w,c
  3152  000256  0012               	return		;funcret
  3153  000258                     __end_of_CAN_receive:
  3154                           	opt callstack 0
  3155                           
  3156 ;; *************** function _convertReg2StandardCANid *****************
  3157 ;; Defined at:
  3158 ;;		line 384 in file "mcc_generated_files/ecan.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  tempRXBn_SID    1    wreg     unsigned char 
  3161 ;;  tempRXBn_SID    1    0[COMRAM] unsigned char 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  tempRXBn_SID    1    6[COMRAM] unsigned char 
  3164 ;;  ConvertedID     4   11[COMRAM] unsigned long 
  3165 ;;  returnValue     4    7[COMRAM] unsigned long 
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  4    0[COMRAM] unsigned long 
  3168 ;; Registers used:
  3169 ;;		wreg, status,2, status,0
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3176 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3177 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3178 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3179 ;;Total ram usage:       15 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    1
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_CAN_receive
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           	psect	text18
  3190  000B60                     __ptext18:
  3191                           	opt callstack 0
  3192  000B60                     _convertReg2StandardCANid:
  3193                           	opt callstack 28
  3194                           
  3195                           ;incstack = 0
  3196                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  3197  000B60  6E07               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
  3198                           
  3199                           ;mcc_generated_files/ecan.c: 387:     uint32_t ConvertedID;;mcc_generated_files/ecan.c: 
      +                          391:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  3200  000B62  5007               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
  3201  000B64  6E05               	movwf	??_convertReg2StandardCANid& (0+255),c
  3202  000B66  6A06               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
  3203  000B68  90D8               	bcf	status,0,c
  3204  000B6A  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3205  000B6C  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3206  000B6E  90D8               	bcf	status,0,c
  3207  000B70  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3208  000B72  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3209  000B74  90D8               	bcf	status,0,c
  3210  000B76  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3211  000B78  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3212  000B7A  C005  F00C         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  3213  000B7E  C006  F00D         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  3214  000B82  0E00               	movlw	0
  3215  000B84  BE0D               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
  3216  000B86  0EFF               	movlw	-1
  3217  000B88  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  3218  000B8A  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  3219                           
  3220                           ;mcc_generated_files/ecan.c: 392:     ConvertedID = ConvertedID + (uint32_t)(tempRXBn_SI
      +                          DL >> 5);
  3221  000B8C  C001  F005         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  3222  000B90  0E05               	movlw	5
  3223  000B92  6E06               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
  3224  000B94                     u1035:
  3225  000B94  90D8               	bcf	status,0,c
  3226  000B96  3205               	rrcf	??_convertReg2StandardCANid,f,c
  3227  000B98  2E06               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
  3228  000B9A  D7FC               	goto	u1035
  3229  000B9C  5005               	movf	??_convertReg2StandardCANid,w,c
  3230  000B9E  240C               	addwf	convertReg2StandardCANid@ConvertedID,w,c
  3231  000BA0  6E0C               	movwf	convertReg2StandardCANid@ConvertedID,c
  3232  000BA2  0E00               	movlw	0
  3233  000BA4  200D               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
  3234  000BA6  6E0D               	movwf	convertReg2StandardCANid@ConvertedID+1,c
  3235  000BA8  0E00               	movlw	0
  3236  000BAA  200E               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
  3237  000BAC  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  3238  000BAE  0E00               	movlw	0
  3239  000BB0  200F               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
  3240  000BB2  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  3241                           
  3242                           ;mcc_generated_files/ecan.c: 393:     returnValue = ConvertedID;
  3243  000BB4  C00C  F008         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  3244  000BB8  C00D  F009         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  3245  000BBC  C00E  F00A         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  3246  000BC0  C00F  F00B         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  3247                           
  3248                           ;mcc_generated_files/ecan.c: 394:     return (returnValue);
  3249  000BC4  C008  F001         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  3250  000BC8  C009  F002         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  3251  000BCC  C00A  F003         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  3252  000BD0  C00B  F004         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  3253  000BD4  0012               	return		;funcret
  3254  000BD6                     __end_of_convertReg2StandardCANid:
  3255                           	opt callstack 0
  3256                           
  3257 ;; *************** function _convertReg2ExtendedCANid *****************
  3258 ;; Defined at:
  3259 ;;		line 363 in file "mcc_generated_files/ecan.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  tempRXBn_EID    1    wreg     unsigned char 
  3262 ;;  tempRXBn_EID    1    0[COMRAM] unsigned char 
  3263 ;;  tempRXBn_SID    1    1[COMRAM] unsigned char 
  3264 ;;  tempRXBn_SID    1    2[COMRAM] unsigned char 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  tempRXBn_EID    1    8[COMRAM] unsigned char 
  3267 ;;  ConvertedID     4   15[COMRAM] unsigned long 
  3268 ;;  returnValue     4    9[COMRAM] unsigned long 
  3269 ;;  CAN_standard    1   14[COMRAM] unsigned char 
  3270 ;;  CAN_standard    1   13[COMRAM] unsigned char 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  4    0[COMRAM] unsigned long 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3280 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3281 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3282 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3283 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3284 ;;Total ram usage:       19 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    1
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_CAN_receive
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text19
  3295  000450                     __ptext19:
  3296                           	opt callstack 0
  3297  000450                     _convertReg2ExtendedCANid:
  3298                           	opt callstack 28
  3299                           
  3300                           ;incstack = 0
  3301                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  3302  000450  6E09               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
  3303                           
  3304                           ;mcc_generated_files/ecan.c: 366:     uint32_t ConvertedID = 0;
  3305  000452  0E00               	movlw	0
  3306  000454  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3307  000456  0E00               	movlw	0
  3308  000458  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3309  00045A  0E00               	movlw	0
  3310  00045C  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3311  00045E  0E00               	movlw	0
  3312  000460  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3313                           
  3314                           ;mcc_generated_files/ecan.c: 367:     uint8_t CAN_standardLo_ID_lo2bits;;mcc_generated_f
      +                          iles/ecan.c: 368:     uint8_t CAN_standardLo_ID_hi3bits;;mcc_generated_files/ecan.c: 370
      +                          :     CAN_standardLo_ID_lo2bits = (uint8_t)(tempRXBn_SIDL & 0x03);
  3315  000462  5003               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  3316  000464  0B03               	andlw	3
  3317  000466  6E0E               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
  3318                           
  3319                           ;mcc_generated_files/ecan.c: 371:     CAN_standardLo_ID_hi3bits = (uint8_t)(tempRXBn_SID
      +                          L >> 5);
  3320  000468  3803               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  3321  00046A  42E8               	rrncf	wreg,f,c
  3322  00046C  0B07               	andlw	7
  3323  00046E  6E0F               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
  3324                           
  3325                           ;mcc_generated_files/ecan.c: 372:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  3326  000470  5002               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
  3327  000472  6E05               	movwf	??_convertReg2ExtendedCANid& (0+255),c
  3328  000474  6A06               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
  3329  000476  90D8               	bcf	status,0,c
  3330  000478  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3331  00047A  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3332  00047C  90D8               	bcf	status,0,c
  3333  00047E  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3334  000480  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3335  000482  90D8               	bcf	status,0,c
  3336  000484  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3337  000486  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3338  000488  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3339  00048C  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3340  000490  0E00               	movlw	0
  3341  000492  BE11               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
  3342  000494  0EFF               	movlw	-1
  3343  000496  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3344  000498  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3345                           
  3346                           ;mcc_generated_files/ecan.c: 373:     ConvertedID = ConvertedID + CAN_standardLo_ID_hi3b
      +                          its;
  3347  00049A  500F               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
  3348  00049C  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3349  00049E  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3350  0004A0  0E00               	movlw	0
  3351  0004A2  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3352  0004A4  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3353  0004A6  0E00               	movlw	0
  3354  0004A8  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3355  0004AA  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3356  0004AC  0E00               	movlw	0
  3357  0004AE  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3358  0004B0  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3359                           
  3360                           ;mcc_generated_files/ecan.c: 374:     ConvertedID = (ConvertedID << 2);
  3361  0004B2  C010  F005         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  3362  0004B6  C011  F006         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  3363  0004BA  C012  F007         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  3364  0004BE  C013  F008         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  3365  0004C2  0E02               	movlw	2
  3366  0004C4                     u1025:
  3367  0004C4  90D8               	bcf	status,0,c
  3368  0004C6  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3369  0004C8  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3370  0004CA  3607               	rlcf	??_convertReg2ExtendedCANid+2,f,c
  3371  0004CC  3608               	rlcf	??_convertReg2ExtendedCANid+3,f,c
  3372  0004CE  2EE8               	decfsz	wreg,f,c
  3373  0004D0  D7F9               	goto	u1025
  3374  0004D2  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3375  0004D6  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3376  0004DA  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3377  0004DE  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3378                           
  3379                           ;mcc_generated_files/ecan.c: 375:     ConvertedID = ConvertedID + CAN_standardLo_ID_lo2b
      +                          its;
  3380  0004E2  500E               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
  3381  0004E4  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3382  0004E6  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3383  0004E8  0E00               	movlw	0
  3384  0004EA  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3385  0004EC  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3386  0004EE  0E00               	movlw	0
  3387  0004F0  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3388  0004F2  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3389  0004F4  0E00               	movlw	0
  3390  0004F6  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3391  0004F8  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3392                           
  3393                           ;mcc_generated_files/ecan.c: 376:     ConvertedID = (ConvertedID << 8);
  3394  0004FA  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  3395  0004FE  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  3396  000502  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  3397  000506  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  3398  000508  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3399  00050C  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3400  000510  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3401  000514  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3402                           
  3403                           ;mcc_generated_files/ecan.c: 377:     ConvertedID = ConvertedID + tempRXBn_EIDH;
  3404  000518  5009               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
  3405  00051A  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3406  00051C  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3407  00051E  0E00               	movlw	0
  3408  000520  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3409  000522  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3410  000524  0E00               	movlw	0
  3411  000526  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3412  000528  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3413  00052A  0E00               	movlw	0
  3414  00052C  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3415  00052E  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3416                           
  3417                           ;mcc_generated_files/ecan.c: 378:     ConvertedID = (ConvertedID << 8);
  3418  000530  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  3419  000534  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  3420  000538  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  3421  00053C  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  3422  00053E  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3423  000542  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3424  000546  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3425  00054A  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3426                           
  3427                           ;mcc_generated_files/ecan.c: 379:     ConvertedID = ConvertedID + tempRXBn_EIDL;
  3428  00054E  5001               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
  3429  000550  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3430  000552  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3431  000554  0E00               	movlw	0
  3432  000556  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3433  000558  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3434  00055A  0E00               	movlw	0
  3435  00055C  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3436  00055E  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3437  000560  0E00               	movlw	0
  3438  000562  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3439  000564  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3440                           
  3441                           ;mcc_generated_files/ecan.c: 380:     returnValue = ConvertedID;
  3442  000566  C010  F00A         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  3443  00056A  C011  F00B         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  3444  00056E  C012  F00C         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  3445  000572  C013  F00D         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  3446                           
  3447                           ;mcc_generated_files/ecan.c: 381:     return (returnValue);
  3448  000576  C00A  F001         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  3449  00057A  C00B  F002         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  3450  00057E  C00C  F003         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  3451  000582  C00D  F004         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  3452  000586  0012               	return		;funcret
  3453  000588                     __end_of_convertReg2ExtendedCANid:
  3454                           	opt callstack 0
  3455                           
  3456 ;; *************** function _InterTimer *****************
  3457 ;; Defined at:
  3458 ;;		line 7 in file "servo.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;		None
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      void 
  3465 ;; Registers used:
  3466 ;;		wreg, status,2
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3476 ;;Total ram usage:        0 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; This function calls:
  3479 ;;		Nothing
  3480 ;; This function is called by:
  3481 ;;		Interrupt level 2
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           	psect	intcode
  3486  000008                     __pintcode:
  3487                           	opt callstack 0
  3488  000008                     _InterTimer:
  3489                           	opt callstack 25
  3490                           
  3491                           ;incstack = 0
  3492  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3493                           
  3494                           ;servo.c: 8:     if(PIR1bits.TMR1IF == 1){
  3495  00000A  A09E               	btfss	3998,0,c	;volatile
  3496  00000C  D002               	goto	i2l818
  3497                           
  3498                           ;servo.c: 9:         PORTCbits.RC1 = 0;
  3499  00000E  9282               	bcf	3970,1,c	;volatile
  3500                           
  3501                           ;servo.c: 10:         PIR1bits.TMR1IF = 0;
  3502  000010  909E               	bcf	3998,0,c	;volatile
  3503  000012                     i2l818:
  3504                           
  3505                           ;servo.c: 12:     if(PIR2bits.TMR3IF == 1){
  3506  000012  A2A1               	btfss	4001,1,c	;volatile
  3507  000014  D00B               	goto	i2l820
  3508                           
  3509                           ;servo.c: 13:         PORTCbits.RC1 = 1;
  3510  000016  8282               	bsf	3970,1,c	;volatile
  3511                           
  3512                           ;servo.c: 14:         TMR3H = (55536 >> 8);
  3513  000018  0ED8               	movlw	216
  3514  00001A  6EB3               	movwf	4019,c	;volatile
  3515                           
  3516                           ;servo.c: 15:         TMR3L = (55536 & 0x00ff);
  3517  00001C  0EF0               	movlw	240
  3518  00001E  6EB2               	movwf	4018,c	;volatile
  3519                           
  3520                           ;servo.c: 16:         TMR1H = (T1time >> 8);
  3521  000020  5055               	movf	_T1time+1,w,c
  3522  000022  6ECF               	movwf	4047,c	;volatile
  3523                           
  3524                           ;servo.c: 17:         TMR1L = (T1time & 0x00ff);
  3525  000024  C054  FFCE         	movff	_T1time,4046	;volatile
  3526                           
  3527                           ;servo.c: 18:         PIR1bits.TMR1IF = 0;
  3528  000028  909E               	bcf	3998,0,c	;volatile
  3529                           
  3530                           ;servo.c: 19:         PIR2bits.TMR3IF = 0;
  3531  00002A  92A1               	bcf	4001,1,c	;volatile
  3532  00002C                     i2l820:
  3533  00002C  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3534  00002E  0011               	retfie		f
  3535  000030                     __end_of_InterTimer:
  3536                           	opt callstack 0
  3537  0000                     
  3538                           	psect	rparam
  3539  0000                     
  3540                           	psect	temp
  3541  000056                     btemp:
  3542                           	opt callstack 0
  3543  000056                     	ds	1
  3544  0000                     int$flags	set	btemp
  3545  0000                     wtemp8	set	btemp+1
  3546  0000                     ttemp5	set	btemp+1
  3547  0000                     ttemp6	set	btemp+4
  3548  0000                     ttemp7	set	btemp+8
  3549                           tosu	equ	0xFFF
  3550                           tosh	equ	0xFFE
  3551                           tosl	equ	0xFFD
  3552                           stkptr	equ	0xFFC
  3553                           pclatu	equ	0xFFB
  3554                           pclath	equ	0xFFA
  3555                           pcl	equ	0xFF9
  3556                           tblptru	equ	0xFF8
  3557                           tblptrh	equ	0xFF7
  3558                           tblptrl	equ	0xFF6
  3559                           tablat	equ	0xFF5
  3560                           prodh	equ	0xFF4
  3561                           prodl	equ	0xFF3
  3562                           indf0	equ	0xFEF
  3563                           postinc0	equ	0xFEE
  3564                           postdec0	equ	0xFED
  3565                           preinc0	equ	0xFEC
  3566                           plusw0	equ	0xFEB
  3567                           fsr0h	equ	0xFEA
  3568                           fsr0l	equ	0xFE9
  3569                           wreg	equ	0xFE8
  3570                           indf1	equ	0xFE7
  3571                           postinc1	equ	0xFE6
  3572                           postdec1	equ	0xFE5
  3573                           preinc1	equ	0xFE4
  3574                           plusw1	equ	0xFE3
  3575                           fsr1h	equ	0xFE2
  3576                           fsr1l	equ	0xFE1
  3577                           bsr	equ	0xFE0
  3578                           indf2	equ	0xFDF
  3579                           postinc2	equ	0xFDE
  3580                           postdec2	equ	0xFDD
  3581                           preinc2	equ	0xFDC
  3582                           plusw2	equ	0xFDB
  3583                           fsr2h	equ	0xFDA
  3584                           fsr2l	equ	0xFD9
  3585                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         25
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      89
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    L6470_change@dt	PTR unsigned char  size(2) Largest target is 8
		 -> data(COMRAM[8]), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> rxMessage(COMRAM[14]), 


Critical Paths under _main in COMRAM

    _main->_can_recieve
    _can_recieve->_ServoOut
    _ServoOut->___aldiv
    ___aldiv->___lmul
    _L6470_command->_L6470_Move
    _L6470_command->_L6470_Run
    _L6470_Stop->_SPI_transfer
    _L6470_Run->_CMD_Send
    _L6470_Move->_CMD_Send
    _L6470_Init->_L6470_GetRegister
    _L6470_GetRegister->_SPI_transfer
    _CMD_Send->_SPI_transfer
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _InterTimer in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterTimer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterTimer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterTimer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterTimer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterTimer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterTimer in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterTimer in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterTimer in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   13388
                                             50 COMRAM     4     4      0
                        _CAN_receive
                    _ECAN_Initialize
                         _L6470_Init
                           _SPI_Init
                           _ServoOut
                               _Wait
                        _can_recieve
 ---------------------------------------------------------------------------------
 (1) _can_recieve                                         30    16     14    6981
                                             32 COMRAM    18     4     14
                      _L6470_command
                           _ServoOut
 ---------------------------------------------------------------------------------
 (2) _ServoOut                                             6     4      2    1095
                                             26 COMRAM     6     4      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _L6470_command                                        2     2      0    5580
                                             23 COMRAM     2     2      0
                         _L6470_Move
                          _L6470_Run
                         _L6470_Stop
                       _L6470_change
 ---------------------------------------------------------------------------------
 (3) _L6470_change                                        15    11      4     419
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (3) _L6470_Stop                                           6     4      2     137
                                              1 COMRAM     6     4      2
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _L6470_Run                                            5     1      4    2512
                                             18 COMRAM     5     1      4
                           _CMD_Send
                       _L6470_change (ARG)
 ---------------------------------------------------------------------------------
 (3) _L6470_Move                                           5     1      4    2512
                                             18 COMRAM     5     1      4
                           _CMD_Send
                       _L6470_change (ARG)
 ---------------------------------------------------------------------------------
 (1) _Wait                                                 5     3      2     274
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             6     3      3     377
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _L6470_Init                                          13     9      4    2900
                                             20 COMRAM    13     9      4
                           _CMD_Send
                  _L6470_GetRegister
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (2) _L6470_GetRegister                                   19    15      4     350
                                              1 COMRAM    19    15      4
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _CMD_Send                                            17    11      6    2392
                                              1 COMRAM    17    11      6
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _SPI_transfer                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Initialize                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    1760
                                             19 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     266
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4     821
                                              0 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _ECAN_Initialize
   _L6470_Init
     _CMD_Send
       _SPI_transfer
     _L6470_GetRegister
       _SPI_transfer
     _SPI_transfer
   _SPI_Init
   _ServoOut
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _Wait
   _can_recieve
     _L6470_command
       _L6470_Move
         _CMD_Send
           _SPI_transfer
         _L6470_change (ARG)
       _L6470_Run
         _CMD_Send
           _SPI_transfer
         _L6470_change (ARG)
       _L6470_Stop
         _SPI_transfer
       _L6470_change
     _ServoOut
       ___aldiv
         ___lmul (ARG)
       ___lmul

 _InterTimer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      59       1       94.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      59       6        0.0%
DATA                 0      0      59       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jun 10 22:54:32 2019

                                      _SSPSTATbits 000FC7                                    SPI_Init@divider 0001  
                         __size_of_ECAN_Initialize 00AA                                        __CFG_BORV$3 000000  
                                     __CFG_CP0$OFF 000000                                       __CFG_CP1$OFF 000000  
                                     __CFG_CP2$OFF 000000                                       __CFG_CP3$OFF 000000  
                                              l256 0146                                                l361 0616  
                                              l369 0D62                                                l396 0260  
                                              l732 0C50                                                l389 0854  
                                              l756 0D76                                                l780 0A6A  
                                              l789 094C                                       __CFG_CPB$OFF 000000  
                                     __CFG_CPD$OFF 000000                                                u900 0CF4  
                                              u920 0CCC                                                u880 0D24  
                                              u990 06C2                                L6470_Init@step_mode 001B  
                                              wreg 000FE8                         ??_convertReg2StandardCANid 0005  
                            __size_of_SPI_transfer 0010                                               l3111 060E  
                                             l3053 0980                                               l3117 0624  
                                             l3039 0D50                                               l3047 096E  
                                             l1721 089E                                               l3049 097A  
                                             l3057 099E                                               l2703 0CE8  
                                             l2711 0CC0                                               l1737 0936  
                                             l2721 0B00                                               l2731 0BE6  
                                             l3283 09B8                                               l2661 07F2  
                                             l3285 09CA                                               l2911 0140  
                                             l2727 0B3A                                               l2735 0BFA  
                                             l2681 0868                                               l2841 073C  
                                             l2761 06BE                                               l2753 0690  
                                             l2923 01BE                                               l2667 0834  
                                             l2843 0744                                               l2771 06F2  
                                             l2747 0678                                               l2677 085E  
                                             l2861 07C0                                               l2693 0D18  
                                             l2919 018C                                               l2687 0874  
                                             l2871 0AC2                                               l2759 06B2  
                                             l2775 0700                                               l2945 0254  
                                             l2849 0770                                               l2865 0A60  
                                             l2891 00AE                                               l2963 0C66  
                                             l2867 0A96                                               l2779 0716  
                                             l2887 007C                                               u1110 0C4A  
                                             u1025 04C4                                               u1201 0640  
                                             u1130 0C60                                               u1035 0B94  
                                             u1140 027E                                               u1155 03CC  
                                             u1156 03CE                                               u1297 0D56  
                                             _WPUB 000F5B                                               _Busy 0033  
                                             _Wait 0D46                                               _data 0044  
                                             _main 0588                                               fsr2h 000FDA  
                                             indf2 000FDF                                               fsr1l 000FE1  
                                             fsr2l 000FD9                                               btemp 0056  
                                             start 0030                                      __CFG_IESO$OFF 000000  
                                    __CFG_MCLRE$ON 000000                                       ___param_bank 000000  
                                 __end_of_CMD_Send 089A                                  __end_of_L6470_Run 0D46  
                             __size_of_can_recieve 0090                                              ?_Wait 0001  
                                  __end_of___aldiv 0728                                              ?_main 0001  
                                            _T1CON 000FCD                                              _T3CON 000FB1  
                                            i2l820 002C                                              i2l818 0012  
                                     _SPI_transfer 0D70                                              _TMR1H 000FCF  
                                            _TMR3H 000FB3                                              _TMR1L 000FCE  
                                            _TMR3L 000FB2                                              _PORTA 000F80  
                                            _PORTB 000F81                                              _PORTC 000F82  
                                            _TRISA 000F92                                              _TRISB 000F93  
                                            _TRISC 000F94                                      __CFG_WRT0$OFF 000000  
                                    __CFG_WRT1$OFF 000000                                      __CFG_WRT2$OFF 000000  
                              ___lmul@multiplicand 0005                                      __CFG_WRT3$OFF 000000  
                               L6470_GetRegister@i 000E                                              Wait@i 0004  
                                   __CFG_EBTR0$OFF 000000                                     __CFG_FCMEN$OFF 000000  
                                   __CFG_EBTR1$OFF 000000                              CAN_receive@tempCanMsg 0014  
                                   __CFG_EBTR2$OFF 000000                                     __CFG_EBTR3$OFF 000000  
                                    __CFG_WRTB$OFF 000000                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                                     __CFG_EBTRB$OFF 000000  
                                 __end_of_SPI_Init 0C76                                              tablat 000FF5  
                                            plusw0 000FEB                                              plusw2 000FDB  
                                            ttemp5 0057                                              ttemp6 005A  
                                            ttemp7 005E                convertReg2ExtendedCANid@ConvertedID 0010  
                                            status 000FD8                                              wtemp8 0057  
                                     ??_L6470_Init 0019                                       ??_L6470_Move 0017  
                                     ??_L6470_Stop 0004                                       SPI_Init@mode 0006  
                                     SPI_Init@stat 0004                                    __initialization 0C76  
                             __size_of_CAN_receive 0224                                       __end_of_Wait 0D70  
                                     __end_of_main 065C                                             ??_Wait 0003  
                                           ??_main 0033                                         _InterTimer 0008  
                                    __activetblptr 000002                                     __CFG_RETEN$OFF 000000  
                                 __end_of_ServoOut 0A5E                                 __end_of_L6470_Init 0450  
                               __end_of_L6470_Move 0D16                                  ??_ECAN_Initialize 0001  
                               __end_of_L6470_Stop 0CE4                                             _CANCON 000F6F  
                                           _ANCON0 000F5D                                             _ANCON1 000F5C  
                                           _CIOCON 000F70                                    __CFG_BBSIZ$BB2K 000000  
                                           _OSCCON 000FD3                                             _RXB0D0 000F66  
                                           _RXB0D1 000F67                                             _RXB0D2 000F68  
                                           _RXB0D3 000F69                                             _RXB0D4 000F6A  
                                           _RXB1D0 000F36                                             _RXB0D5 000F6B  
                                           _RXB1D1 000F37                                             _RXB0D6 000F6C  
                                           _RXB1D2 000F38                                             _RXB0D7 000F6D  
                                           _RXB1D3 000F39                                             _RXB1D4 000F3A  
                                           _RXB1D5 000F3B                                             _RXB1D6 000F3C  
                                           _RXB1D7 000F3D                                             _TXB0D0 000F26  
                                           _TXB0D1 000F27                                             _TXB0D2 000F28  
                                           _TXB0D3 000F29                                             _TXB0D4 000F2A  
                                           _TXB1D0 000F16                                             _TXB0D5 000F2B  
                                           _TXB1D1 000F17                                             _TXB0D6 000F2C  
                                           _TXB1D2 000F18                                             _TXB0D7 000F2D  
                                           _TXB1D3 000F19                                             _TXB1D4 000F1A  
                                           _TXB2D0 000F06                                             _TXB1D5 000F1B  
                                           _TXB2D1 000F07                                             _TXB1D6 000F1C  
                                           _TXB2D2 000F08                                             _TXB1D7 000F1D  
                                           _TXB2D3 000F09                                             _TXB2D4 000F0A  
                                           _TXB2D5 000F0B                                             _TXB2D6 000F0C  
                                           _TXB2D7 000F0D                                             _SSPADD 000FC8  
                                           _SSPBUF 000FC9                                             _T1time 0054  
                              L6470_GetRegister@dt 000A                                     __CFG_XINST$OFF 000000  
                                           ___lmul 0BD6                                          ??___aldiv 0015  
                                   __CFG_STVREN$ON 000000                                             clear_0 0C9C  
                                     __pdataCOMRAM 004C                   __end_of_convertReg2StandardCANid 0BD6  
                                           tblptrh 000FF7                                             tblptrl 000FF6  
                                           tblptru 000FF8                                          CMD_Send@i 0011  
                                        ?_CMD_Send 0002                                         __accesstop 0060  
                          __end_of__initialization 0CA2                           _convertReg2ExtendedCANid 0450  
                           CAN_receive@returnValue 0016                                      ___rparam_used 000001  
                                   __pcstackCOMRAM 0001                                     SPI_transfer@dt 0001  
                                        ?_SPI_Init 0001                           L6470_GetRegister@regadrs 0010  
                                      ?_InterTimer 0001              convertReg2StandardCANid@tempRXBn_SIDH 0007  
            convertReg2StandardCANid@tempRXBn_SIDL 0001                                         ??_CMD_Send 0008  
                                  __CFG_PLLCFG$OFF 000000                                         __pnvCOMRAM 0054  
                                        ?_ServoOut 001B                                            ?___lmul 0001  
                            __end_of_L6470_command 0AE6                                            _ECANCON 000F72  
                                   ___lmul@product 0009                                            _CANSTAT 000F6E  
                                       ??_SPI_Init 0004                                            _BRGCON1 000E43  
                                          _BRGCON2 000E44                                            _BRGCON3 000E45  
                                 __CFG_CANMX$PORTB 000000                                          _L6470_Run 0D16  
                                _L6470_GetRegister 0728                                            _RXB0DLC 000F65  
                                          _RXB1DLC 000F35                                            _TXB0DLC 000F25  
                                          _TXB1DLC 000F15                                            _TXB2DLC 000F05  
                               ?_L6470_GetRegister 0002                                            _SSPCON1 000FC6  
                                          _SSPSTAT 000FC7                                ??_L6470_GetRegister 0006  
                              __size_of_InterTimer 0028                               L6470_GetRegister@ans 0011  
                             L6470_GetRegister@num 0002                                    __CFG_PWRTEN$OFF 000000  
                                          Wait@num 0001                                            __Hparam 0000  
                                          __Lparam 0000                  __size_of_convertReg2StandardCANid 0076  
                        ?_convertReg2StandardCANid 0001                                         ??_ServoOut 001D  
                                    ??_can_recieve 002F                                            ___aldiv 065C  
                                  __size_of___lmul 0056                                    _ECAN_Initialize 089A  
                                          __pcinit 0C76                                            __ramtop 0F00  
                                          __ptext0 0588                                            __ptext1 0944  
                                          __ptext2 09D4                                            __ptext3 0BD6  
                                          __ptext4 065C                                            __ptext5 0A5E  
                                          __ptext6 0AE6                                            __ptext7 0CB0  
                                          __ptext8 0D16                                            __ptext9 0CE4  
                        __end_of_L6470_GetRegister 07E6                                          _T1CONbits 000FCD  
                                        _T3CONbits 000FB1                                         ?_L6470_Run 0013  
                                 ___aldiv@dividend 000D                                  __CFG_MSSPMSK$MSK7 000000  
                                    ?_L6470_change 0001                               end_of_initialization 0CA2  
                                    __Lmediumconst 0000                                      ??_CAN_receive 0016  
                                      L6470_Init@i 0020                                         CMD_Send@dt 000C  
                                 ___aldiv@quotient 0017                                            postdec1 000FE5  
                                          postinc0 000FEE                                            postinc2 000FDE  
                                       _servo_Flag 0035                                          _PORTBbits 000F81  
                                        _PORTCbits 000F82                                __end_of_can_recieve 09D4  
                                 __CFG_FOSC$INTIO2 000000                                     ??_L6470_change 0005  
                                  L6470_change@val 000C                                    L6470_change@num 0003  
                       ??_convertReg2ExtendedCANid 0005                                  __size_of_CMD_Send 00B4  
                             can_recieve@rxMessage 0021                            __end_of_ECAN_Initialize 0944  
                              __end_of_CAN_receive 0258                                     __end_of___lmul 0C2C  
                                    __pidataCOMRAM 0D80                                       ??_InterTimer 0001  
                       __size_of_L6470_GetRegister 00BE                                  __size_of_SPI_Init 004A  
                                      ??_L6470_Run 0017                                start_initialization 0C76  
                                      SPI_Init@con 0005                                        SPI_Init@sdo 0002  
              convertReg2StandardCANid@returnValue 0008                                 __end_of_InterTimer 0030  
                                         ??___lmul 0009                                        _can_recieve 0944  
                                __size_of_ServoOut 008A                                   L6470_Init@config 0019  
                                    ?_SPI_transfer 0001                                        __pbssCOMRAM 0033  
                                      _CAN_receive 0034                                   ?_ECAN_Initialize 0001  
                             __end_of_L6470_change 0B60                                      ServoOut@angle 001B  
                                        __pintcode 0008                                      ServoOut@value 001D  
                                         ?___aldiv 000D                                     L6470_Move@step 0013  
                                   ??_SPI_transfer 0001                                        _COMSTATbits 000F71  
                                   L6470_Run@speed 0013                   __end_of_convertReg2ExtendedCANid 0588  
                           __size_of_L6470_command 0088                                           _CMD_Send 07E6  
                                   L6470_Stop@mode 0002                                    ___aldiv@divisor 0011  
                                  ___aldiv@counter 0015                                         _L6470_Init 0258  
                                       _L6470_Move 0CE4                                         _L6470_Stop 0CB0  
                                         _PIE1bits 000F9D                                           _PIE2bits 000FA0  
                                         _PIE5bits 000F76                                           _PIR1bits 000F9E  
                                         _PIR2bits 000FA1                                           _PIR5bits 000F77  
                                        _rxMessage 0036                                           _RXB0EIDH 000F63  
                                         _RXB0EIDL 000F64                                           _RXB1EIDH 000F33  
                                         _RXB1EIDL 000F34                                           _RXB0SIDH 000F61  
                                         _RXB0SIDL 000F62                                           _RXB1SIDH 000F31  
                                         _RXF0EIDH 000EE2                                           _RXB1SIDL 000F32  
                                         _RXF0EIDL 000EE3                                           _RXF1EIDH 000EE6  
                                         _RXF1EIDL 000EE7                                           _RXF2EIDH 000EEA  
                                         _RXF2EIDL 000EEB                                           _RXF3EIDH 000EEE  
                                         _RXF3EIDL 000EEF                                           _RXF4EIDH 000EF2  
                                         _RXF4EIDL 000EF3                                           _RXF5EIDH 000EF6  
                                         _RXF5EIDL 000EF7                                           _RXF0SIDH 000EE0  
                                         _RXF0SIDL 000EE1                                           _TXB0EIDH 000F23  
                                         _RXF1SIDH 000EE4                                           _TXB0EIDL 000F24  
                                         _RXF1SIDL 000EE5                                           _TXB1EIDH 000F13  
                                         _RXF2SIDH 000EE8                                           _TXB1EIDL 000F14  
                                         _RXF2SIDL 000EE9                                           _TXB2EIDH 000F03  
                                         _RXF3SIDH 000EEC                                           _TXB2EIDL 000F04  
                                         _RXF3SIDL 000EED                                           _RXF4SIDH 000EF0  
                                         _RXF4SIDL 000EF1                                           _RXF5SIDH 000EF4  
                                         _RXF5SIDL 000EF5                                           _RXM0EIDH 000EFA  
                                         _RXM0EIDL 000EFB                                           _TXB0SIDH 000F21  
                                         _RXM1EIDH 000EFE                                           _TXB0SIDL 000F22  
                                         _RXM1EIDL 000EFF                                           _TXB1SIDH 000F11  
                                         _TXB1SIDL 000F12                                           _TXB2SIDH 000F01  
                                         _TXB2SIDL 000F02                                           _RXM0SIDH 000EF8  
                                         _RXM0SIDL 000EF9                                           _RXM1SIDH 000EFC  
                                         _RXM1SIDL 000EFD                                     L6470_change@dt 0001  
                                         _SPI_Init 0C2C                                   __CFG_SOSCSEL$DIG 000000  
                                ___lmul@multiplier 0001                                        _INTCON2bits 000FF1  
                                        copy_data0 0C8A                           _convertReg2StandardCANid 0B60  
            convertReg2ExtendedCANid@tempRXBn_EIDH 0009              convertReg2ExtendedCANid@tempRXBn_EIDL 0001  
            convertReg2ExtendedCANid@tempRXBn_SIDH 0002              convertReg2ExtendedCANid@tempRXBn_SIDL 0003  
                                         __Hrparam 0000                                           __Lrparam 0000  
                               __CFG_BOREN$SBORDIS 000000                                           _ServoOut 09D4  
                                    _L6470_command 0A5E                                   __size_of___aldiv 00CC  
                                 L6470_Stop@F12229 004C  convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 000F  
convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 000E                                      L6470_Init@val 001C  
                                         __ptext10 0D46                                           __ptext11 0C2C  
                                         __ptext12 0258                                           __ptext13 0728  
                                         __ptext14 07E6                                           __ptext15 0D70  
                                         __ptext16 089A                                           __ptext17 0034  
                                         __ptext18 0B60                                           __ptext19 0450  
                                    L6470_Move@dir 0017                convertReg2StandardCANid@ConvertedID 000C  
                                    __size_of_Wait 002A                              __size_of_L6470_change 007A  
                                    __size_of_main 00D4                                        ?_L6470_Init 0015  
                                      ?_L6470_Move 0013                               __end_of_SPI_transfer 0D80  
                                    L6470_Stop@cmd 0004                                        ?_L6470_Stop 0002  
              convertReg2ExtendedCANid@returnValue 000A                  __size_of_convertReg2ExtendedCANid 0138  
                        ?_convertReg2ExtendedCANid 0001                                     ?_L6470_command 0001  
                                     ?_can_recieve 0021                                           int$flags 0056  
                                    L6470_change@i 000A                                __CFG_INTOSCSEL$HIGH 000000  
                                      _RXB0CONbits 000F60                                        _RXB1CONbits 000F30  
                               __CFG_WDTEN$SWDTDIS 000000                                         _INTCONbits 000FF2  
                                     _L6470_change 0AE6                                           intlevel2 0000  
                                     L6470_Run@dir 0017                                        _TXB0CONbits 000F20  
                                     ?_CAN_receive 0014                                        _TXB1CONbits 000F10  
                                      _TXB2CONbits 000F00                                        CMD_Send@cmd 0010  
                                      CMD_Send@val 0002                                        CMD_Send@num 0006  
                               __CFG_WDTPS$1048576 000000                                __size_of_L6470_Init 01F8  
                              __size_of_L6470_Move 0032                                __size_of_L6470_Stop 0034  
                                      _servo_Angle 0050                                       ___aldiv@sign 0016  
                               __size_of_L6470_Run 0030                                __CFG_BORPWR$ZPBORMV 000000  
                                  ??_L6470_command 0018  
