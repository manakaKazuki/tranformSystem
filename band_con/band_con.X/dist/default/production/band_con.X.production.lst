

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Oct 21 15:45:30 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           ; Version 2.05
    39                           ; Generated 20/12/2018 GMT
    40                           ; 
    41                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F26K80 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  000FD8                     __pidataCOMRAM:
    75                           	opt callstack 0
    76                           
    77                           ;initializer for L6470_Stop@F12231
    78  000FD8  B0                 	db	176
    79  000FD9  B8                 	db	184
    80  000FDA  A0                 	db	160
    81  000FDB  A8                 	db	168
    82                           
    83                           ;initializer for _servo_Angle
    84  000FDC  0000               	dw	0
    85  000FDE  0050               	dw	80
    86                           
    87                           	psect	nvCOMRAM
    88  00004C                     __pnvCOMRAM:
    89                           	opt callstack 0
    90  00004C                     _T1time:
    91                           	opt callstack 0
    92  00004C                     	ds	2
    93  0000                     _BRGCON3	set	3653
    94  0000                     _BRGCON2	set	3652
    95  0000                     _BRGCON1	set	3651
    96  0000                     _RXF5SIDL	set	3829
    97  0000                     _RXF5SIDH	set	3828
    98  0000                     _RXF5EIDL	set	3831
    99  0000                     _RXF5EIDH	set	3830
   100  0000                     _RXF4SIDL	set	3825
   101  0000                     _RXF4SIDH	set	3824
   102  0000                     _RXF4EIDL	set	3827
   103  0000                     _RXF4EIDH	set	3826
   104  0000                     _RXF3SIDL	set	3821
   105  0000                     _RXF3SIDH	set	3820
   106  0000                     _RXF3EIDL	set	3823
   107  0000                     _RXF3EIDH	set	3822
   108  0000                     _RXF2SIDL	set	3817
   109  0000                     _RXF2SIDH	set	3816
   110  0000                     _RXF2EIDL	set	3819
   111  0000                     _RXF2EIDH	set	3818
   112  0000                     _RXF1SIDL	set	3813
   113  0000                     _RXF1SIDH	set	3812
   114  0000                     _RXF1EIDL	set	3815
   115  0000                     _RXF1EIDH	set	3814
   116  0000                     _RXF0SIDL	set	3809
   117  0000                     _RXF0SIDH	set	3808
   118  0000                     _RXF0EIDL	set	3811
   119  0000                     _RXF0EIDH	set	3810
   120  0000                     _RXM1SIDL	set	3837
   121  0000                     _RXM1SIDH	set	3836
   122  0000                     _RXM1EIDL	set	3839
   123  0000                     _RXM1EIDH	set	3838
   124  0000                     _RXM0SIDL	set	3833
   125  0000                     _RXM0SIDH	set	3832
   126  0000                     _RXM0EIDL	set	3835
   127  0000                     _RXM0EIDH	set	3834
   128  0000                     _ANCON1	set	3932
   129  0000                     _ANCON0	set	3933
   130  0000                     _WPUB	set	3931
   131  0000                     _RXB1D7	set	3901
   132  0000                     _RXB1D6	set	3900
   133  0000                     _RXB1D5	set	3899
   134  0000                     _RXB1D4	set	3898
   135  0000                     _RXB1D3	set	3897
   136  0000                     _RXB1D2	set	3896
   137  0000                     _RXB1D1	set	3895
   138  0000                     _RXB1D0	set	3894
   139  0000                     _RXB1DLC	set	3893
   140  0000                     _RXB1SIDH	set	3889
   141  0000                     _RXB1EIDL	set	3892
   142  0000                     _RXB1EIDH	set	3891
   143  0000                     _RXB1SIDL	set	3890
   144  0000                     _RXB1CONbits	set	3888
   145  0000                     _TXB2D7	set	3853
   146  0000                     _TXB2D6	set	3852
   147  0000                     _TXB2D5	set	3851
   148  0000                     _TXB2D4	set	3850
   149  0000                     _TXB2D3	set	3849
   150  0000                     _TXB2D2	set	3848
   151  0000                     _TXB2D1	set	3847
   152  0000                     _TXB2D0	set	3846
   153  0000                     _TXB2DLC	set	3845
   154  0000                     _TXB2SIDL	set	3842
   155  0000                     _TXB2SIDH	set	3841
   156  0000                     _TXB2EIDL	set	3844
   157  0000                     _TXB2EIDH	set	3843
   158  0000                     _TXB2CONbits	set	3840
   159  0000                     _TXB1D7	set	3869
   160  0000                     _TXB1D6	set	3868
   161  0000                     _TXB1D5	set	3867
   162  0000                     _TXB1D4	set	3866
   163  0000                     _TXB1D3	set	3865
   164  0000                     _TXB1D2	set	3864
   165  0000                     _TXB1D1	set	3863
   166  0000                     _TXB1D0	set	3862
   167  0000                     _TXB1DLC	set	3861
   168  0000                     _TXB1SIDL	set	3858
   169  0000                     _TXB1SIDH	set	3857
   170  0000                     _TXB1EIDL	set	3860
   171  0000                     _TXB1EIDH	set	3859
   172  0000                     _TXB1CONbits	set	3856
   173  0000                     _TXB0D7	set	3885
   174  0000                     _TXB0D6	set	3884
   175  0000                     _TXB0D5	set	3883
   176  0000                     _TXB0D4	set	3882
   177  0000                     _TXB0D3	set	3881
   178  0000                     _TXB0D2	set	3880
   179  0000                     _TXB0D1	set	3879
   180  0000                     _TXB0D0	set	3878
   181  0000                     _TXB0DLC	set	3877
   182  0000                     _TXB0SIDL	set	3874
   183  0000                     _TXB0SIDH	set	3873
   184  0000                     _TXB0EIDL	set	3876
   185  0000                     _TXB0EIDH	set	3875
   186  0000                     _TXB0CONbits	set	3872
   187  0000                     _TMR1L	set	4046
   188  0000                     _TMR1H	set	4047
   189  0000                     _TMR3L	set	4018
   190  0000                     _TMR3H	set	4019
   191  0000                     _SSPADD	set	4040
   192  0000                     _SSPSTAT	set	4039
   193  0000                     _SSPCON1	set	4038
   194  0000                     _SSPSTATbits	set	4039
   195  0000                     _SSPBUF	set	4041
   196  0000                     _PORTAbits	set	3968
   197  0000                     _PORTCbits	set	3970
   198  0000                     _PORTBbits	set	3969
   199  0000                     _T3CONbits	set	4017
   200  0000                     _T1CONbits	set	4045
   201  0000                     _INTCONbits	set	4082
   202  0000                     _PIE2bits	set	4000
   203  0000                     _PIR2bits	set	4001
   204  0000                     _PIE1bits	set	3997
   205  0000                     _PIR1bits	set	3998
   206  0000                     _T3CON	set	4017
   207  0000                     _T1CON	set	4045
   208  0000                     _PORTC	set	3970
   209  0000                     _PORTB	set	3969
   210  0000                     _PORTA	set	3968
   211  0000                     _TRISC	set	3988
   212  0000                     _TRISB	set	3987
   213  0000                     _TRISA	set	3986
   214  0000                     _INTCON2bits	set	4081
   215  0000                     _OSCCON	set	4051
   216  0000                     _COMSTATbits	set	3953
   217  0000                     _RXB0D7	set	3949
   218  0000                     _RXB0D6	set	3948
   219  0000                     _RXB0D5	set	3947
   220  0000                     _RXB0D4	set	3946
   221  0000                     _RXB0D3	set	3945
   222  0000                     _RXB0D2	set	3944
   223  0000                     _RXB0D1	set	3943
   224  0000                     _RXB0D0	set	3942
   225  0000                     _RXB0DLC	set	3941
   226  0000                     _RXB0SIDH	set	3937
   227  0000                     _RXB0EIDL	set	3940
   228  0000                     _RXB0EIDH	set	3939
   229  0000                     _RXB0SIDL	set	3938
   230  0000                     _PIE5bits	set	3958
   231  0000                     _PIR5bits	set	3959
   232  0000                     _RXB0CONbits	set	3936
   233  0000                     _CIOCON	set	3952
   234  0000                     _ECANCON	set	3954
   235  0000                     _CANSTAT	set	3950
   236  0000                     _CANCON	set	3951
   237                           
   238                           ; #config settings
   239  0000                     
   240                           	psect	cinit
   241  000E64                     __pcinit:
   242                           	opt callstack 0
   243  000E64                     start_initialization:
   244                           	opt callstack 0
   245  000E64                     __initialization:
   246                           	opt callstack 0
   247                           
   248                           ; Initialize objects allocated to COMRAM (8 bytes)
   249                           ; load TBLPTR registers with __pidataCOMRAM
   250  000E64  0ED8               	movlw	low __pidataCOMRAM
   251  000E66  6EF6               	movwf	tblptrl,c
   252  000E68  0E0F               	movlw	high __pidataCOMRAM
   253  000E6A  6EF7               	movwf	tblptrh,c
   254  000E6C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   255  000E6E  6EF8               	movwf	tblptru,c
   256  000E70  EE00  F044         	lfsr	0,__pdataCOMRAM
   257  000E74  EE10 F008          	lfsr	1,8
   258  000E78                     copy_data0:
   259  000E78  0009               	tblrd		*+
   260  000E7A  CFF5 FFEE          	movff	tablat,postinc0
   261  000E7E  50E5               	movf	postdec1,w,c
   262  000E80  50E1               	movf	fsr1l,w,c
   263  000E82  E1FA               	bnz	copy_data0
   264                           
   265                           ; Clear objects allocated to BANK0 (28 bytes)
   266  000E84  EE00  F060         	lfsr	0,__pbssBANK0
   267  000E88  0E1C               	movlw	28
   268  000E8A                     clear_0:
   269  000E8A  6AEE               	clrf	postinc0,c
   270  000E8C  06E8               	decf	wreg,f,c
   271  000E8E  E1FD               	bnz	clear_0
   272                           
   273                           ; Clear objects allocated to COMRAM (19 bytes)
   274  000E90  EE00  F031         	lfsr	0,__pbssCOMRAM
   275  000E94  0E13               	movlw	19
   276  000E96                     clear_1:
   277  000E96  6AEE               	clrf	postinc0,c
   278  000E98  06E8               	decf	wreg,f,c
   279  000E9A  E1FD               	bnz	clear_1
   280  000E9C                     end_of_initialization:
   281                           	opt callstack 0
   282  000E9C                     __end_of__initialization:
   283                           	opt callstack 0
   284  000E9C  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   285  000E9E  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   286  000EA0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   287  000EA2  6EF8               	movwf	tblptru,c
   288  000EA4  0100               	movlb	0
   289  000EA6  EF1A  F000         	goto	_main	;jump to C main() function
   290                           
   291                           	psect	bssCOMRAM
   292  000031                     __pbssCOMRAM:
   293                           	opt callstack 0
   294  000031                     _pos:
   295                           	opt callstack 0
   296  000031                     	ds	4
   297  000035                     _Busy:
   298                           	opt callstack 0
   299  000035                     	ds	2
   300  000037                     _direction:
   301                           	opt callstack 0
   302  000037                     	ds	2
   303  000039                     _mode:
   304                           	opt callstack 0
   305  000039                     	ds	2
   306  00003B                     _servo_Flag:
   307                           	opt callstack 0
   308  00003B                     	ds	1
   309  00003C                     _data:
   310                           	opt callstack 0
   311  00003C                     	ds	8
   312                           
   313                           	psect	dataCOMRAM
   314  000044                     __pdataCOMRAM:
   315                           	opt callstack 0
   316  000044                     L6470_Stop@F12231:
   317                           	opt callstack 0
   318  000044                     	ds	4
   319  000048                     _servo_Angle:
   320                           	opt callstack 0
   321  000048                     	ds	4
   322                           
   323                           	psect	bssBANK0
   324  000060                     __pbssBANK0:
   325                           	opt callstack 0
   326  000060                     _txMessage:
   327                           	opt callstack 0
   328  000060                     	ds	14
   329  00006E                     _rxMessage:
   330                           	opt callstack 0
   331  00006E                     	ds	14
   332                           
   333                           	psect	cstackCOMRAM
   334  000001                     __pcstackCOMRAM:
   335                           	opt callstack 0
   336  000001                     ??_ECAN_Initialize:
   337  000001                     ?_convertReg2ExtendedCANid:
   338                           	opt callstack 0
   339  000001                     ?_convertReg2StandardCANid:
   340                           	opt callstack 0
   341  000001                     ?_L6470_change:
   342                           	opt callstack 0
   343  000001                     ?___lmul:
   344                           	opt callstack 0
   345  000001                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   346                           	opt callstack 0
   347  000001                     convertReg2StandardCANid@tempRXBn_SIDL:
   348                           	opt callstack 0
   349  000001                     SPI_Init@divider:
   350                           	opt callstack 0
   351  000001                     SPI_transfer@dt:
   352                           	opt callstack 0
   353  000001                     Wait@num:
   354                           	opt callstack 0
   355  000001                     L6470_change@dt:
   356                           	opt callstack 0
   357  000001                     ___lmul@multiplier:
   358                           	opt callstack 0
   359                           
   360                           ; 4 bytes @ 0x0
   361  000001                     	ds	1
   362  000002                     ?_L6470_GetRegister:
   363                           	opt callstack 0
   364  000002                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   365                           	opt callstack 0
   366  000002                     L6470_GetRegister@num:
   367                           	opt callstack 0
   368  000002                     L6470_Stop@mode:
   369                           	opt callstack 0
   370  000002                     L6470_CMD@command:
   371                           	opt callstack 0
   372  000002                     SPI_Init@sdo:
   373                           	opt callstack 0
   374  000002                     CMD_Send@val:
   375                           	opt callstack 0
   376                           
   377                           ; 4 bytes @ 0x1
   378  000002                     	ds	1
   379  000003                     ??_Wait:
   380  000003                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   381                           	opt callstack 0
   382  000003                     L6470_change@num:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x2
   386  000003                     	ds	1
   387  000004                     SPI_Init@stat:
   388                           	opt callstack 0
   389  000004                     Wait@i:
   390                           	opt callstack 0
   391  000004                     L6470_Stop@cmd:
   392                           	opt callstack 0
   393                           
   394                           ; 4 bytes @ 0x3
   395  000004                     	ds	1
   396  000005                     ??_convertReg2ExtendedCANid:
   397  000005                     ??_convertReg2StandardCANid:
   398  000005                     ??_L6470_change:
   399  000005                     SPI_Init@con:
   400                           	opt callstack 0
   401  000005                     ___lmul@multiplicand:
   402                           	opt callstack 0
   403                           
   404                           ; 4 bytes @ 0x4
   405  000005                     	ds	1
   406  000006                     ??_L6470_GetRegister:
   407  000006                     SPI_Init@mode:
   408                           	opt callstack 0
   409  000006                     CMD_Send@num:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x5
   413  000006                     	ds	1
   414  000007                     convertReg2StandardCANid@tempRXBn_SIDH:
   415                           	opt callstack 0
   416                           
   417                           ; 1 bytes @ 0x6
   418  000007                     	ds	1
   419  000008                     ??_CMD_Send:
   420  000008                     convertReg2StandardCANid@returnValue:
   421                           	opt callstack 0
   422                           
   423                           ; 4 bytes @ 0x7
   424  000008                     	ds	1
   425  000009                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   426                           	opt callstack 0
   427  000009                     ___lmul@product:
   428                           	opt callstack 0
   429                           
   430                           ; 4 bytes @ 0x8
   431  000009                     	ds	1
   432  00000A                     L6470_change@i:
   433                           	opt callstack 0
   434  00000A                     convertReg2ExtendedCANid@returnValue:
   435                           	opt callstack 0
   436  00000A                     L6470_GetRegister@dt:
   437                           	opt callstack 0
   438                           
   439                           ; 4 bytes @ 0x9
   440  00000A                     	ds	2
   441  00000C                     convertReg2StandardCANid@ConvertedID:
   442                           	opt callstack 0
   443  00000C                     CMD_Send@dt:
   444                           	opt callstack 0
   445  00000C                     L6470_change@val:
   446                           	opt callstack 0
   447                           
   448                           ; 4 bytes @ 0xB
   449  00000C                     	ds	1
   450  00000D                     ?___aldiv:
   451                           	opt callstack 0
   452  00000D                     ___aldiv@dividend:
   453                           	opt callstack 0
   454                           
   455                           ; 4 bytes @ 0xC
   456  00000D                     	ds	1
   457  00000E                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   458                           	opt callstack 0
   459  00000E                     L6470_GetRegister@i:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0xD
   463  00000E                     	ds	1
   464  00000F                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   465                           	opt callstack 0
   466                           
   467                           ; 1 bytes @ 0xE
   468  00000F                     	ds	1
   469  000010                     CMD_Send@cmd:
   470                           	opt callstack 0
   471  000010                     L6470_GetRegister@regadrs:
   472                           	opt callstack 0
   473  000010                     convertReg2ExtendedCANid@ConvertedID:
   474                           	opt callstack 0
   475                           
   476                           ; 4 bytes @ 0xF
   477  000010                     	ds	1
   478  000011                     CMD_Send@i:
   479                           	opt callstack 0
   480  000011                     L6470_GetRegister@ans:
   481                           	opt callstack 0
   482  000011                     ___aldiv@divisor:
   483                           	opt callstack 0
   484                           
   485                           ; 4 bytes @ 0x10
   486  000011                     	ds	2
   487  000013                     L6470_Run@speed:
   488                           	opt callstack 0
   489  000013                     L6470_Move@step:
   490                           	opt callstack 0
   491                           
   492                           ; 4 bytes @ 0x12
   493  000013                     	ds	1
   494  000014                     CAN_receive@tempCanMsg:
   495                           	opt callstack 0
   496                           
   497                           ; 2 bytes @ 0x13
   498  000014                     	ds	1
   499  000015                     ?_L6470_Init:
   500                           	opt callstack 0
   501  000015                     ___aldiv@counter:
   502                           	opt callstack 0
   503                           
   504                           ; 1 bytes @ 0x14
   505  000015                     	ds	1
   506  000016                     CAN_receive@returnValue:
   507                           	opt callstack 0
   508  000016                     ___aldiv@sign:
   509                           	opt callstack 0
   510                           
   511                           ; 1 bytes @ 0x15
   512  000016                     	ds	1
   513  000017                     L6470_Run@dir:
   514                           	opt callstack 0
   515  000017                     L6470_Move@dir:
   516                           	opt callstack 0
   517  000017                     ___aldiv@quotient:
   518                           	opt callstack 0
   519                           
   520                           ; 4 bytes @ 0x16
   521  000017                     	ds	1
   522  000018                     ??_L6470_command:
   523                           
   524                           ; 1 bytes @ 0x17
   525  000018                     	ds	1
   526  000019                     L6470_Init@config:
   527                           	opt callstack 0
   528                           
   529                           ; 2 bytes @ 0x18
   530  000019                     	ds	2
   531  00001B                     L6470_Init@step_mode:
   532                           	opt callstack 0
   533  00001B                     ServoOut@angle:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x1A
   537  00001B                     	ds	1
   538  00001C                     L6470_Init@val:
   539                           	opt callstack 0
   540                           
   541                           ; 4 bytes @ 0x1B
   542  00001C                     	ds	1
   543  00001D                     ServoOut@value:
   544                           	opt callstack 0
   545                           
   546                           ; 4 bytes @ 0x1C
   547  00001D                     	ds	3
   548  000020                     L6470_Init@i:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x1F
   552  000020                     	ds	1
   553  000021                     can_recieve@rxMessage:
   554                           	opt callstack 0
   555                           
   556                           ; 14 bytes @ 0x20
   557  000021                     	ds	14
   558  00002F                     ??_main:
   559                           
   560                           ; 1 bytes @ 0x2E
   561  00002F                     	ds	2
   562                           
   563 ;;
   564 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   565 ;;
   566 ;; *************** function _main *****************
   567 ;; Defined at:
   568 ;;		line 111 in file "main.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  ans             4    0        unsigned long 
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   583 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   584 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   585 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   586 ;;Total ram usage:        6 bytes
   587 ;; Hardware stack levels required when called:    6
   588 ;; This function calls:
   589 ;;		_CAN_receive
   590 ;;		_ECAN_Initialize
   591 ;;		_L6470_CMD
   592 ;;		_L6470_Init
   593 ;;		_L6470_Run
   594 ;;		_L6470_Stop
   595 ;;		_SPI_Init
   596 ;;		_ServoOut
   597 ;;		_Wait
   598 ;;		_can_recieve
   599 ;; This function is called by:
   600 ;;		Startup code after reset
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text0
   605  000034                     __ptext0:
   606                           	opt callstack 0
   607  000034                     _main:
   608                           	opt callstack 25
   609                           
   610                           ;main.c: 113:     unsigned long ans ;;main.c: 115:     OSCCON = 0b01110010;
   611                           
   612                           ;incstack = 0
   613  000034  0E72               	movlw	114
   614  000036  6ED3               	movwf	4051,c	;volatile
   615                           
   616                           ;main.c: 116:     INTCON2bits.RBPU = 0;
   617  000038  9EF1               	bcf	4081,7,c	;volatile
   618                           
   619                           ;main.c: 117:     WPUB = 0b00100010;
   620  00003A  0E22               	movlw	34
   621  00003C  010F               	movlb	15	; () banked
   622  00003E  6F5B               	movwf	91,b	;volatile
   623                           
   624                           ;main.c: 118:     ANCON0 = 0b00000000;
   625  000040  0E00               	movlw	0
   626  000042  6F5D               	movwf	93,b	;volatile
   627                           
   628                           ;main.c: 119:     ANCON1 = 0b00000000;
   629  000044  0E00               	movlw	0
   630  000046  6F5C               	movwf	92,b	;volatile
   631                           
   632                           ;main.c: 120:     TRISA = 0b11000000;
   633  000048  0EC0               	movlw	192
   634  00004A  6E92               	movwf	3986,c	;volatile
   635                           
   636                           ;main.c: 121:     TRISB = 0b00101010;
   637  00004C  0E2A               	movlw	42
   638  00004E  6E93               	movwf	3987,c	;volatile
   639                           
   640                           ;main.c: 122:     TRISC = 0b00010001;
   641  000050  0E11               	movlw	17
   642  000052  6E94               	movwf	3988,c	;volatile
   643                           
   644                           ;main.c: 123:     PORTA = 0b00000000;
   645  000054  0E00               	movlw	0
   646  000056  6E80               	movwf	3968,c	;volatile
   647                           
   648                           ;main.c: 124:     PORTB = 0b00000001;
   649  000058  0E01               	movlw	1
   650  00005A  6E81               	movwf	3969,c	;volatile
   651                           
   652                           ;main.c: 125:     PORTC = 0b00000000;
   653  00005C  0E00               	movlw	0
   654  00005E  6E82               	movwf	3970,c	;volatile
   655                           
   656                           ;main.c: 127:     T1CON = 0b00110000;
   657  000060  0E30               	movlw	48
   658  000062  6ECD               	movwf	4045,c	;volatile
   659                           
   660                           ;main.c: 128:     T3CON = 0b00110000;
   661  000064  0E30               	movlw	48
   662  000066  6EB1               	movwf	4017,c	;volatile
   663                           
   664                           ; BSR set to: 15
   665                           ;main.c: 129:     PIR1bits.TMR1IF = 0;
   666  000068  909E               	bcf	3998,0,c	;volatile
   667                           
   668                           ; BSR set to: 15
   669                           ;main.c: 130:     PIE1bits.TMR1IE = 1;
   670  00006A  809D               	bsf	3997,0,c	;volatile
   671                           
   672                           ; BSR set to: 15
   673                           ;main.c: 131:     PIR2bits.TMR3IF = 0;
   674  00006C  92A1               	bcf	4001,1,c	;volatile
   675                           
   676                           ; BSR set to: 15
   677                           ;main.c: 132:     PIE2bits.TMR3IE = 1;
   678  00006E  82A0               	bsf	4000,1,c	;volatile
   679                           
   680                           ; BSR set to: 15
   681                           ;main.c: 133:     INTCONbits.PEIE = 1;
   682  000070  8CF2               	bsf	4082,6,c	;volatile
   683                           
   684                           ; BSR set to: 15
   685                           ;main.c: 134:     INTCONbits.GIE = 1;
   686  000072  8EF2               	bsf	4082,7,c	;volatile
   687                           
   688                           ; BSR set to: 15
   689                           ;main.c: 137:     ServoOut(servo_Angle[servo_Flag]);
   690  000074  503B               	movf	_servo_Flag,w,c
   691  000076  0D02               	mullw	2
   692  000078  0E48               	movlw	low _servo_Angle
   693  00007A  24F3               	addwf	prodl,w,c
   694  00007C  6ED9               	movwf	fsr2l,c
   695  00007E  0E00               	movlw	high _servo_Angle
   696  000080  20F4               	addwfc	prodh,w,c
   697  000082  6EDA               	movwf	fsr2h,c
   698  000084  CFDE F01B          	movff	postinc2,ServoOut@angle
   699  000088  CFDD F01C          	movff	postdec2,ServoOut@angle+1
   700  00008C  EC25  F006         	call	_ServoOut	;wreg free
   701                           
   702                           ;main.c: 138:     T1CONbits.TMR1ON = 1;
   703  000090  80CD               	bsf	4045,0,c	;volatile
   704                           
   705                           ;main.c: 139:     T3CONbits.TMR3ON = 1;
   706  000092  80B1               	bsf	4017,0,c	;volatile
   707                           
   708                           ;main.c: 143:     ECAN_Initialize() ;
   709  000094  ECCE  F005         	call	_ECAN_Initialize	;wreg free
   710                           
   711                           ;main.c: 146:     SPI_Init(3,0x1,0) ;
   712  000098  0E01               	movlw	1
   713  00009A  6E01               	movwf	SPI_Init@divider,c
   714  00009C  0E00               	movlw	0
   715  00009E  6E03               	movwf	SPI_Init@sdo+1,c
   716  0000A0  0E00               	movlw	0
   717  0000A2  6E02               	movwf	SPI_Init@sdo,c
   718  0000A4  0E03               	movlw	3
   719  0000A6  EC0D  F007         	call	_SPI_Init
   720  0000AA  EC8E  F002         	call	_L6470_Init	;wreg free
   721                           
   722                           ;main.c: 150:     Wait(300) ;
   723  0000AE  0E01               	movlw	1
   724  0000B0  6E02               	movwf	Wait@num+1,c
   725  0000B2  0E2C               	movlw	44
   726  0000B4  6E01               	movwf	Wait@num,c
   727  0000B6  ECC3  F007         	call	_Wait	;wreg free
   728                           
   729                           ;main.c: 153:     while(PORTBbits.RB5){
   730  0000BA  D00B               	goto	l3247
   731  0000BC                     l3245:
   732                           
   733                           ;main.c: 154:         L6470_Run(0,10000);
   734  0000BC  0E10               	movlw	16
   735  0000BE  6E13               	movwf	L6470_Run@speed,c
   736  0000C0  0E27               	movlw	39
   737  0000C2  6E14               	movwf	L6470_Run@speed+1,c
   738  0000C4  0E00               	movlw	0
   739  0000C6  6E15               	movwf	L6470_Run@speed+2,c
   740  0000C8  0E00               	movlw	0
   741  0000CA  6E16               	movwf	L6470_Run@speed+3,c
   742  0000CC  0E00               	movlw	0
   743  0000CE  ECAB  F007         	call	_L6470_Run
   744  0000D2                     l3247:
   745                           
   746                           ;main.c: 153:     while(PORTBbits.RB5){
   747  0000D2  BA81               	btfsc	3969,5,c	;volatile
   748  0000D4  D7F3               	goto	l3245
   749                           
   750                           ;main.c: 156:     L6470_Stop(1);
   751  0000D6  0E00               	movlw	0
   752  0000D8  6E03               	movwf	L6470_Stop@mode+1,c
   753  0000DA  0E01               	movlw	1
   754  0000DC  6E02               	movwf	L6470_Stop@mode,c
   755  0000DE  EC78  F007         	call	_L6470_Stop	;wreg free
   756                           
   757                           ;main.c: 157:     L6470_CMD(0xD8);
   758  0000E2  0E00               	movlw	0
   759  0000E4  6E03               	movwf	L6470_CMD@command+1,c
   760  0000E6  0ED8               	movlw	216
   761  0000E8  6E02               	movwf	L6470_CMD@command,c
   762  0000EA  ECD8  F007         	call	_L6470_CMD	;wreg free
   763                           
   764                           ;main.c: 160:     PORTCbits.RC2 = 1;
   765  0000EE  8482               	bsf	3970,2,c	;volatile
   766                           
   767                           ;main.c: 161:     Wait(100);
   768  0000F0  0E00               	movlw	0
   769  0000F2  6E02               	movwf	Wait@num+1,c
   770  0000F4  0E64               	movlw	100
   771  0000F6  6E01               	movwf	Wait@num,c
   772  0000F8  ECC3  F007         	call	_Wait	;wreg free
   773                           
   774                           ;main.c: 162:     PORTCbits.RC2 = 0;
   775  0000FC  9482               	bcf	3970,2,c	;volatile
   776  0000FE  D0E0               	goto	l3347
   777  000100                     l383:
   778                           
   779                           ;main.c: 168:                 if(PORTBbits.RB5 == 0 && 0){
   780  000100  5081               	movf	3969,w,c	;volatile
   781                           
   782                           ;main.c: 171:                 mode = 1;
   783  000102  0E00               	movlw	0
   784  000104  6E3A               	movwf	_mode+1,c
   785  000106  0E01               	movlw	1
   786  000108  D03C               	goto	L6
   787  00010A                     l386:
   788                           
   789                           ;main.c: 175:                 if(PORTAbits.RA6 == 0){
   790  00010A  BC80               	btfsc	3968,6,c	;volatile
   791  00010C  D018               	goto	l387
   792                           
   793                           ;main.c: 176:                     Wait(20);
   794  00010E  0E00               	movlw	0
   795  000110  6E02               	movwf	Wait@num+1,c
   796  000112  0E14               	movlw	20
   797  000114  6E01               	movwf	Wait@num,c
   798  000116  ECC3  F007         	call	_Wait	;wreg free
   799                           
   800                           ;main.c: 177:                     if(PORTAbits.RA6 == 0){
   801  00011A  BC80               	btfsc	3968,6,c	;volatile
   802  00011C  D00C               	goto	l3277
   803                           
   804                           ;main.c: 178:                         PORTCbits.RC2 = 1;
   805  00011E  8482               	bsf	3970,2,c	;volatile
   806                           
   807                           ;main.c: 179:                         if(servo_Flag == 1){
   808  000120  043B               	decf	_servo_Flag,w,c
   809  000122  A4D8               	btfss	status,2,c
   810  000124  D002               	goto	l3275
   811                           
   812                           ;main.c: 180:                             servo_Flag = 0;
   813  000126  0E00               	movlw	0
   814  000128  D001               	goto	L2
   815  00012A                     l3275:
   816                           
   817                           ;main.c: 182:                             servo_Flag = 1;
   818  00012A  0E01               	movlw	1
   819  00012C                     L2:
   820  00012C  6E3B               	movwf	_servo_Flag,c
   821                           
   822                           ;main.c: 184:                         mode = 4;
   823                           
   824                           ;main.c: 183:                         }
   825  00012E  0E00               	movlw	0
   826  000130  6E3A               	movwf	_mode+1,c
   827  000132  0E04               	movlw	4
   828  000134  D026               	goto	L6
   829  000136                     l3277:
   830                           
   831                           ;main.c: 186:                         mode = 3;
   832  000136  0E00               	movlw	0
   833  000138  6E3A               	movwf	_mode+1,c
   834  00013A  0E03               	movlw	3
   835  00013C  D022               	goto	L6
   836  00013E                     l387:
   837                           
   838                           ;main.c: 190:                     PORTCbits.RC2 = 0;
   839  00013E  9482               	bcf	3970,2,c	;volatile
   840                           
   841                           ;main.c: 191:                     Wait(1);
   842  000140  0E00               	movlw	0
   843  000142  6E02               	movwf	Wait@num+1,c
   844  000144  0E01               	movlw	1
   845  000146  6E01               	movwf	Wait@num,c
   846  000148  ECC3  F007         	call	_Wait	;wreg free
   847                           
   848                           ;main.c: 192:                     mode = 2;
   849  00014C  0E00               	movlw	0
   850  00014E  6E3A               	movwf	_mode+1,c
   851  000150  0E02               	movlw	2
   852  000152  D017               	goto	L6
   853  000154                     l393:
   854                           
   855                           ;main.c: 199:                 if(PORTAbits.RA7 == 0){
   856  000154  BE80               	btfsc	3968,7,c	;volatile
   857  000156  D00E               	goto	l394
   858                           
   859                           ;main.c: 200:                     direction = 1;
   860  000158  0E00               	movlw	0
   861  00015A  6E38               	movwf	_direction+1,c
   862  00015C  0E01               	movlw	1
   863  00015E  6E37               	movwf	_direction,c
   864                           
   865                           ;main.c: 201:                     Wait(1);
   866  000160  0E00               	movlw	0
   867  000162  6E02               	movwf	Wait@num+1,c
   868  000164  0E01               	movlw	1
   869  000166  6E01               	movwf	Wait@num,c
   870  000168  ECC3  F007         	call	_Wait	;wreg free
   871                           
   872                           ;main.c: 202:                     mode = 5;
   873  00016C  0E00               	movlw	0
   874  00016E  6E3A               	movwf	_mode+1,c
   875  000170  0E05               	movlw	5
   876  000172  D007               	goto	L6
   877  000174                     l394:
   878  000174  B082               	btfsc	3970,0,c	;volatile
   879  000176  D00B               	goto	l3299
   880                           
   881                           ;main.c: 204:                     if(PORTBbits.RB5 == 0){
   882  000178  BA81               	btfsc	3969,5,c	;volatile
   883  00017A  D005               	goto	l3293
   884  00017C                     u1410:
   885                           
   886                           ;main.c: 205:                         mode = 0;
   887  00017C  0E00               	movlw	0
   888  00017E  6E3A               	movwf	_mode+1,c
   889  000180  0E00               	movlw	0
   890  000182                     L6:
   891  000182  6E39               	movwf	_mode,c
   892                           
   893                           ;main.c: 206:                         break;
   894  000184  D09D               	goto	l3347
   895  000186                     l3293:
   896                           
   897                           ;main.c: 208:                     direction = 0;
   898  000186  0E00               	movlw	0
   899  000188  6E38               	movwf	_direction+1,c
   900  00018A  0E00               	movlw	0
   901  00018C  D7E8               	goto	L7
   902  00018E                     l3299:
   903                           
   904                           ;main.c: 212:                     L6470_Stop(1);
   905  00018E  0E00               	movlw	0
   906  000190  6E03               	movwf	L6470_Stop@mode+1,c
   907  000192  0E01               	movlw	1
   908  000194  6E02               	movwf	L6470_Stop@mode,c
   909  000196  EC78  F007         	call	_L6470_Stop	;wreg free
   910  00019A  D7CD               	goto	l3277
   911  00019C                     l3303:
   912                           
   913                           ;main.c: 219:                 if (CAN_receive(&rxMessage)) {
   914  00019C  0E6E               	movlw	low _rxMessage
   915  00019E  6E14               	movwf	CAN_receive@tempCanMsg,c
   916  0001A0  0E00               	movlw	high _rxMessage
   917  0001A2  6E15               	movwf	CAN_receive@tempCanMsg+1,c
   918  0001A4  EC7C  F001         	call	_CAN_receive	;wreg free
   919  0001A8  0900               	iorlw	0
   920  0001AA  B4D8               	btfsc	status,2,c
   921  0001AC  D05D               	goto	l3331
   922                           
   923                           ;main.c: 221:                     PORTCbits.RC2 = 1;
   924  0001AE  8482               	bsf	3970,2,c	;volatile
   925                           
   926                           ;main.c: 222:                     data = can_recieve(rxMessage);
   927  0001B0  EE20  F06E         	lfsr	2,_rxMessage
   928  0001B4  EE00  F021         	lfsr	0,can_recieve@rxMessage
   929  0001B8  0E0D               	movlw	13
   930  0001BA                     u1431:
   931  0001BA  CFDB FFEB          	movff	plusw2,plusw0
   932  0001BE  06E8               	decf	wreg,f,c
   933  0001C0  E2FC               	bc	u1431
   934  0001C2  EC55  F007         	call	_can_recieve	;wreg free
   935  0001C6  6E2F               	movwf	??_main& (0+255),c
   936  0001C8  6A30               	clrf	(??_main+1)& (0+255),c
   937  0001CA  C02F  F03C         	movff	??_main,_data
   938  0001CE  C030  F03D         	movff	??_main+1,_data+1
   939                           
   940                           ;main.c: 223:                     txMessage.frame.idType = 1 ;
   941  0001D2  0E01               	movlw	1
   942  0001D4  0100               	movlb	0	; () banked
   943  0001D6  6F60               	movwf	_txMessage& (0+255),b
   944                           
   945                           ; BSR set to: 0
   946                           ;main.c: 224:                     txMessage.frame.id = 0x001 ;
   947  0001D8  0E01               	movlw	1
   948  0001DA  6F61               	movwf	(_txMessage+1)& (0+255),b
   949  0001DC  0E00               	movlw	0
   950  0001DE  6F62               	movwf	(_txMessage+2)& (0+255),b
   951  0001E0  0E00               	movlw	0
   952  0001E2  6F63               	movwf	(_txMessage+3)& (0+255),b
   953  0001E4  0E00               	movlw	0
   954  0001E6  6F64               	movwf	(_txMessage+4)& (0+255),b
   955                           
   956                           ; BSR set to: 0
   957                           ;main.c: 225:                     txMessage.frame.dlc = 8 ;
   958  0001E8  0E08               	movlw	8
   959  0001EA  6F65               	movwf	(_txMessage+5)& (0+255),b
   960                           
   961                           ; BSR set to: 0
   962                           ;main.c: 226:                     txMessage.frame.data0 = data[0];
   963  0001EC  C03C  FFD9         	movff	_data,fsr2l
   964  0001F0  C03D  FFDA         	movff	_data+1,fsr2h
   965  0001F4  50DF               	movf	indf2,w,c
   966  0001F6  6F66               	movwf	(_txMessage+6)& (0+255),b
   967                           
   968                           ; BSR set to: 0
   969                           ;main.c: 227:                     txMessage.frame.data1 = data[1];
   970  0001F8  EE20 F002          	lfsr	2,2
   971  0001FC  503C               	movf	_data,w,c
   972  0001FE  26D9               	addwf	fsr2l,f,c
   973  000200  503D               	movf	_data+1,w,c
   974  000202  22DA               	addwfc	fsr2h,f,c
   975  000204  50DF               	movf	indf2,w,c
   976  000206  6F67               	movwf	(_txMessage+7)& (0+255),b
   977                           
   978                           ; BSR set to: 0
   979                           ;main.c: 228:                     txMessage.frame.data2 = data[2];
   980  000208  EE20 F004          	lfsr	2,4
   981  00020C  503C               	movf	_data,w,c
   982  00020E  26D9               	addwf	fsr2l,f,c
   983  000210  503D               	movf	_data+1,w,c
   984  000212  22DA               	addwfc	fsr2h,f,c
   985  000214  50DF               	movf	indf2,w,c
   986  000216  6F68               	movwf	(_txMessage+8)& (0+255),b
   987                           
   988                           ; BSR set to: 0
   989                           ;main.c: 229:                     txMessage.frame.data3 = data[3];
   990  000218  EE20 F006          	lfsr	2,6
   991  00021C  503C               	movf	_data,w,c
   992  00021E  26D9               	addwf	fsr2l,f,c
   993  000220  503D               	movf	_data+1,w,c
   994  000222  22DA               	addwfc	fsr2h,f,c
   995  000224  50DF               	movf	indf2,w,c
   996  000226  6F69               	movwf	(_txMessage+9)& (0+255),b
   997                           
   998                           ; BSR set to: 0
   999                           ;main.c: 230:                     txMessage.frame.data4 = data[4];
  1000  000228  EE20 F008          	lfsr	2,8
  1001  00022C  503C               	movf	_data,w,c
  1002  00022E  26D9               	addwf	fsr2l,f,c
  1003  000230  503D               	movf	_data+1,w,c
  1004  000232  22DA               	addwfc	fsr2h,f,c
  1005  000234  50DF               	movf	indf2,w,c
  1006  000236  6F6A               	movwf	(_txMessage+10)& (0+255),b
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;main.c: 231:                     txMessage.frame.data5 = data[5];
  1010  000238  EE20 F00A          	lfsr	2,10
  1011  00023C  503C               	movf	_data,w,c
  1012  00023E  26D9               	addwf	fsr2l,f,c
  1013  000240  503D               	movf	_data+1,w,c
  1014  000242  22DA               	addwfc	fsr2h,f,c
  1015  000244  50DF               	movf	indf2,w,c
  1016  000246  6F6B               	movwf	(_txMessage+11)& (0+255),b
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;main.c: 232:                     txMessage.frame.data6 = data[6];
  1020  000248  EE20 F00C          	lfsr	2,12
  1021  00024C  503C               	movf	_data,w,c
  1022  00024E  26D9               	addwf	fsr2l,f,c
  1023  000250  503D               	movf	_data+1,w,c
  1024  000252  22DA               	addwfc	fsr2h,f,c
  1025  000254  50DF               	movf	indf2,w,c
  1026  000256  6F6C               	movwf	(_txMessage+12)& (0+255),b
  1027                           
  1028                           ; BSR set to: 0
  1029                           ;main.c: 233:                     txMessage.frame.data7 = data[7];
  1030  000258  EE20 F00E          	lfsr	2,14
  1031  00025C  503C               	movf	_data,w,c
  1032  00025E  26D9               	addwf	fsr2l,f,c
  1033  000260  503D               	movf	_data+1,w,c
  1034  000262  22DA               	addwfc	fsr2h,f,c
  1035  000264  50DF               	movf	indf2,w,c
  1036  000266  6F6D               	movwf	(_txMessage+13)& (0+255),b
  1037  000268                     l3331:
  1038                           
  1039                           ;main.c: 236:                 mode = 0;
  1040  000268  0E00               	movlw	0
  1041  00026A  6E3A               	movwf	_mode+1,c
  1042  00026C  0E00               	movlw	0
  1043  00026E  6E39               	movwf	_mode,c
  1044                           
  1045                           ;main.c: 237:                 Wait(20);
  1046  000270  0E00               	movlw	0
  1047  000272  6E02               	movwf	Wait@num+1,c
  1048  000274  0E14               	movlw	20
  1049  000276  6E01               	movwf	Wait@num,c
  1050  000278  ECC3  F007         	call	_Wait	;wreg free
  1051                           
  1052                           ;main.c: 238:                 break;
  1053  00027C  D021               	goto	l3347
  1054  00027E                     l3335:
  1055                           
  1056                           ;main.c: 242:                 ServoOut(servo_Angle[servo_Flag]);
  1057  00027E  503B               	movf	_servo_Flag,w,c
  1058  000280  0D02               	mullw	2
  1059  000282  0E48               	movlw	low _servo_Angle
  1060  000284  24F3               	addwf	prodl,w,c
  1061  000286  6ED9               	movwf	fsr2l,c
  1062  000288  0E00               	movlw	high _servo_Angle
  1063  00028A  20F4               	addwfc	prodh,w,c
  1064  00028C  6EDA               	movwf	fsr2h,c
  1065  00028E  CFDE F01B          	movff	postinc2,ServoOut@angle
  1066  000292  CFDD F01C          	movff	postdec2,ServoOut@angle+1
  1067  000296  EC25  F006         	call	_ServoOut	;wreg free
  1068                           
  1069                           ;main.c: 243:                 Wait(1);
  1070  00029A  0E00               	movlw	0
  1071  00029C  6E02               	movwf	Wait@num+1,c
  1072  00029E  0E01               	movlw	1
  1073  0002A0  6E01               	movwf	Wait@num,c
  1074  0002A2  ECC3  F007         	call	_Wait	;wreg free
  1075  0002A6  D76A               	goto	u1410
  1076  0002A8                     l3341:
  1077                           
  1078                           ;main.c: 249:                 L6470_Run(direction,10000);
  1079  0002A8  0E10               	movlw	16
  1080  0002AA  6E13               	movwf	L6470_Run@speed,c
  1081  0002AC  0E27               	movlw	39
  1082  0002AE  6E14               	movwf	L6470_Run@speed+1,c
  1083  0002B0  0E00               	movlw	0
  1084  0002B2  6E15               	movwf	L6470_Run@speed+2,c
  1085  0002B4  0E00               	movlw	0
  1086  0002B6  6E16               	movwf	L6470_Run@speed+3,c
  1087  0002B8  5037               	movf	_direction,w,c
  1088  0002BA  ECAB  F007         	call	_L6470_Run
  1089  0002BE  D75E               	goto	u1410
  1090  0002C0                     l3347:
  1091  0002C0  C039  F02F         	movff	_mode,??_main
  1092  0002C4  C03A  F030         	movff	_mode+1,??_main+1
  1093                           
  1094                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1095                           ; Switch size 1, requested type "simple"
  1096                           ; Number of cases is 1, Range of values is 0 to 0
  1097                           ; switch strategies available:
  1098                           ; Name         Instructions Cycles
  1099                           ; simple_byte            4     3 (average)
  1100                           ;	Chosen strategy is simple_byte
  1101  0002C8  5030               	movf	??_main+1,w,c
  1102  0002CA  0A00               	xorlw	0	; case 0
  1103  0002CC  A4D8               	btfss	status,2,c
  1104  0002CE  D7F8               	goto	l3347
  1105                           
  1106                           ; Switch size 1, requested type "simple"
  1107                           ; Number of cases is 6, Range of values is 0 to 5
  1108                           ; switch strategies available:
  1109                           ; Name         Instructions Cycles
  1110                           ; simple_byte           19    10 (average)
  1111                           ;	Chosen strategy is simple_byte
  1112  0002D0  502F               	movf	??_main,w,c
  1113  0002D2  0A00               	xorlw	0	; case 0
  1114  0002D4  B4D8               	btfsc	status,2,c
  1115  0002D6  D714               	goto	l383
  1116  0002D8  0A01               	xorlw	1	; case 1
  1117  0002DA  B4D8               	btfsc	status,2,c
  1118  0002DC  D716               	goto	l386
  1119  0002DE  0A03               	xorlw	3	; case 2
  1120  0002E0  B4D8               	btfsc	status,2,c
  1121  0002E2  D738               	goto	l393
  1122  0002E4  0A01               	xorlw	1	; case 3
  1123  0002E6  B4D8               	btfsc	status,2,c
  1124  0002E8  D759               	goto	l3303
  1125  0002EA  0A07               	xorlw	7	; case 4
  1126  0002EC  B4D8               	btfsc	status,2,c
  1127  0002EE  D7C7               	goto	l3335
  1128  0002F0  0A01               	xorlw	1	; case 5
  1129  0002F2  B4D8               	btfsc	status,2,c
  1130  0002F4  D7D9               	goto	l3341
  1131  0002F6  D7E4               	goto	l3347
  1132  0002F8                     __end_of_main:
  1133                           	opt callstack 0
  1134                           
  1135 ;; *************** function _can_recieve *****************
  1136 ;; Defined at:
  1137 ;;		line 61 in file "can_command.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  rxMessage      14   32[COMRAM] struct .
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      unsigned char 
  1144 ;; Registers used:
  1145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1151 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1154 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1155 ;;Total ram usage:       14 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    5
  1158 ;; This function calls:
  1159 ;;		_L6470_command
  1160 ;;		_ServoOut
  1161 ;; This function is called by:
  1162 ;;		_main
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text1
  1167  000EAA                     __ptext1:
  1168                           	opt callstack 0
  1169  000EAA                     _can_recieve:
  1170                           	opt callstack 25
  1171                           
  1172                           ;can_command.c: 65:      if (rxMessage.frame.idType == 1) {
  1173                           
  1174                           ;incstack = 0
  1175  000EAA  0421               	decf	can_recieve@rxMessage,w,c
  1176  000EAC  A4D8               	btfss	status,2,c
  1177  000EAE  D01E               	goto	l3211
  1178                           
  1179                           ;can_command.c: 68:          if(rxMessage.frame.id == 0x005){
  1180  000EB0  0E05               	movlw	5
  1181  000EB2  1822               	xorwf	can_recieve@rxMessage+1,w,c
  1182  000EB4  1023               	iorwf	can_recieve@rxMessage+2,w,c
  1183  000EB6  1024               	iorwf	can_recieve@rxMessage+3,w,c
  1184  000EB8  1025               	iorwf	can_recieve@rxMessage+4,w,c
  1185  000EBA  A4D8               	btfss	status,2,c
  1186  000EBC  D017               	goto	l3211
  1187                           
  1188                           ;can_command.c: 69:             data[0] = rxMessage.frame.data0 ;
  1189  000EBE  C027  F03C         	movff	can_recieve@rxMessage+6,_data
  1190                           
  1191                           ;can_command.c: 70:             data[1] = rxMessage.frame.data1 ;
  1192  000EC2  C028  F03D         	movff	can_recieve@rxMessage+7,_data+1
  1193                           
  1194                           ;can_command.c: 71:             data[2] = rxMessage.frame.data2 ;
  1195  000EC6  C029  F03E         	movff	can_recieve@rxMessage+8,_data+2
  1196                           
  1197                           ;can_command.c: 72:             data[3] = rxMessage.frame.data3 ;
  1198  000ECA  C02A  F03F         	movff	can_recieve@rxMessage+9,_data+3
  1199                           
  1200                           ;can_command.c: 73:             data[4] = rxMessage.frame.data4 ;
  1201  000ECE  C02B  F040         	movff	can_recieve@rxMessage+10,_data+4
  1202                           
  1203                           ;can_command.c: 74:             data[5] = rxMessage.frame.data5 ;
  1204  000ED2  C02C  F041         	movff	can_recieve@rxMessage+11,_data+5
  1205                           
  1206                           ;can_command.c: 75:             data[6] = rxMessage.frame.data6 ;
  1207  000ED6  C02D  F042         	movff	can_recieve@rxMessage+12,_data+6
  1208                           
  1209                           ;can_command.c: 76:             data[7] = rxMessage.frame.data7 ;
  1210  000EDA  C02E  F043         	movff	can_recieve@rxMessage+13,_data+7
  1211                           
  1212                           ;can_command.c: 77:             ServoOut(data[1]);
  1213  000EDE  C03D  F01B         	movff	_data+1,ServoOut@angle
  1214  000EE2  6A1C               	clrf	ServoOut@angle+1,c
  1215  000EE4  EC25  F006         	call	_ServoOut	;wreg free
  1216                           
  1217                           ;can_command.c: 78:             L6470_command();
  1218  000EE8  EC26  F004         	call	_L6470_command	;wreg free
  1219  000EEC                     l3211:
  1220                           
  1221                           ;can_command.c: 81:      return data;
  1222  000EEC  0E3C               	movlw	_data& (0+255)
  1223  000EEE  0012               	return		;funcret
  1224  000EF0                     __end_of_can_recieve:
  1225                           	opt callstack 0
  1226                           
  1227 ;; *************** function _ServoOut *****************
  1228 ;; Defined at:
  1229 ;;		line 24 in file "servo.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  angle           2   26[COMRAM] int 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  value           4   28[COMRAM] long 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1244 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1246 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1247 ;;Total ram usage:        6 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; Hardware stack levels required when called:    2
  1250 ;; This function calls:
  1251 ;;		___aldiv
  1252 ;;		___lmul
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;;		_can_recieve
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text2
  1260  000C4A                     __ptext2:
  1261                           	opt callstack 0
  1262  000C4A                     _ServoOut:
  1263                           	opt callstack 27
  1264                           
  1265                           ;servo.c: 25:     long value;;servo.c: 27:     PIR1bits.TMR1IF = 0;
  1266                           
  1267                           ;incstack = 0
  1268  000C4A  909E               	bcf	3998,0,c	;volatile
  1269                           
  1270                           ;servo.c: 28:     PIR2bits.TMR3IF = 0;
  1271  000C4C  92A1               	bcf	4001,1,c	;volatile
  1272                           
  1273                           ;servo.c: 30:     value = (long)(angle) * 1000 / 180 + 250;
  1274  000C4E  C01B  F001         	movff	ServoOut@angle,___lmul@multiplier
  1275  000C52  C01C  F002         	movff	ServoOut@angle+1,___lmul@multiplier+1
  1276  000C56  0E00               	movlw	0
  1277  000C58  BE02               	btfsc	___lmul@multiplier+1,7,c
  1278  000C5A  0EFF               	movlw	-1
  1279  000C5C  6E03               	movwf	___lmul@multiplier+2,c
  1280  000C5E  6E04               	movwf	___lmul@multiplier+3,c
  1281  000C60  0EE8               	movlw	232
  1282  000C62  6E05               	movwf	___lmul@multiplicand,c
  1283  000C64  0E03               	movlw	3
  1284  000C66  6E06               	movwf	___lmul@multiplicand+1,c
  1285  000C68  0E00               	movlw	0
  1286  000C6A  6E07               	movwf	___lmul@multiplicand+2,c
  1287  000C6C  0E00               	movlw	0
  1288  000C6E  6E08               	movwf	___lmul@multiplicand+3,c
  1289  000C70  ECE2  F006         	call	___lmul	;wreg free
  1290  000C74  C001  F00D         	movff	?___lmul,___aldiv@dividend
  1291  000C78  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  1292  000C7C  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  1293  000C80  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  1294  000C84  0EB4               	movlw	180
  1295  000C86  6E11               	movwf	___aldiv@divisor,c
  1296  000C88  0E00               	movlw	0
  1297  000C8A  6E12               	movwf	___aldiv@divisor+1,c
  1298  000C8C  0E00               	movlw	0
  1299  000C8E  6E13               	movwf	___aldiv@divisor+2,c
  1300  000C90  0E00               	movlw	0
  1301  000C92  6E14               	movwf	___aldiv@divisor+3,c
  1302  000C94  ECAF  F004         	call	___aldiv	;wreg free
  1303  000C98  0EFA               	movlw	250
  1304  000C9A  240D               	addwf	?___aldiv,w,c
  1305  000C9C  6E1D               	movwf	ServoOut@value,c
  1306  000C9E  0E00               	movlw	0
  1307  000CA0  200E               	addwfc	?___aldiv+1,w,c
  1308  000CA2  6E1E               	movwf	ServoOut@value+1,c
  1309  000CA4  0E00               	movlw	0
  1310  000CA6  200F               	addwfc	?___aldiv+2,w,c
  1311  000CA8  6E1F               	movwf	ServoOut@value+2,c
  1312  000CAA  0E00               	movlw	0
  1313  000CAC  2010               	addwfc	?___aldiv+3,w,c
  1314  000CAE  6E20               	movwf	ServoOut@value+3,c
  1315                           
  1316                           ;servo.c: 31:     T1time = 65536 - value;
  1317  000CB0  501D               	movf	ServoOut@value,w,c
  1318  000CB2  0800               	sublw	0
  1319  000CB4  6E4C               	movwf	_T1time,c
  1320  000CB6  501E               	movf	ServoOut@value+1,w,c
  1321  000CB8  A0D8               	btfss	status,0,c
  1322  000CBA  2AE8               	incf	wreg,f,c
  1323  000CBC  0800               	sublw	0
  1324  000CBE  6E4D               	movwf	_T1time+1,c
  1325                           
  1326                           ;servo.c: 33:     TMR1H = (T1time >> 8);
  1327  000CC0  504D               	movf	_T1time+1,w,c
  1328  000CC2  6ECF               	movwf	4047,c	;volatile
  1329                           
  1330                           ;servo.c: 34:     TMR1L = (T1time & 0x00ff);
  1331  000CC4  C04C  FFCE         	movff	_T1time,4046	;volatile
  1332                           
  1333                           ;servo.c: 35:     TMR3H = (55536>>8);
  1334  000CC8  0ED8               	movlw	216
  1335  000CCA  6EB3               	movwf	4019,c	;volatile
  1336                           
  1337                           ;servo.c: 36:     TMR3L = (55536 & 0x00ff);
  1338  000CCC  0EF0               	movlw	240
  1339  000CCE  6EB2               	movwf	4018,c	;volatile
  1340                           
  1341                           ;servo.c: 38:     PORTCbits.RC1 = 1;
  1342  000CD0  8282               	bsf	3970,1,c	;volatile
  1343  000CD2  0012               	return		;funcret
  1344  000CD4                     __end_of_ServoOut:
  1345                           	opt callstack 0
  1346                           
  1347 ;; *************** function ___lmul *****************
  1348 ;; Defined at:
  1349 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  multiplier      4    0[COMRAM] unsigned long 
  1352 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;  product         4    8[COMRAM] unsigned long 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  4    0[COMRAM] unsigned long 
  1357 ;; Registers used:
  1358 ;;		wreg, status,2, status,0
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1364 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1365 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1367 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1368 ;;Total ram usage:       12 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    1
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_ServoOut
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text3
  1379  000DC4                     __ptext3:
  1380                           	opt callstack 0
  1381  000DC4                     ___lmul:
  1382                           	opt callstack 27
  1383                           
  1384                           ;incstack = 0
  1385  000DC4  0E00               	movlw	0
  1386  000DC6  6E09               	movwf	___lmul@product,c
  1387  000DC8  0E00               	movlw	0
  1388  000DCA  6E0A               	movwf	___lmul@product+1,c
  1389  000DCC  0E00               	movlw	0
  1390  000DCE  6E0B               	movwf	___lmul@product+2,c
  1391  000DD0  0E00               	movlw	0
  1392  000DD2  6E0C               	movwf	___lmul@product+3,c
  1393  000DD4                     l2877:
  1394  000DD4  A001               	btfss	___lmul@multiplier,0,c
  1395  000DD6  D008               	goto	l2881
  1396  000DD8  5005               	movf	___lmul@multiplicand,w,c
  1397  000DDA  2609               	addwf	___lmul@product,f,c
  1398  000DDC  5006               	movf	___lmul@multiplicand+1,w,c
  1399  000DDE  220A               	addwfc	___lmul@product+1,f,c
  1400  000DE0  5007               	movf	___lmul@multiplicand+2,w,c
  1401  000DE2  220B               	addwfc	___lmul@product+2,f,c
  1402  000DE4  5008               	movf	___lmul@multiplicand+3,w,c
  1403  000DE6  220C               	addwfc	___lmul@product+3,f,c
  1404  000DE8                     l2881:
  1405  000DE8  90D8               	bcf	status,0,c
  1406  000DEA  3605               	rlcf	___lmul@multiplicand,f,c
  1407  000DEC  3606               	rlcf	___lmul@multiplicand+1,f,c
  1408  000DEE  3607               	rlcf	___lmul@multiplicand+2,f,c
  1409  000DF0  3608               	rlcf	___lmul@multiplicand+3,f,c
  1410  000DF2  90D8               	bcf	status,0,c
  1411  000DF4  3204               	rrcf	___lmul@multiplier+3,f,c
  1412  000DF6  3203               	rrcf	___lmul@multiplier+2,f,c
  1413  000DF8  3202               	rrcf	___lmul@multiplier+1,f,c
  1414  000DFA  3201               	rrcf	___lmul@multiplier,f,c
  1415  000DFC  5001               	movf	___lmul@multiplier,w,c
  1416  000DFE  1002               	iorwf	___lmul@multiplier+1,w,c
  1417  000E00  1003               	iorwf	___lmul@multiplier+2,w,c
  1418  000E02  1004               	iorwf	___lmul@multiplier+3,w,c
  1419  000E04  A4D8               	btfss	status,2,c
  1420  000E06  D7E6               	goto	l2877
  1421  000E08  C009  F001         	movff	___lmul@product,?___lmul
  1422  000E0C  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1423  000E10  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1424  000E14  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1425  000E18  0012               	return		;funcret
  1426  000E1A                     __end_of___lmul:
  1427                           	opt callstack 0
  1428                           
  1429 ;; *************** function ___aldiv *****************
  1430 ;; Defined at:
  1431 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  dividend        4   12[COMRAM] long 
  1434 ;;  divisor         4   16[COMRAM] long 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  quotient        4   22[COMRAM] long 
  1437 ;;  sign            1   21[COMRAM] unsigned char 
  1438 ;;  counter         1   20[COMRAM] unsigned char 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  4   12[COMRAM] long 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2, status,0
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1448 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1449 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1451 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1452 ;;Total ram usage:       14 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    1
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_ServoOut
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text4
  1463  00095E                     __ptext4:
  1464                           	opt callstack 0
  1465  00095E                     ___aldiv:
  1466                           	opt callstack 27
  1467                           
  1468                           ;incstack = 0
  1469  00095E  0E00               	movlw	0
  1470  000960  6E16               	movwf	___aldiv@sign,c
  1471  000962  AE14               	btfss	___aldiv@divisor+3,7,c
  1472  000964  D00A               	goto	l2893
  1473  000966  1E14               	comf	___aldiv@divisor+3,f,c
  1474  000968  1E13               	comf	___aldiv@divisor+2,f,c
  1475  00096A  1E12               	comf	___aldiv@divisor+1,f,c
  1476  00096C  6C11               	negf	___aldiv@divisor,c
  1477  00096E  0E00               	movlw	0
  1478  000970  2212               	addwfc	___aldiv@divisor+1,f,c
  1479  000972  2213               	addwfc	___aldiv@divisor+2,f,c
  1480  000974  2214               	addwfc	___aldiv@divisor+3,f,c
  1481  000976  0E01               	movlw	1
  1482  000978  6E16               	movwf	___aldiv@sign,c
  1483  00097A                     l2893:
  1484  00097A  AE10               	btfss	___aldiv@dividend+3,7,c
  1485  00097C  D00A               	goto	l2899
  1486  00097E  1E10               	comf	___aldiv@dividend+3,f,c
  1487  000980  1E0F               	comf	___aldiv@dividend+2,f,c
  1488  000982  1E0E               	comf	___aldiv@dividend+1,f,c
  1489  000984  6C0D               	negf	___aldiv@dividend,c
  1490  000986  0E00               	movlw	0
  1491  000988  220E               	addwfc	___aldiv@dividend+1,f,c
  1492  00098A  220F               	addwfc	___aldiv@dividend+2,f,c
  1493  00098C  2210               	addwfc	___aldiv@dividend+3,f,c
  1494  00098E  0E01               	movlw	1
  1495  000990  1A16               	xorwf	___aldiv@sign,f,c
  1496  000992                     l2899:
  1497  000992  0E00               	movlw	0
  1498  000994  6E17               	movwf	___aldiv@quotient,c
  1499  000996  0E00               	movlw	0
  1500  000998  6E18               	movwf	___aldiv@quotient+1,c
  1501  00099A  0E00               	movlw	0
  1502  00099C  6E19               	movwf	___aldiv@quotient+2,c
  1503  00099E  0E00               	movlw	0
  1504  0009A0  6E1A               	movwf	___aldiv@quotient+3,c
  1505  0009A2  5011               	movf	___aldiv@divisor,w,c
  1506  0009A4  1012               	iorwf	___aldiv@divisor+1,w,c
  1507  0009A6  1013               	iorwf	___aldiv@divisor+2,w,c
  1508  0009A8  1014               	iorwf	___aldiv@divisor+3,w,c
  1509  0009AA  B4D8               	btfsc	status,2,c
  1510  0009AC  D02A               	goto	l2921
  1511  0009AE  0E01               	movlw	1
  1512  0009B0  6E15               	movwf	___aldiv@counter,c
  1513  0009B2  D006               	goto	l2907
  1514  0009B4                     l2905:
  1515  0009B4  90D8               	bcf	status,0,c
  1516  0009B6  3611               	rlcf	___aldiv@divisor,f,c
  1517  0009B8  3612               	rlcf	___aldiv@divisor+1,f,c
  1518  0009BA  3613               	rlcf	___aldiv@divisor+2,f,c
  1519  0009BC  3614               	rlcf	___aldiv@divisor+3,f,c
  1520  0009BE  2A15               	incf	___aldiv@counter,f,c
  1521  0009C0                     l2907:
  1522  0009C0  AE14               	btfss	___aldiv@divisor+3,7,c
  1523  0009C2  D7F8               	goto	l2905
  1524  0009C4                     u1140:
  1525  0009C4  90D8               	bcf	status,0,c
  1526  0009C6  3617               	rlcf	___aldiv@quotient,f,c
  1527  0009C8  3618               	rlcf	___aldiv@quotient+1,f,c
  1528  0009CA  3619               	rlcf	___aldiv@quotient+2,f,c
  1529  0009CC  361A               	rlcf	___aldiv@quotient+3,f,c
  1530  0009CE  5011               	movf	___aldiv@divisor,w,c
  1531  0009D0  5C0D               	subwf	___aldiv@dividend,w,c
  1532  0009D2  5012               	movf	___aldiv@divisor+1,w,c
  1533  0009D4  580E               	subwfb	___aldiv@dividend+1,w,c
  1534  0009D6  5013               	movf	___aldiv@divisor+2,w,c
  1535  0009D8  580F               	subwfb	___aldiv@dividend+2,w,c
  1536  0009DA  5014               	movf	___aldiv@divisor+3,w,c
  1537  0009DC  5810               	subwfb	___aldiv@dividend+3,w,c
  1538  0009DE  A0D8               	btfss	status,0,c
  1539  0009E0  D009               	goto	l2917
  1540  0009E2  5011               	movf	___aldiv@divisor,w,c
  1541  0009E4  5E0D               	subwf	___aldiv@dividend,f,c
  1542  0009E6  5012               	movf	___aldiv@divisor+1,w,c
  1543  0009E8  5A0E               	subwfb	___aldiv@dividend+1,f,c
  1544  0009EA  5013               	movf	___aldiv@divisor+2,w,c
  1545  0009EC  5A0F               	subwfb	___aldiv@dividend+2,f,c
  1546  0009EE  5014               	movf	___aldiv@divisor+3,w,c
  1547  0009F0  5A10               	subwfb	___aldiv@dividend+3,f,c
  1548  0009F2  8017               	bsf	___aldiv@quotient,0,c
  1549  0009F4                     l2917:
  1550  0009F4  90D8               	bcf	status,0,c
  1551  0009F6  3214               	rrcf	___aldiv@divisor+3,f,c
  1552  0009F8  3213               	rrcf	___aldiv@divisor+2,f,c
  1553  0009FA  3212               	rrcf	___aldiv@divisor+1,f,c
  1554  0009FC  3211               	rrcf	___aldiv@divisor,f,c
  1555  0009FE  2E15               	decfsz	___aldiv@counter,f,c
  1556  000A00  D7E1               	goto	u1140
  1557  000A02                     l2921:
  1558  000A02  5016               	movf	___aldiv@sign,w,c
  1559  000A04  B4D8               	btfsc	status,2,c
  1560  000A06  D008               	goto	l2925
  1561  000A08  1E1A               	comf	___aldiv@quotient+3,f,c
  1562  000A0A  1E19               	comf	___aldiv@quotient+2,f,c
  1563  000A0C  1E18               	comf	___aldiv@quotient+1,f,c
  1564  000A0E  6C17               	negf	___aldiv@quotient,c
  1565  000A10  0E00               	movlw	0
  1566  000A12  2218               	addwfc	___aldiv@quotient+1,f,c
  1567  000A14  2219               	addwfc	___aldiv@quotient+2,f,c
  1568  000A16  221A               	addwfc	___aldiv@quotient+3,f,c
  1569  000A18                     l2925:
  1570  000A18  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  1571  000A1C  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  1572  000A20  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  1573  000A24  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  1574  000A28  0012               	return		;funcret
  1575  000A2A                     __end_of___aldiv:
  1576                           	opt callstack 0
  1577                           
  1578 ;; *************** function _L6470_command *****************
  1579 ;; Defined at:
  1580 ;;		line 28 in file "can_command.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1596 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1597 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1598 ;;Total ram usage:        2 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    4
  1601 ;; This function calls:
  1602 ;;		_L6470_CMD
  1603 ;;		_L6470_GetRegister
  1604 ;;		_L6470_Move
  1605 ;;		_L6470_Run
  1606 ;;		_L6470_Stop
  1607 ;;		_L6470_change
  1608 ;; This function is called by:
  1609 ;;		_can_recieve
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text5
  1614  00084C                     __ptext5:
  1615                           	opt callstack 0
  1616  00084C                     _L6470_command:
  1617                           	opt callstack 25
  1618                           
  1619                           ;can_command.c: 29:     switch(data[2]){
  1620                           
  1621                           ;incstack = 0
  1622  00084C  D06A               	goto	l3005
  1623  00084E                     l2983:
  1624                           
  1625                           ;can_command.c: 31:             L6470_Stop(data[7]);
  1626  00084E  C043  F002         	movff	_data+7,L6470_Stop@mode
  1627  000852  6A03               	clrf	L6470_Stop@mode+1,c
  1628  000854  EC78  F007         	call	_L6470_Stop	;wreg free
  1629                           
  1630                           ;can_command.c: 32:             break;
  1631  000858  0012               	return	
  1632  00085A                     l2985:
  1633                           
  1634                           ;can_command.c: 34:             L6470_Run(data[3],L6470_change(&data[4],3));
  1635  00085A  0E40               	movlw	low (_data+4)
  1636  00085C  6E01               	movwf	L6470_change@dt,c
  1637  00085E  0E00               	movlw	high (_data+4)
  1638  000860  6E02               	movwf	L6470_change@dt+1,c
  1639  000862  0E00               	movlw	0
  1640  000864  6E04               	movwf	L6470_change@num+1,c
  1641  000866  0E03               	movlw	3
  1642  000868  6E03               	movwf	L6470_change@num,c
  1643  00086A  EC6A  F006         	call	_L6470_change	;wreg free
  1644  00086E  C001  F013         	movff	?_L6470_change,L6470_Run@speed
  1645  000872  C002  F014         	movff	?_L6470_change+1,L6470_Run@speed+1
  1646  000876  C003  F015         	movff	?_L6470_change+2,L6470_Run@speed+2
  1647  00087A  C004  F016         	movff	?_L6470_change+3,L6470_Run@speed+3
  1648  00087E  503F               	movf	_data+3,w,c
  1649  000880  ECAB  F007         	call	_L6470_Run
  1650                           
  1651                           ;can_command.c: 35:             break;
  1652  000884  0012               	return	
  1653  000886                     l2987:
  1654                           
  1655                           ;can_command.c: 37:             L6470_Move(data[3],L6470_change(&data[4],3));
  1656  000886  0E40               	movlw	low (_data+4)
  1657  000888  6E01               	movwf	L6470_change@dt,c
  1658  00088A  0E00               	movlw	high (_data+4)
  1659  00088C  6E02               	movwf	L6470_change@dt+1,c
  1660  00088E  0E00               	movlw	0
  1661  000890  6E04               	movwf	L6470_change@num+1,c
  1662  000892  0E03               	movlw	3
  1663  000894  6E03               	movwf	L6470_change@num,c
  1664  000896  EC6A  F006         	call	_L6470_change	;wreg free
  1665  00089A  C001  F013         	movff	?_L6470_change,L6470_Move@step
  1666  00089E  C002  F014         	movff	?_L6470_change+1,L6470_Move@step+1
  1667  0008A2  C003  F015         	movff	?_L6470_change+2,L6470_Move@step+2
  1668  0008A6  C004  F016         	movff	?_L6470_change+3,L6470_Move@step+3
  1669  0008AA  503F               	movf	_data+3,w,c
  1670  0008AC  EC92  F007         	call	_L6470_Move
  1671                           
  1672                           ;can_command.c: 38:             break;
  1673  0008B0  0012               	return	
  1674  0008B2                     l2989:
  1675                           
  1676                           ;can_command.c: 40:             L6470_CMD(0x70);
  1677  0008B2  0E00               	movlw	0
  1678  0008B4  6E03               	movwf	L6470_CMD@command+1,c
  1679  0008B6  0E70               	movlw	112
  1680  0008B8  6E02               	movwf	L6470_CMD@command,c
  1681  0008BA  ECD8  F007         	call	_L6470_CMD	;wreg free
  1682                           
  1683                           ;can_command.c: 41:             break;
  1684  0008BE  0012               	return	
  1685  0008C0                     l2991:
  1686                           
  1687                           ;can_command.c: 43:             L6470_CMD(0xC0);
  1688  0008C0  0E00               	movlw	0
  1689  0008C2  6E03               	movwf	L6470_CMD@command+1,c
  1690  0008C4  0EC0               	movlw	192
  1691  0008C6  6E02               	movwf	L6470_CMD@command,c
  1692  0008C8  ECD8  F007         	call	_L6470_CMD	;wreg free
  1693                           
  1694                           ;can_command.c: 44:             break;
  1695  0008CC  0012               	return	
  1696  0008CE                     l2993:
  1697                           
  1698                           ;can_command.c: 47:                 L6470_Run(0,20000);
  1699  0008CE  0E20               	movlw	32
  1700  0008D0  6E13               	movwf	L6470_Run@speed,c
  1701  0008D2  0E4E               	movlw	78
  1702  0008D4  6E14               	movwf	L6470_Run@speed+1,c
  1703  0008D6  0E00               	movlw	0
  1704  0008D8  6E15               	movwf	L6470_Run@speed+2,c
  1705  0008DA  0E00               	movlw	0
  1706  0008DC  6E16               	movwf	L6470_Run@speed+3,c
  1707  0008DE  0E00               	movlw	0
  1708  0008E0  ECAB  F007         	call	_L6470_Run
  1709  0008E4                     l2995:
  1710                           
  1711                           ;can_command.c: 46:             while(PORTBbits.RB5){
  1712  0008E4  BA81               	btfsc	3969,5,c	;volatile
  1713  0008E6  D7F3               	goto	l2993
  1714                           
  1715                           ;can_command.c: 49:             L6470_Stop(1);
  1716  0008E8  0E00               	movlw	0
  1717  0008EA  6E03               	movwf	L6470_Stop@mode+1,c
  1718  0008EC  0E01               	movlw	1
  1719  0008EE  6E02               	movwf	L6470_Stop@mode,c
  1720  0008F0  EC78  F007         	call	_L6470_Stop	;wreg free
  1721                           
  1722                           ;can_command.c: 50:             L6470_CMD(0xD8);
  1723  0008F4  0E00               	movlw	0
  1724  0008F6  6E03               	movwf	L6470_CMD@command+1,c
  1725  0008F8  0ED8               	movlw	216
  1726  0008FA  6E02               	movwf	L6470_CMD@command,c
  1727  0008FC  ECD8  F007         	call	_L6470_CMD	;wreg free
  1728                           
  1729                           ;can_command.c: 51:             break;
  1730  000900  0012               	return	
  1731  000902                     l3001:
  1732                           
  1733                           ;can_command.c: 53:             pos = L6470_GetRegister(0x01,3);
  1734  000902  0E00               	movlw	0
  1735  000904  6E03               	movwf	L6470_GetRegister@num+1,c
  1736  000906  0E03               	movlw	3
  1737  000908  6E02               	movwf	L6470_GetRegister@num,c
  1738  00090A  0E01               	movlw	1
  1739  00090C  EC15  F005         	call	_L6470_GetRegister
  1740  000910  C002  F031         	movff	?_L6470_GetRegister,_pos
  1741  000914  C003  F032         	movff	?_L6470_GetRegister+1,_pos+1
  1742  000918  C004  F033         	movff	?_L6470_GetRegister+2,_pos+2
  1743  00091C  C005  F034         	movff	?_L6470_GetRegister+3,_pos+3
  1744                           
  1745                           ;can_command.c: 54:             break;
  1746  000920  0012               	return	
  1747  000922                     l3005:
  1748  000922  503E               	movf	_data+2,w,c
  1749  000924  6E18               	movwf	??_L6470_command& (0+255),c
  1750  000926  6A19               	clrf	(??_L6470_command+1)& (0+255),c
  1751                           
  1752                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1753                           ; Switch size 1, requested type "simple"
  1754                           ; Number of cases is 1, Range of values is 0 to 0
  1755                           ; switch strategies available:
  1756                           ; Name         Instructions Cycles
  1757                           ; simple_byte            4     3 (average)
  1758                           ;	Chosen strategy is simple_byte
  1759  000928  5019               	movf	??_L6470_command+1,w,c
  1760  00092A  0A00               	xorlw	0	; case 0
  1761  00092C  A4D8               	btfss	status,2,c
  1762  00092E  0012               	return	
  1763                           
  1764                           ; Switch size 1, requested type "simple"
  1765                           ; Number of cases is 7, Range of values is 0 to 6
  1766                           ; switch strategies available:
  1767                           ; Name         Instructions Cycles
  1768                           ; simple_byte           22    12 (average)
  1769                           ;	Chosen strategy is simple_byte
  1770  000930  5018               	movf	??_L6470_command,w,c
  1771  000932  0A00               	xorlw	0	; case 0
  1772  000934  B4D8               	btfsc	status,2,c
  1773  000936  D78B               	goto	l2983
  1774  000938  0A01               	xorlw	1	; case 1
  1775  00093A  B4D8               	btfsc	status,2,c
  1776  00093C  D78E               	goto	l2985
  1777  00093E  0A03               	xorlw	3	; case 2
  1778  000940  B4D8               	btfsc	status,2,c
  1779  000942  D7A1               	goto	l2987
  1780  000944  0A01               	xorlw	1	; case 3
  1781  000946  B4D8               	btfsc	status,2,c
  1782  000948  D7B4               	goto	l2989
  1783  00094A  0A07               	xorlw	7	; case 4
  1784  00094C  B4D8               	btfsc	status,2,c
  1785  00094E  D7B8               	goto	l2991
  1786  000950  0A01               	xorlw	1	; case 5
  1787  000952  B4D8               	btfsc	status,2,c
  1788  000954  D7C7               	goto	l2995
  1789  000956  0A03               	xorlw	3	; case 6
  1790  000958  A4D8               	btfss	status,2,c
  1791  00095A  0012               	return	
  1792  00095C  D7D2               	goto	l3001
  1793  00095E                     __end_of_L6470_command:
  1794                           	opt callstack 0
  1795                           
  1796 ;; *************** function _L6470_change *****************
  1797 ;; Defined at:
  1798 ;;		line 18 in file "can_command.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  dt              2    0[COMRAM] PTR unsigned char 
  1801 ;;		 -> data(8), 
  1802 ;;  num             2    2[COMRAM] int 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  val             4   11[COMRAM] unsigned long 
  1805 ;;  i               2    9[COMRAM] int 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  4    0[COMRAM] unsigned long 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1815 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1816 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1817 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1818 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1819 ;;Total ram usage:       15 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    1
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_L6470_command
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text6
  1830  000CD4                     __ptext6:
  1831                           	opt callstack 0
  1832  000CD4                     _L6470_change:
  1833                           	opt callstack 27
  1834                           
  1835                           ;can_command.c: 19:     int i;;can_command.c: 20:     unsigned long val = 0;
  1836                           
  1837                           ;incstack = 0
  1838  000CD4  0E00               	movlw	0
  1839  000CD6  6E0C               	movwf	L6470_change@val,c
  1840  000CD8  0E00               	movlw	0
  1841  000CDA  6E0D               	movwf	L6470_change@val+1,c
  1842  000CDC  0E00               	movlw	0
  1843  000CDE  6E0E               	movwf	L6470_change@val+2,c
  1844  000CE0  0E00               	movlw	0
  1845  000CE2  6E0F               	movwf	L6470_change@val+3,c
  1846                           
  1847                           ;can_command.c: 21:     for(i=0; i<num; i++){
  1848  000CE4  0E00               	movlw	0
  1849  000CE6  6E0B               	movwf	L6470_change@i+1,c
  1850  000CE8  0E00               	movlw	0
  1851  000CEA  6E0A               	movwf	L6470_change@i,c
  1852  000CEC  D01D               	goto	l2873
  1853  000CEE                     l2867:
  1854                           
  1855                           ;can_command.c: 22:         val = (val << 8) + *dt;
  1856  000CEE  C001  FFD9         	movff	L6470_change@dt,fsr2l
  1857  000CF2  C002  FFDA         	movff	L6470_change@dt+1,fsr2h
  1858  000CF6  50DF               	movf	indf2,w,c
  1859  000CF8  6E05               	movwf	??_L6470_change& (0+255),c
  1860  000CFA  5005               	movf	??_L6470_change,w,c
  1861  000CFC  C00C  F007         	movff	L6470_change@val,??_L6470_change+2
  1862  000D00  C00D  F008         	movff	L6470_change@val+1,??_L6470_change+3
  1863  000D04  C00E  F009         	movff	L6470_change@val+2,??_L6470_change+4
  1864  000D08  6A06               	clrf	(??_L6470_change+1)& (0+255),c
  1865  000D0A  2406               	addwf	??_L6470_change+1,w,c
  1866  000D0C  6E0C               	movwf	L6470_change@val,c
  1867  000D0E  0E00               	movlw	0
  1868  000D10  2007               	addwfc	??_L6470_change+2,w,c
  1869  000D12  6E0D               	movwf	L6470_change@val+1,c
  1870  000D14  0E00               	movlw	0
  1871  000D16  2008               	addwfc	??_L6470_change+3,w,c
  1872  000D18  6E0E               	movwf	L6470_change@val+2,c
  1873  000D1A  0E00               	movlw	0
  1874  000D1C  2009               	addwfc	??_L6470_change+4,w,c
  1875  000D1E  6E0F               	movwf	L6470_change@val+3,c
  1876                           
  1877                           ;can_command.c: 23:         ++dt;
  1878  000D20  4A01               	infsnz	L6470_change@dt,f,c
  1879  000D22  2A02               	incf	L6470_change@dt+1,f,c
  1880                           
  1881                           ;can_command.c: 24:     }
  1882  000D24  4A0A               	infsnz	L6470_change@i,f,c
  1883  000D26  2A0B               	incf	L6470_change@i+1,f,c
  1884  000D28                     l2873:
  1885  000D28  5003               	movf	L6470_change@num,w,c
  1886  000D2A  5C0A               	subwf	L6470_change@i,w,c
  1887  000D2C  500B               	movf	L6470_change@i+1,w,c
  1888  000D2E  0A80               	xorlw	128
  1889  000D30  6E05               	movwf	??_L6470_change& (0+255),c
  1890  000D32  5004               	movf	L6470_change@num+1,w,c
  1891  000D34  0A80               	xorlw	128
  1892  000D36  5805               	subwfb	??_L6470_change& (0+255),w,c
  1893  000D38  A0D8               	btfss	status,0,c
  1894  000D3A  D7D9               	goto	l2867
  1895                           
  1896                           ;can_command.c: 25:     return val;
  1897  000D3C  C00C  F001         	movff	L6470_change@val,?_L6470_change
  1898  000D40  C00D  F002         	movff	L6470_change@val+1,?_L6470_change+1
  1899  000D44  C00E  F003         	movff	L6470_change@val+2,?_L6470_change+2
  1900  000D48  C00F  F004         	movff	L6470_change@val+3,?_L6470_change+3
  1901  000D4C  0012               	return		;funcret
  1902  000D4E                     __end_of_L6470_change:
  1903                           	opt callstack 0
  1904                           
  1905 ;; *************** function _L6470_Stop *****************
  1906 ;; Defined at:
  1907 ;;		line 205 in file "L6470.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  mode            2    1[COMRAM] int 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  cmd             4    3[COMRAM] unsigned char [4]
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1921 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1922 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1924 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1925 ;;Total ram usage:        6 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    2
  1928 ;; This function calls:
  1929 ;;		_SPI_transfer
  1930 ;; This function is called by:
  1931 ;;		_main
  1932 ;;		_L6470_command
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           	psect	text7
  1937  000EF0                     __ptext7:
  1938                           	opt callstack 0
  1939  000EF0                     _L6470_Stop:
  1940                           	opt callstack 26
  1941                           
  1942                           ;L6470.c: 205: void L6470_Stop(int mode);L6470.c: 206: {;L6470.c: 207:      unsigned cha
      +                          r cmd[4] = {0xB0,0xB8,0xA0,0xA8} ;
  1943                           
  1944                           ;incstack = 0
  1945  000EF0  C044  F004         	movff	L6470_Stop@F12231,L6470_Stop@cmd
  1946  000EF4  C045  F005         	movff	L6470_Stop@F12231+1,L6470_Stop@cmd+1
  1947  000EF8  C046  F006         	movff	L6470_Stop@F12231+2,L6470_Stop@cmd+2
  1948  000EFC  C047  F007         	movff	L6470_Stop@F12231+3,L6470_Stop@cmd+3
  1949  000F00                     l2811:
  1950  000F00  5035               	movf	_Busy,w,c
  1951  000F02  1036               	iorwf	_Busy+1,w,c
  1952  000F04  A4D8               	btfss	status,2,c
  1953  000F06  D002               	goto	u1010
  1954  000F08  A281               	btfss	3969,1,c	;volatile
  1955  000F0A  D7FA               	goto	l2811
  1956  000F0C                     u1010:
  1957                           
  1958                           ;L6470.c: 210:      PORTBbits.RB0 = 0 ;
  1959  000F0C  9081               	bcf	3969,0,c	;volatile
  1960                           
  1961                           ;L6470.c: 211:      SPI_transfer(cmd[mode]) ;
  1962  000F0E  0E04               	movlw	low L6470_Stop@cmd
  1963  000F10  2402               	addwf	L6470_Stop@mode,w,c
  1964  000F12  6ED9               	movwf	fsr2l,c
  1965  000F14  0E00               	movlw	high L6470_Stop@cmd
  1966  000F16  2003               	addwfc	L6470_Stop@mode+1,w,c
  1967  000F18  6EDA               	movwf	fsr2h,c
  1968  000F1A  50DF               	movf	indf2,w,c
  1969  000F1C  ECE4  F007         	call	_SPI_transfer
  1970                           
  1971                           ;L6470.c: 212:      PORTBbits.RB0 = 1 ;
  1972  000F20  8081               	bsf	3969,0,c	;volatile
  1973  000F22  0012               	return		;funcret
  1974  000F24                     __end_of_L6470_Stop:
  1975                           	opt callstack 0
  1976                           
  1977 ;; *************** function _L6470_Run *****************
  1978 ;; Defined at:
  1979 ;;		line 174 in file "L6470.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  dir             1    wreg     unsigned char 
  1982 ;;  speed           4   18[COMRAM] unsigned long 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  dir             1   22[COMRAM] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1995 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1997 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1998 ;;Total ram usage:        5 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    3
  2001 ;; This function calls:
  2002 ;;		_CMD_Send
  2003 ;; This function is called by:
  2004 ;;		_main
  2005 ;;		_L6470_command
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text8
  2010  000F56                     __ptext8:
  2011                           	opt callstack 0
  2012  000F56                     _L6470_Run:
  2013                           	opt callstack 25
  2014                           
  2015                           ;incstack = 0
  2016                           ;L6470_Run@dir stored from wreg
  2017  000F56  6E17               	movwf	L6470_Run@dir,c
  2018  000F58                     
  2019                           ;L6470.c: 174: void L6470_Run(char dir,unsigned long speed);L6470.c: 175: {;L6470.c: 176
      +                          :      while( (Busy==0) && (PORTBbits.RB1==0) ) ;
  2020  000F58  5035               	movf	_Busy,w,c
  2021  000F5A  1036               	iorwf	_Busy+1,w,c
  2022  000F5C  A4D8               	btfss	status,2,c
  2023  000F5E  D002               	goto	u990
  2024  000F60  A281               	btfss	3969,1,c	;volatile
  2025  000F62  D7FA               	goto	l2801
  2026  000F64                     u990:
  2027                           
  2028                           ;L6470.c: 177:      CMD_Send(0x50|dir,speed,3) ;
  2029  000F64  C013  F002         	movff	L6470_Run@speed,CMD_Send@val
  2030  000F68  C014  F003         	movff	L6470_Run@speed+1,CMD_Send@val+1
  2031  000F6C  C015  F004         	movff	L6470_Run@speed+2,CMD_Send@val+2
  2032  000F70  C016  F005         	movff	L6470_Run@speed+3,CMD_Send@val+3
  2033  000F74  0E00               	movlw	0
  2034  000F76  6E07               	movwf	CMD_Send@num+1,c
  2035  000F78  0E03               	movlw	3
  2036  000F7A  6E06               	movwf	CMD_Send@num,c
  2037  000F7C  5017               	movf	L6470_Run@dir,w,c
  2038  000F7E  0950               	iorlw	80
  2039  000F80  EC74  F005         	call	_CMD_Send
  2040  000F84  0012               	return		;funcret
  2041  000F86                     __end_of_L6470_Run:
  2042                           	opt callstack 0
  2043                           
  2044 ;; *************** function _L6470_Move *****************
  2045 ;; Defined at:
  2046 ;;		line 188 in file "L6470.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  dir             1    wreg     unsigned char 
  2049 ;;  step            4   18[COMRAM] unsigned long 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  dir             1   22[COMRAM] unsigned char 
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      void 
  2054 ;; Registers used:
  2055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2062 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2064 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2065 ;;Total ram usage:        5 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:    3
  2068 ;; This function calls:
  2069 ;;		_CMD_Send
  2070 ;; This function is called by:
  2071 ;;		_L6470_command
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text9
  2076  000F24                     __ptext9:
  2077                           	opt callstack 0
  2078  000F24                     _L6470_Move:
  2079                           	opt callstack 25
  2080                           
  2081                           ;incstack = 0
  2082                           ;L6470_Move@dir stored from wreg
  2083  000F24  6E17               	movwf	L6470_Move@dir,c
  2084                           
  2085                           ;L6470.c: 188: void L6470_Move(char dir,unsigned long step);L6470.c: 189: {;L6470.c: 190
      +                          :     PORTCbits.RC2 = 1;
  2086  000F26  8482               	bsf	3970,2,c	;volatile
  2087  000F28                     l2859:
  2088  000F28  5035               	movf	_Busy,w,c
  2089  000F2A  1036               	iorwf	_Busy+1,w,c
  2090  000F2C  A4D8               	btfss	status,2,c
  2091  000F2E  D002               	goto	u1070
  2092  000F30  A281               	btfss	3969,1,c	;volatile
  2093  000F32  D7FA               	goto	l2859
  2094  000F34                     u1070:
  2095                           
  2096                           ;L6470.c: 192:      CMD_Send(0x40|dir,step,3) ;
  2097  000F34  C013  F002         	movff	L6470_Move@step,CMD_Send@val
  2098  000F38  C014  F003         	movff	L6470_Move@step+1,CMD_Send@val+1
  2099  000F3C  C015  F004         	movff	L6470_Move@step+2,CMD_Send@val+2
  2100  000F40  C016  F005         	movff	L6470_Move@step+3,CMD_Send@val+3
  2101  000F44  0E00               	movlw	0
  2102  000F46  6E07               	movwf	CMD_Send@num+1,c
  2103  000F48  0E03               	movlw	3
  2104  000F4A  6E06               	movwf	CMD_Send@num,c
  2105  000F4C  5017               	movf	L6470_Move@dir,w,c
  2106  000F4E  0940               	iorlw	64
  2107  000F50  EC74  F005         	call	_CMD_Send
  2108  000F54  0012               	return		;funcret
  2109  000F56                     __end_of_L6470_Move:
  2110                           	opt callstack 0
  2111                           
  2112 ;; *************** function _L6470_CMD *****************
  2113 ;; Defined at:
  2114 ;;		line 215 in file "L6470.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  command         2    1[COMRAM] int 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;		None
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2131 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2132 ;;Total ram usage:        2 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    2
  2135 ;; This function calls:
  2136 ;;		_SPI_transfer
  2137 ;; This function is called by:
  2138 ;;		_main
  2139 ;;		_L6470_command
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text10
  2144  000FB0                     __ptext10:
  2145                           	opt callstack 0
  2146  000FB0                     _L6470_CMD:
  2147                           	opt callstack 26
  2148                           
  2149                           ;L6470.c: 216:     while( (Busy==0) && (PORTBbits.RB1==0) ) ;
  2150                           
  2151                           ;incstack = 0
  2152  000FB0  5035               	movf	_Busy,w,c
  2153  000FB2  1036               	iorwf	_Busy+1,w,c
  2154  000FB4  A4D8               	btfss	status,2,c
  2155  000FB6  D002               	goto	u1030
  2156  000FB8  A281               	btfss	3969,1,c	;volatile
  2157  000FBA  D7FA               	goto	_L6470_CMD
  2158  000FBC                     u1030:
  2159                           
  2160                           ;L6470.c: 217:      PORTBbits.RB0 = 0 ;
  2161  000FBC  9081               	bcf	3969,0,c	;volatile
  2162                           
  2163                           ;L6470.c: 218:      SPI_transfer(command) ;
  2164  000FBE  5002               	movf	L6470_CMD@command,w,c
  2165  000FC0  ECE4  F007         	call	_SPI_transfer
  2166                           
  2167                           ;L6470.c: 219:      PORTBbits.RB0 = 1 ;
  2168  000FC4  8081               	bsf	3969,0,c	;volatile
  2169  000FC6  0012               	return		;funcret
  2170  000FC8                     __end_of_L6470_CMD:
  2171                           	opt callstack 0
  2172                           
  2173 ;; *************** function _Wait *****************
  2174 ;; Defined at:
  2175 ;;		line 258 in file "main.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  num             2    0[COMRAM] unsigned int 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  i               2    3[COMRAM] int 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2192 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;Total ram usage:        5 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    1
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text11
  2204  000F86                     __ptext11:
  2205                           	opt callstack 0
  2206  000F86                     _Wait:
  2207                           	opt callstack 29
  2208                           
  2209                           ;main.c: 258: void Wait(unsigned int num);main.c: 259: {;main.c: 260:      int i ;;main.
      +                          c: 263:      for (i=0 ; i<num ; i++) {
  2210                           
  2211                           ;incstack = 0
  2212  000F86  0E00               	movlw	0
  2213  000F88  6E05               	movwf	Wait@i+1,c
  2214  000F8A  0E00               	movlw	0
  2215  000F8C  6E04               	movwf	Wait@i,c
  2216  000F8E  D009               	goto	l408
  2217  000F90                     l3197:
  2218                           
  2219                           ;main.c: 264:           _delay((unsigned long)((10)*(16000000/4000.0))) ;
  2220  000F90  0E34               	movlw	52
  2221  000F92  6E03               	movwf	??_Wait& (0+255),c
  2222  000F94  0EF2               	movlw	242
  2223  000F96                     u1527:
  2224  000F96  2EE8               	decfsz	wreg,f,c
  2225  000F98  D7FE               	bra	u1527
  2226  000F9A  2E03               	decfsz	??_Wait& (0+255),f,c
  2227  000F9C  D7FC               	bra	u1527
  2228                           
  2229                           ;main.c: 265:      }
  2230  000F9E  4A04               	infsnz	Wait@i,f,c
  2231  000FA0  2A05               	incf	Wait@i+1,f,c
  2232  000FA2                     l408:
  2233  000FA2  5001               	movf	Wait@num,w,c
  2234  000FA4  5C04               	subwf	Wait@i,w,c
  2235  000FA6  5002               	movf	Wait@num+1,w,c
  2236  000FA8  5805               	subwfb	Wait@i+1,w,c
  2237  000FAA  B0D8               	btfsc	status,0,c
  2238  000FAC  0012               	return	
  2239  000FAE  D7F0               	goto	l3197
  2240  000FB0                     __end_of_Wait:
  2241                           	opt callstack 0
  2242                           
  2243 ;; *************** function _SPI_Init *****************
  2244 ;; Defined at:
  2245 ;;		line 36 in file "SPIlib.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  mode            1    wreg     unsigned char 
  2248 ;;  divider         1    0[COMRAM] unsigned char 
  2249 ;;  sdo             2    1[COMRAM] int 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  mode            1    5[COMRAM] unsigned char 
  2252 ;;  con             1    4[COMRAM] unsigned char 
  2253 ;;  stat            1    3[COMRAM] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2263 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2264 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2266 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2267 ;;Total ram usage:        6 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    1
  2270 ;; This function calls:
  2271 ;;		Nothing
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text12
  2278  000E1A                     __ptext12:
  2279                           	opt callstack 0
  2280  000E1A                     _SPI_Init:
  2281                           	opt callstack 29
  2282                           
  2283                           ;incstack = 0
  2284                           ;SPI_Init@mode stored from wreg
  2285  000E1A  6E06               	movwf	SPI_Init@mode,c
  2286                           
  2287                           ;SPIlib.c: 36: void SPI_Init(char mode,char divider,int sdo);SPIlib.c: 37: {;SPIlib.c: 3
      +                          8:      char con , stat ;;SPIlib.c: 65:      con = 0b00100000 ;
  2288  000E1C  0E20               	movlw	32
  2289  000E1E  6E05               	movwf	SPI_Init@con,c
  2290                           
  2291                           ;SPIlib.c: 66:      stat = 0b00000000 ;
  2292  000E20  0E00               	movlw	0
  2293  000E22  6E04               	movwf	SPI_Init@stat,c
  2294                           
  2295                           ;SPIlib.c: 67:      con = con | divider ;
  2296  000E24  5005               	movf	SPI_Init@con,w,c
  2297  000E26  1001               	iorwf	SPI_Init@divider,w,c
  2298  000E28  6E05               	movwf	SPI_Init@con,c
  2299                           
  2300                           ;SPIlib.c: 68:      if (mode == 0 || mode == 2) {
  2301  000E2A  5006               	movf	SPI_Init@mode,w,c
  2302  000E2C  B4D8               	btfsc	status,2,c
  2303  000E2E  D004               	goto	u1270
  2304  000E30  0E02               	movlw	2
  2305  000E32  1806               	xorwf	SPI_Init@mode,w,c
  2306  000E34  A4D8               	btfss	status,2,c
  2307  000E36  D003               	goto	l779
  2308  000E38                     u1270:
  2309                           
  2310                           ;SPIlib.c: 69:           stat = stat | 0x40 ;
  2311  000E38  5004               	movf	SPI_Init@stat,w,c
  2312  000E3A  0940               	iorlw	64
  2313  000E3C  6E04               	movwf	SPI_Init@stat,c
  2314  000E3E                     l779:
  2315                           
  2316                           ;SPIlib.c: 71:      if (mode == 2 || mode == 3) {
  2317  000E3E  0E02               	movlw	2
  2318  000E40  1806               	xorwf	SPI_Init@mode,w,c
  2319  000E42  B4D8               	btfsc	status,2,c
  2320  000E44  D004               	goto	u1290
  2321  000E46  0E03               	movlw	3
  2322  000E48  1806               	xorwf	SPI_Init@mode,w,c
  2323  000E4A  A4D8               	btfss	status,2,c
  2324  000E4C  D003               	goto	l3121
  2325  000E4E                     u1290:
  2326                           
  2327                           ;SPIlib.c: 72:           con = con | 0x10 ;
  2328  000E4E  5005               	movf	SPI_Init@con,w,c
  2329  000E50  0910               	iorlw	16
  2330  000E52  6E05               	movwf	SPI_Init@con,c
  2331  000E54                     l3121:
  2332                           
  2333                           ;SPIlib.c: 74:      SSPCON1 = con ;
  2334  000E54  C005  FFC6         	movff	SPI_Init@con,4038	;volatile
  2335                           
  2336                           ;SPIlib.c: 75:      SSPSTAT = stat ;
  2337  000E58  C004  FFC7         	movff	SPI_Init@stat,4039	;volatile
  2338                           
  2339                           ;SPIlib.c: 76:      PIR1bits.SSPIF = 0 ;
  2340  000E5C  969E               	bcf	3998,3,c	;volatile
  2341                           
  2342                           ;SPIlib.c: 77:      INTCONbits.PEIE = 1 ;
  2343  000E5E  8CF2               	bsf	4082,6,c	;volatile
  2344                           
  2345                           ;SPIlib.c: 78:      INTCONbits.GIE = 1 ;
  2346  000E60  8EF2               	bsf	4082,7,c	;volatile
  2347  000E62  0012               	return		;funcret
  2348  000E64                     __end_of_SPI_Init:
  2349                           	opt callstack 0
  2350                           
  2351 ;; *************** function _L6470_Init *****************
  2352 ;; Defined at:
  2353 ;;		line 62 in file "L6470.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  val             4   27[COMRAM] long 
  2358 ;;  i               2   31[COMRAM] int 
  2359 ;;  config          2   24[COMRAM] struct CONFIG_t
  2360 ;;  step_mode       1   26[COMRAM] struct STEP_MODE_t
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  4   20[COMRAM] unsigned long 
  2363 ;; Registers used:
  2364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2370 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2371 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2373 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2374 ;;Total ram usage:       13 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    3
  2377 ;; This function calls:
  2378 ;;		_CMD_Send
  2379 ;;		_L6470_GetRegister
  2380 ;;		_SPI_transfer
  2381 ;; This function is called by:
  2382 ;;		_main
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text13
  2387  00051C                     __ptext13:
  2388                           	opt callstack 0
  2389  00051C                     _L6470_Init:
  2390                           	opt callstack 27
  2391                           
  2392                           ;L6470.c: 64:      union STEP_MODE_t step_mode ;;L6470.c: 65:      union CONFIG_t config
      +                           ;;L6470.c: 66:      long val ;;L6470.c: 67:      int i ;;L6470.c: 70:      for (i=0 ; i
      +                          <4 ; i++) {
  2393                           
  2394                           ;incstack = 0
  2395  00051C  0E00               	movlw	0
  2396  00051E  6E21               	movwf	L6470_Init@i+1,c
  2397  000520  0E00               	movlw	0
  2398  000522  6E20               	movwf	L6470_Init@i,c
  2399  000524                     l435:
  2400                           
  2401                           ;L6470.c: 71:           PORTBbits.RB0 = 0 ;
  2402  000524  9081               	bcf	3969,0,c	;volatile
  2403                           
  2404                           ;L6470.c: 72:           SPI_transfer(0x00) ;
  2405  000526  0E00               	movlw	0
  2406  000528  ECE4  F007         	call	_SPI_transfer
  2407                           
  2408                           ;L6470.c: 73:           PORTBbits.RB0 = 1 ;
  2409  00052C  8081               	bsf	3969,0,c	;volatile
  2410                           
  2411                           ;L6470.c: 74:      }
  2412  00052E  4A20               	infsnz	L6470_Init@i,f,c
  2413  000530  2A21               	incf	L6470_Init@i+1,f,c
  2414  000532  BE21               	btfsc	L6470_Init@i+1,7,c
  2415  000534  D7F7               	goto	l435
  2416  000536  5021               	movf	L6470_Init@i+1,w,c
  2417  000538  E104               	bnz	u1300
  2418  00053A  0E04               	movlw	4
  2419  00053C  5C20               	subwf	L6470_Init@i,w,c
  2420  00053E  A0D8               	btfss	status,0,c
  2421  000540  D7F1               	goto	l435
  2422  000542                     u1300:
  2423                           
  2424                           ;L6470.c: 75:      PORTBbits.RB0 = 0 ;
  2425  000542  9081               	bcf	3969,0,c	;volatile
  2426                           
  2427                           ;L6470.c: 76:      SPI_transfer(0xC0) ;
  2428  000544  0EC0               	movlw	192
  2429  000546  ECE4  F007         	call	_SPI_transfer
  2430                           
  2431                           ;L6470.c: 77:      PORTBbits.RB0 = 1 ;
  2432  00054A  8081               	bsf	3969,0,c	;volatile
  2433                           
  2434                           ;L6470.c: 79:      CMD_Send(0x05,0x008A,2) ;
  2435  00054C  0E8A               	movlw	138
  2436  00054E  6E02               	movwf	CMD_Send@val,c
  2437  000550  0E00               	movlw	0
  2438  000552  6E03               	movwf	CMD_Send@val+1,c
  2439  000554  0E00               	movlw	0
  2440  000556  6E04               	movwf	CMD_Send@val+2,c
  2441  000558  0E00               	movlw	0
  2442  00055A  6E05               	movwf	CMD_Send@val+3,c
  2443  00055C  0E00               	movlw	0
  2444  00055E  6E07               	movwf	CMD_Send@num+1,c
  2445  000560  0E02               	movlw	2
  2446  000562  6E06               	movwf	CMD_Send@num,c
  2447  000564  0E05               	movlw	5
  2448  000566  EC74  F005         	call	_CMD_Send
  2449                           
  2450                           ;L6470.c: 80:      CMD_Send(0x06,0x008A,2) ;
  2451  00056A  0E8A               	movlw	138
  2452  00056C  6E02               	movwf	CMD_Send@val,c
  2453  00056E  0E00               	movlw	0
  2454  000570  6E03               	movwf	CMD_Send@val+1,c
  2455  000572  0E00               	movlw	0
  2456  000574  6E04               	movwf	CMD_Send@val+2,c
  2457  000576  0E00               	movlw	0
  2458  000578  6E05               	movwf	CMD_Send@val+3,c
  2459  00057A  0E00               	movlw	0
  2460  00057C  6E07               	movwf	CMD_Send@num+1,c
  2461  00057E  0E02               	movlw	2
  2462  000580  6E06               	movwf	CMD_Send@num,c
  2463  000582  0E06               	movlw	6
  2464  000584  EC74  F005         	call	_CMD_Send
  2465                           
  2466                           ;L6470.c: 81:      CMD_Send(0x07,0x0020,2) ;
  2467  000588  0E20               	movlw	32
  2468  00058A  6E02               	movwf	CMD_Send@val,c
  2469  00058C  0E00               	movlw	0
  2470  00058E  6E03               	movwf	CMD_Send@val+1,c
  2471  000590  0E00               	movlw	0
  2472  000592  6E04               	movwf	CMD_Send@val+2,c
  2473  000594  0E00               	movlw	0
  2474  000596  6E05               	movwf	CMD_Send@val+3,c
  2475  000598  0E00               	movlw	0
  2476  00059A  6E07               	movwf	CMD_Send@num+1,c
  2477  00059C  0E02               	movlw	2
  2478  00059E  6E06               	movwf	CMD_Send@num,c
  2479  0005A0  0E07               	movlw	7
  2480  0005A2  EC74  F005         	call	_CMD_Send
  2481                           
  2482                           ;L6470.c: 82:      CMD_Send(0x08,0x0001,2) ;
  2483  0005A6  0E01               	movlw	1
  2484  0005A8  6E02               	movwf	CMD_Send@val,c
  2485  0005AA  0E00               	movlw	0
  2486  0005AC  6E03               	movwf	CMD_Send@val+1,c
  2487  0005AE  0E00               	movlw	0
  2488  0005B0  6E04               	movwf	CMD_Send@val+2,c
  2489  0005B2  0E00               	movlw	0
  2490  0005B4  6E05               	movwf	CMD_Send@val+3,c
  2491  0005B6  0E00               	movlw	0
  2492  0005B8  6E07               	movwf	CMD_Send@num+1,c
  2493  0005BA  0E02               	movlw	2
  2494  0005BC  6E06               	movwf	CMD_Send@num,c
  2495  0005BE  0E08               	movlw	8
  2496  0005C0  EC74  F005         	call	_CMD_Send
  2497                           
  2498                           ;L6470.c: 83:      CMD_Send(0x09,0xFF,1) ;
  2499  0005C4  0EFF               	movlw	255
  2500  0005C6  6E02               	movwf	CMD_Send@val,c
  2501  0005C8  0E00               	movlw	0
  2502  0005CA  6E03               	movwf	CMD_Send@val+1,c
  2503  0005CC  0E00               	movlw	0
  2504  0005CE  6E04               	movwf	CMD_Send@val+2,c
  2505  0005D0  0E00               	movlw	0
  2506  0005D2  6E05               	movwf	CMD_Send@val+3,c
  2507  0005D4  0E00               	movlw	0
  2508  0005D6  6E07               	movwf	CMD_Send@num+1,c
  2509  0005D8  0E01               	movlw	1
  2510  0005DA  6E06               	movwf	CMD_Send@num,c
  2511  0005DC  0E09               	movlw	9
  2512  0005DE  EC74  F005         	call	_CMD_Send
  2513                           
  2514                           ;L6470.c: 84:      CMD_Send(0x0A,0x80,1) ;
  2515  0005E2  0E80               	movlw	128
  2516  0005E4  6E02               	movwf	CMD_Send@val,c
  2517  0005E6  0E00               	movlw	0
  2518  0005E8  6E03               	movwf	CMD_Send@val+1,c
  2519  0005EA  0E00               	movlw	0
  2520  0005EC  6E04               	movwf	CMD_Send@val+2,c
  2521  0005EE  0E00               	movlw	0
  2522  0005F0  6E05               	movwf	CMD_Send@val+3,c
  2523  0005F2  0E00               	movlw	0
  2524  0005F4  6E07               	movwf	CMD_Send@num+1,c
  2525  0005F6  0E01               	movlw	1
  2526  0005F8  6E06               	movwf	CMD_Send@num,c
  2527  0005FA  0E0A               	movlw	10
  2528  0005FC  EC74  F005         	call	_CMD_Send
  2529                           
  2530                           ;L6470.c: 85:      CMD_Send(0x0B,0xF0,1) ;
  2531  000600  0EF0               	movlw	240
  2532  000602  6E02               	movwf	CMD_Send@val,c
  2533  000604  0E00               	movlw	0
  2534  000606  6E03               	movwf	CMD_Send@val+1,c
  2535  000608  0E00               	movlw	0
  2536  00060A  6E04               	movwf	CMD_Send@val+2,c
  2537  00060C  0E00               	movlw	0
  2538  00060E  6E05               	movwf	CMD_Send@val+3,c
  2539  000610  0E00               	movlw	0
  2540  000612  6E07               	movwf	CMD_Send@num+1,c
  2541  000614  0E01               	movlw	1
  2542  000616  6E06               	movwf	CMD_Send@num,c
  2543  000618  0E0B               	movlw	11
  2544  00061A  EC74  F005         	call	_CMD_Send
  2545                           
  2546                           ;L6470.c: 86:      CMD_Send(0x0C,0x80,1) ;
  2547  00061E  0E80               	movlw	128
  2548  000620  6E02               	movwf	CMD_Send@val,c
  2549  000622  0E00               	movlw	0
  2550  000624  6E03               	movwf	CMD_Send@val+1,c
  2551  000626  0E00               	movlw	0
  2552  000628  6E04               	movwf	CMD_Send@val+2,c
  2553  00062A  0E00               	movlw	0
  2554  00062C  6E05               	movwf	CMD_Send@val+3,c
  2555  00062E  0E00               	movlw	0
  2556  000630  6E07               	movwf	CMD_Send@num+1,c
  2557  000632  0E01               	movlw	1
  2558  000634  6E06               	movwf	CMD_Send@num,c
  2559  000636  0E0C               	movlw	12
  2560  000638  EC74  F005         	call	_CMD_Send
  2561                           
  2562                           ;L6470.c: 87:      CMD_Send(0x13,0x0F,1) ;
  2563  00063C  0E0F               	movlw	15
  2564  00063E  6E02               	movwf	CMD_Send@val,c
  2565  000640  0E00               	movlw	0
  2566  000642  6E03               	movwf	CMD_Send@val+1,c
  2567  000644  0E00               	movlw	0
  2568  000646  6E04               	movwf	CMD_Send@val+2,c
  2569  000648  0E00               	movlw	0
  2570  00064A  6E05               	movwf	CMD_Send@val+3,c
  2571  00064C  0E00               	movlw	0
  2572  00064E  6E07               	movwf	CMD_Send@num+1,c
  2573  000650  0E01               	movlw	1
  2574  000652  6E06               	movwf	CMD_Send@num,c
  2575  000654  0E13               	movlw	19
  2576  000656  EC74  F005         	call	_CMD_Send
  2577                           
  2578                           ;L6470.c: 88:      CMD_Send(0x14,0x7F,1) ;
  2579  00065A  0E7F               	movlw	127
  2580  00065C  6E02               	movwf	CMD_Send@val,c
  2581  00065E  0E00               	movlw	0
  2582  000660  6E03               	movwf	CMD_Send@val+1,c
  2583  000662  0E00               	movlw	0
  2584  000664  6E04               	movwf	CMD_Send@val+2,c
  2585  000666  0E00               	movlw	0
  2586  000668  6E05               	movwf	CMD_Send@val+3,c
  2587  00066A  0E00               	movlw	0
  2588  00066C  6E07               	movwf	CMD_Send@num+1,c
  2589  00066E  0E01               	movlw	1
  2590  000670  6E06               	movwf	CMD_Send@num,c
  2591  000672  0E14               	movlw	20
  2592  000674  EC74  F005         	call	_CMD_Send
  2593                           
  2594                           ;L6470.c: 90:      step_mode.DT = 0x07 ;
  2595  000678  0E07               	movlw	7
  2596  00067A  6E1B               	movwf	L6470_Init@step_mode,c
  2597                           
  2598                           ;L6470.c: 91:      step_mode.STEP_SEL = 0 ;
  2599  00067C  0EF8               	movlw	-8
  2600  00067E  161B               	andwf	L6470_Init@step_mode,f,c
  2601                           
  2602                           ;L6470.c: 92:      step_mode.SYNC_EN = Busy = 0 ;
  2603  000680  0E00               	movlw	0
  2604  000682  6E36               	movwf	_Busy+1,c
  2605  000684  0E00               	movlw	0
  2606  000686  6E35               	movwf	_Busy,c
  2607  000688  B035               	btfsc	_Busy,0,c
  2608  00068A  D002               	bra	u1315
  2609  00068C  9E1B               	bcf	L6470_Init@step_mode,7,c
  2610  00068E  D001               	bra	u1316
  2611  000690                     u1315:
  2612  000690  8E1B               	bsf	L6470_Init@step_mode,7,c
  2613  000692                     u1316:
  2614                           
  2615                           ;L6470.c: 93:      val = step_mode.DT ;
  2616  000692  501B               	movf	L6470_Init@step_mode,w,c
  2617  000694  6E1C               	movwf	L6470_Init@val,c
  2618  000696  6A1D               	clrf	L6470_Init@val+1,c
  2619  000698  6A1E               	clrf	L6470_Init@val+2,c
  2620  00069A  6A1F               	clrf	L6470_Init@val+3,c
  2621                           
  2622                           ;L6470.c: 94:      CMD_Send(0x16,val,1) ;
  2623  00069C  C01C  F002         	movff	L6470_Init@val,CMD_Send@val
  2624  0006A0  C01D  F003         	movff	L6470_Init@val+1,CMD_Send@val+1
  2625  0006A4  C01E  F004         	movff	L6470_Init@val+2,CMD_Send@val+2
  2626  0006A8  C01F  F005         	movff	L6470_Init@val+3,CMD_Send@val+3
  2627  0006AC  0E00               	movlw	0
  2628  0006AE  6E07               	movwf	CMD_Send@num+1,c
  2629  0006B0  0E01               	movlw	1
  2630  0006B2  6E06               	movwf	CMD_Send@num,c
  2631  0006B4  0E16               	movlw	22
  2632  0006B6  EC74  F005         	call	_CMD_Send
  2633                           
  2634                           ;L6470.c: 96:      config.DT = 0x2F88 ;
  2635  0006BA  0E2F               	movlw	47
  2636  0006BC  6E1A               	movwf	L6470_Init@config+1,c
  2637  0006BE  0E88               	movlw	136
  2638  0006C0  6E19               	movwf	L6470_Init@config,c
  2639                           
  2640                           ;L6470.c: 97:      config.OSC_SEL = 0 ;
  2641  0006C2  0EF8               	movlw	-8
  2642  0006C4  1619               	andwf	L6470_Init@config,f,c
  2643                           
  2644                           ;L6470.c: 98:      config.EXT_CLK = 0 ;
  2645  0006C6  9619               	bcf	L6470_Init@config,3,c
  2646                           
  2647                           ;L6470.c: 99:      config.SW_MODE = 1 ;
  2648  0006C8  8819               	bsf	L6470_Init@config,4,c
  2649                           
  2650                           ;L6470.c: 100:      val = config.DT ;
  2651  0006CA  C019  F01C         	movff	L6470_Init@config,L6470_Init@val
  2652  0006CE  C01A  F01D         	movff	L6470_Init@config+1,L6470_Init@val+1
  2653  0006D2  6A1E               	clrf	L6470_Init@val+2,c
  2654  0006D4  6A1F               	clrf	L6470_Init@val+3,c
  2655                           
  2656                           ;L6470.c: 101:      CMD_Send(0x18,val,2) ;
  2657  0006D6  C01C  F002         	movff	L6470_Init@val,CMD_Send@val
  2658  0006DA  C01D  F003         	movff	L6470_Init@val+1,CMD_Send@val+1
  2659  0006DE  C01E  F004         	movff	L6470_Init@val+2,CMD_Send@val+2
  2660  0006E2  C01F  F005         	movff	L6470_Init@val+3,CMD_Send@val+3
  2661  0006E6  0E00               	movlw	0
  2662  0006E8  6E07               	movwf	CMD_Send@num+1,c
  2663  0006EA  0E02               	movlw	2
  2664  0006EC  6E06               	movwf	CMD_Send@num,c
  2665  0006EE  0E18               	movlw	24
  2666  0006F0  EC74  F005         	call	_CMD_Send
  2667                           
  2668                           ;L6470.c: 102:      return L6470_GetRegister(0x19,2) ;
  2669  0006F4  0E00               	movlw	0
  2670  0006F6  6E03               	movwf	L6470_GetRegister@num+1,c
  2671  0006F8  0E02               	movlw	2
  2672  0006FA  6E02               	movwf	L6470_GetRegister@num,c
  2673  0006FC  0E19               	movlw	25
  2674  0006FE  EC15  F005         	call	_L6470_GetRegister
  2675  000702  C002  F015         	movff	?_L6470_GetRegister,?_L6470_Init
  2676  000706  C003  F016         	movff	?_L6470_GetRegister+1,?_L6470_Init+1
  2677  00070A  C004  F017         	movff	?_L6470_GetRegister+2,?_L6470_Init+2
  2678  00070E  C005  F018         	movff	?_L6470_GetRegister+3,?_L6470_Init+3
  2679  000712  0012               	return		;funcret
  2680  000714                     __end_of_L6470_Init:
  2681                           	opt callstack 0
  2682                           
  2683 ;; *************** function _L6470_GetRegister *****************
  2684 ;; Defined at:
  2685 ;;		line 112 in file "L6470.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  regadrs         1    wreg     unsigned char 
  2688 ;;  num             2    1[COMRAM] int 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  regadrs         1   15[COMRAM] unsigned char 
  2691 ;;  ans             4   16[COMRAM] unsigned long 
  2692 ;;  dt              4    9[COMRAM] unsigned long 
  2693 ;;  i               2   13[COMRAM] int 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  4    1[COMRAM] unsigned long 
  2696 ;; Registers used:
  2697 ;;		wreg, status,2, status,0, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2703 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2704 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2705 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2706 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2707 ;;Total ram usage:       19 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    2
  2710 ;; This function calls:
  2711 ;;		_SPI_transfer
  2712 ;; This function is called by:
  2713 ;;		_L6470_Init
  2714 ;;		_L6470_command
  2715 ;;		_L6470_ALARM
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text14
  2720  000A2A                     __ptext14:
  2721                           	opt callstack 0
  2722  000A2A                     _L6470_GetRegister:
  2723                           	opt callstack 26
  2724                           
  2725                           ;incstack = 0
  2726                           ;L6470_GetRegister@regadrs stored from wreg
  2727  000A2A  6E10               	movwf	L6470_GetRegister@regadrs,c
  2728                           
  2729                           ;L6470.c: 112: unsigned long L6470_GetRegister(char regadrs,int num);L6470.c: 113: {;L64
      +                          70.c: 114:      unsigned long ans , dt ;;L6470.c: 115:      int i ;;L6470.c: 117:      P
      +                          ORTBbits.RB0 = 0 ;
  2730  000A2C  9081               	bcf	3969,0,c	;volatile
  2731                           
  2732                           ;L6470.c: 118:      if (regadrs == 0x19) SPI_transfer(0xD0) ;
  2733  000A2E  0E19               	movlw	25
  2734  000A30  1810               	xorwf	L6470_GetRegister@regadrs,w,c
  2735  000A32  A4D8               	btfss	status,2,c
  2736  000A34  D004               	goto	l2835
  2737  000A36  0ED0               	movlw	208
  2738  000A38  ECE4  F007         	call	_SPI_transfer
  2739  000A3C  D004               	goto	l2837
  2740  000A3E                     l2835:
  2741  000A3E  5010               	movf	L6470_GetRegister@regadrs,w,c
  2742  000A40  0920               	iorlw	32
  2743  000A42  ECE4  F007         	call	_SPI_transfer
  2744  000A46                     l2837:
  2745                           
  2746                           ;L6470.c: 120:      PORTBbits.RB0 = 1 ;
  2747  000A46  8081               	bsf	3969,0,c	;volatile
  2748                           
  2749                           ;L6470.c: 121:      ans = dt = 0 ;
  2750  000A48  0E00               	movlw	0
  2751  000A4A  6E0A               	movwf	L6470_GetRegister@dt,c
  2752  000A4C  0E00               	movlw	0
  2753  000A4E  6E0B               	movwf	L6470_GetRegister@dt+1,c
  2754  000A50  0E00               	movlw	0
  2755  000A52  6E0C               	movwf	L6470_GetRegister@dt+2,c
  2756  000A54  0E00               	movlw	0
  2757  000A56  6E0D               	movwf	L6470_GetRegister@dt+3,c
  2758  000A58  C00A  F011         	movff	L6470_GetRegister@dt,L6470_GetRegister@ans
  2759  000A5C  C00B  F012         	movff	L6470_GetRegister@dt+1,L6470_GetRegister@ans+1
  2760  000A60  C00C  F013         	movff	L6470_GetRegister@dt+2,L6470_GetRegister@ans+2
  2761  000A64  C00D  F014         	movff	L6470_GetRegister@dt+3,L6470_GetRegister@ans+3
  2762                           
  2763                           ;L6470.c: 122:      for (i=0 ; i<num ; i++) {
  2764  000A68  0E00               	movlw	0
  2765  000A6A  6E0F               	movwf	L6470_GetRegister@i+1,c
  2766  000A6C  0E00               	movlw	0
  2767  000A6E  6E0E               	movwf	L6470_GetRegister@i,c
  2768  000A70  D028               	goto	l2855
  2769  000A72                     l2843:
  2770                           
  2771                           ;L6470.c: 123:           ans = ans << 8 ;
  2772  000A72  C011  F007         	movff	L6470_GetRegister@ans,??_L6470_GetRegister+1
  2773  000A76  C012  F008         	movff	L6470_GetRegister@ans+1,??_L6470_GetRegister+2
  2774  000A7A  C013  F009         	movff	L6470_GetRegister@ans+2,??_L6470_GetRegister+3
  2775  000A7E  6A06               	clrf	??_L6470_GetRegister& (0+255),c
  2776  000A80  C006  F011         	movff	??_L6470_GetRegister,L6470_GetRegister@ans
  2777  000A84  C007  F012         	movff	??_L6470_GetRegister+1,L6470_GetRegister@ans+1
  2778  000A88  C008  F013         	movff	??_L6470_GetRegister+2,L6470_GetRegister@ans+2
  2779  000A8C  C009  F014         	movff	??_L6470_GetRegister+3,L6470_GetRegister@ans+3
  2780                           
  2781                           ;L6470.c: 124:           PORTBbits.RB0 = 0 ;
  2782  000A90  9081               	bcf	3969,0,c	;volatile
  2783                           
  2784                           ;L6470.c: 125:           dt = SPI_transfer(0x00) ;
  2785  000A92  0E00               	movlw	0
  2786  000A94  ECE4  F007         	call	_SPI_transfer
  2787  000A98  6E06               	movwf	??_L6470_GetRegister& (0+255),c
  2788  000A9A  5006               	movf	??_L6470_GetRegister,w,c
  2789  000A9C  6E0A               	movwf	L6470_GetRegister@dt,c
  2790  000A9E  6A0B               	clrf	L6470_GetRegister@dt+1,c
  2791  000AA0  6A0C               	clrf	L6470_GetRegister@dt+2,c
  2792  000AA2  6A0D               	clrf	L6470_GetRegister@dt+3,c
  2793                           
  2794                           ;L6470.c: 126:           PORTBbits.RB0 = 1 ;
  2795  000AA4  8081               	bsf	3969,0,c	;volatile
  2796                           
  2797                           ;L6470.c: 127:           ans = ans | dt ;
  2798  000AA6  500A               	movf	L6470_GetRegister@dt,w,c
  2799  000AA8  1011               	iorwf	L6470_GetRegister@ans,w,c
  2800  000AAA  6E11               	movwf	L6470_GetRegister@ans,c
  2801  000AAC  500B               	movf	L6470_GetRegister@dt+1,w,c
  2802  000AAE  1012               	iorwf	L6470_GetRegister@ans+1,w,c
  2803  000AB0  6E12               	movwf	L6470_GetRegister@ans+1,c
  2804  000AB2  500C               	movf	L6470_GetRegister@dt+2,w,c
  2805  000AB4  1013               	iorwf	L6470_GetRegister@ans+2,w,c
  2806  000AB6  6E13               	movwf	L6470_GetRegister@ans+2,c
  2807  000AB8  500D               	movf	L6470_GetRegister@dt+3,w,c
  2808  000ABA  1014               	iorwf	L6470_GetRegister@ans+3,w,c
  2809  000ABC  6E14               	movwf	L6470_GetRegister@ans+3,c
  2810                           
  2811                           ;L6470.c: 128:      }
  2812  000ABE  4A0E               	infsnz	L6470_GetRegister@i,f,c
  2813  000AC0  2A0F               	incf	L6470_GetRegister@i+1,f,c
  2814  000AC2                     l2855:
  2815  000AC2  5002               	movf	L6470_GetRegister@num,w,c
  2816  000AC4  5C0E               	subwf	L6470_GetRegister@i,w,c
  2817  000AC6  500F               	movf	L6470_GetRegister@i+1,w,c
  2818  000AC8  0A80               	xorlw	128
  2819  000ACA  6E06               	movwf	??_L6470_GetRegister& (0+255),c
  2820  000ACC  5003               	movf	L6470_GetRegister@num+1,w,c
  2821  000ACE  0A80               	xorlw	128
  2822  000AD0  5806               	subwfb	??_L6470_GetRegister& (0+255),w,c
  2823  000AD2  A0D8               	btfss	status,0,c
  2824  000AD4  D7CE               	goto	l2843
  2825                           
  2826                           ;L6470.c: 129:      return ans ;
  2827  000AD6  C011  F002         	movff	L6470_GetRegister@ans,?_L6470_GetRegister
  2828  000ADA  C012  F003         	movff	L6470_GetRegister@ans+1,?_L6470_GetRegister+1
  2829  000ADE  C013  F004         	movff	L6470_GetRegister@ans+2,?_L6470_GetRegister+2
  2830  000AE2  C014  F005         	movff	L6470_GetRegister@ans+3,?_L6470_GetRegister+3
  2831  000AE6  0012               	return		;funcret
  2832  000AE8                     __end_of_L6470_GetRegister:
  2833                           	opt callstack 0
  2834                           
  2835 ;; *************** function _CMD_Send *****************
  2836 ;; Defined at:
  2837 ;;		line 27 in file "L6470.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  cmd             1    wreg     unsigned char 
  2840 ;;  val             4    1[COMRAM] unsigned long 
  2841 ;;  num             2    5[COMRAM] int 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  cmd             1   15[COMRAM] unsigned char 
  2844 ;;  dt              4   11[COMRAM] unsigned char [4]
  2845 ;;  i               2   16[COMRAM] int 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2855 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2856 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2857 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2858 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2859 ;;Total ram usage:       17 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    2
  2862 ;; This function calls:
  2863 ;;		_SPI_transfer
  2864 ;; This function is called by:
  2865 ;;		_L6470_Init
  2866 ;;		_L6470_Run
  2867 ;;		_L6470_Move
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text15
  2872  000AE8                     __ptext15:
  2873                           	opt callstack 0
  2874  000AE8                     _CMD_Send:
  2875                           	opt callstack 25
  2876                           
  2877                           ;incstack = 0
  2878                           ;CMD_Send@cmd stored from wreg
  2879  000AE8  6E10               	movwf	CMD_Send@cmd,c
  2880                           
  2881                           ;L6470.c: 27: void CMD_Send(char cmd,unsigned long val,int num);L6470.c: 28: {;L6470.c: 
      +                          29:      unsigned char dt[4] ;;L6470.c: 30:      int i ;;L6470.c: 32:      for (i=0 ; i<
      +                          num ; i++) {
  2882  000AEA  0E00               	movlw	0
  2883  000AEC  6E12               	movwf	CMD_Send@i+1,c
  2884  000AEE  0E00               	movlw	0
  2885  000AF0  6E11               	movwf	CMD_Send@i,c
  2886  000AF2  D021               	goto	l2775
  2887  000AF4                     l2769:
  2888                           
  2889                           ;L6470.c: 33:           dt[i] = val & 0xff ;
  2890  000AF4  0E0C               	movlw	low CMD_Send@dt
  2891  000AF6  2411               	addwf	CMD_Send@i,w,c
  2892  000AF8  6ED9               	movwf	fsr2l,c
  2893  000AFA  0E00               	movlw	high CMD_Send@dt
  2894  000AFC  2012               	addwfc	CMD_Send@i+1,w,c
  2895  000AFE  6EDA               	movwf	fsr2h,c
  2896  000B00  C002  FFDF         	movff	CMD_Send@val,indf2
  2897                           
  2898                           ;L6470.c: 34:           val = val >> 8 ;
  2899  000B04  C002  F008         	movff	CMD_Send@val,??_CMD_Send
  2900  000B08  C003  F009         	movff	CMD_Send@val+1,??_CMD_Send+1
  2901  000B0C  C004  F00A         	movff	CMD_Send@val+2,??_CMD_Send+2
  2902  000B10  C005  F00B         	movff	CMD_Send@val+3,??_CMD_Send+3
  2903  000B14  C009  F008         	movff	??_CMD_Send+1,??_CMD_Send
  2904  000B18  C00A  F009         	movff	??_CMD_Send+2,??_CMD_Send+1
  2905  000B1C  C00B  F00A         	movff	??_CMD_Send+3,??_CMD_Send+2
  2906  000B20  6A0B               	clrf	??_CMD_Send+3,c
  2907  000B22  C008  F002         	movff	??_CMD_Send,CMD_Send@val
  2908  000B26  C009  F003         	movff	??_CMD_Send+1,CMD_Send@val+1
  2909  000B2A  C00A  F004         	movff	??_CMD_Send+2,CMD_Send@val+2
  2910  000B2E  C00B  F005         	movff	??_CMD_Send+3,CMD_Send@val+3
  2911                           
  2912                           ;L6470.c: 35:      }
  2913  000B32  4A11               	infsnz	CMD_Send@i,f,c
  2914  000B34  2A12               	incf	CMD_Send@i+1,f,c
  2915  000B36                     l2775:
  2916  000B36  5006               	movf	CMD_Send@num,w,c
  2917  000B38  5C11               	subwf	CMD_Send@i,w,c
  2918  000B3A  5012               	movf	CMD_Send@i+1,w,c
  2919  000B3C  0A80               	xorlw	128
  2920  000B3E  6E08               	movwf	??_CMD_Send& (0+255),c
  2921  000B40  5007               	movf	CMD_Send@num+1,w,c
  2922  000B42  0A80               	xorlw	128
  2923  000B44  5808               	subwfb	??_CMD_Send& (0+255),w,c
  2924  000B46  A0D8               	btfss	status,0,c
  2925  000B48  D7D5               	goto	l2769
  2926                           
  2927                           ;L6470.c: 37:      PORTBbits.RB0 = 0 ;
  2928  000B4A  9081               	bcf	3969,0,c	;volatile
  2929                           
  2930                           ;L6470.c: 38:      SPI_transfer(cmd) ;
  2931  000B4C  5010               	movf	CMD_Send@cmd,w,c
  2932  000B4E  ECE4  F007         	call	_SPI_transfer
  2933                           
  2934                           ;L6470.c: 39:      PORTBbits.RB0 = 1 ;
  2935  000B52  8081               	bsf	3969,0,c	;volatile
  2936                           
  2937                           ;L6470.c: 40:      switch (num) {
  2938  000B54  D010               	goto	l2795
  2939  000B56                     l428:
  2940                           
  2941                           ;L6470.c: 42:                PORTBbits.RB0 = 0 ;
  2942  000B56  9081               	bcf	3969,0,c	;volatile
  2943                           
  2944                           ;L6470.c: 43:                SPI_transfer(dt[2]) ;
  2945  000B58  500E               	movf	CMD_Send@dt+2,w,c
  2946  000B5A  ECE4  F007         	call	_SPI_transfer
  2947                           
  2948                           ;L6470.c: 44:                PORTBbits.RB0 = 1 ;
  2949  000B5E  8081               	bsf	3969,0,c	;volatile
  2950  000B60                     l2785:
  2951                           
  2952                           ;L6470.c: 46:                PORTBbits.RB0 = 0 ;
  2953  000B60  9081               	bcf	3969,0,c	;volatile
  2954                           
  2955                           ;L6470.c: 47:                SPI_transfer(dt[1]) ;
  2956  000B62  500D               	movf	CMD_Send@dt+1,w,c
  2957  000B64  ECE4  F007         	call	_SPI_transfer
  2958                           
  2959                           ;L6470.c: 48:                PORTBbits.RB0 = 1 ;
  2960  000B68  8081               	bsf	3969,0,c	;volatile
  2961  000B6A                     l2789:
  2962                           
  2963                           ;L6470.c: 50:                PORTBbits.RB0 = 0 ;
  2964  000B6A  9081               	bcf	3969,0,c	;volatile
  2965                           
  2966                           ;L6470.c: 51:                SPI_transfer(dt[0]) ;
  2967  000B6C  500C               	movf	CMD_Send@dt,w,c
  2968  000B6E  ECE4  F007         	call	_SPI_transfer
  2969                           
  2970                           ;L6470.c: 52:                PORTBbits.RB0 = 1 ;
  2971  000B72  8081               	bsf	3969,0,c	;volatile
  2972                           
  2973                           ;L6470.c: 53:                break ;
  2974  000B74  0012               	return	
  2975  000B76                     l2795:
  2976  000B76  C006  F008         	movff	CMD_Send@num,??_CMD_Send
  2977  000B7A  C007  F009         	movff	CMD_Send@num+1,??_CMD_Send+1
  2978                           
  2979                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2980                           ; Switch size 1, requested type "simple"
  2981                           ; Number of cases is 1, Range of values is 0 to 0
  2982                           ; switch strategies available:
  2983                           ; Name         Instructions Cycles
  2984                           ; simple_byte            4     3 (average)
  2985                           ;	Chosen strategy is simple_byte
  2986  000B7E  5009               	movf	??_CMD_Send+1,w,c
  2987  000B80  0A00               	xorlw	0	; case 0
  2988  000B82  A4D8               	btfss	status,2,c
  2989  000B84  0012               	return	
  2990                           
  2991                           ; Switch size 1, requested type "simple"
  2992                           ; Number of cases is 3, Range of values is 1 to 3
  2993                           ; switch strategies available:
  2994                           ; Name         Instructions Cycles
  2995                           ; simple_byte           10     6 (average)
  2996                           ;	Chosen strategy is simple_byte
  2997  000B86  5008               	movf	??_CMD_Send,w,c
  2998  000B88  0A01               	xorlw	1	; case 1
  2999  000B8A  B4D8               	btfsc	status,2,c
  3000  000B8C  D7EE               	goto	l2789
  3001  000B8E  0A03               	xorlw	3	; case 2
  3002  000B90  B4D8               	btfsc	status,2,c
  3003  000B92  D7E6               	goto	l2785
  3004  000B94  0A01               	xorlw	1	; case 3
  3005  000B96  A4D8               	btfss	status,2,c
  3006  000B98  0012               	return	
  3007  000B9A  D7DD               	goto	l428
  3008  000B9C                     __end_of_CMD_Send:
  3009                           	opt callstack 0
  3010                           
  3011 ;; *************** function _SPI_transfer *****************
  3012 ;; Defined at:
  3013 ;;		line 119 in file "SPIlib.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  dt              1    wreg     unsigned char 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  dt              1    0[COMRAM] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      unsigned char 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3031 ;;Total ram usage:        1 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    1
  3034 ;; This function calls:
  3035 ;;		Nothing
  3036 ;; This function is called by:
  3037 ;;		_CMD_Send
  3038 ;;		_L6470_Init
  3039 ;;		_L6470_GetRegister
  3040 ;;		_L6470_Stop
  3041 ;;		_L6470_CMD
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text16
  3046  000FC8                     __ptext16:
  3047                           	opt callstack 0
  3048  000FC8                     _SPI_transfer:
  3049                           	opt callstack 26
  3050                           
  3051                           ;incstack = 0
  3052                           ;SPI_transfer@dt stored from wreg
  3053  000FC8  6E01               	movwf	SPI_transfer@dt,c
  3054                           
  3055                           ;SPIlib.c: 119: unsigned char SPI_transfer(char dt);SPIlib.c: 120: {;SPIlib.c: 121:     
      +                           SSPBUF = dt ;
  3056  000FCA  C001  FFC9         	movff	SPI_transfer@dt,4041	;volatile
  3057  000FCE                     l803:
  3058  000FCE  A69E               	btfss	3998,3,c	;volatile
  3059  000FD0  D7FE               	goto	l803
  3060                           
  3061                           ;SPIlib.c: 123:      PIR1bits.SSPIF = 0 ;
  3062  000FD2  969E               	bcf	3998,3,c	;volatile
  3063                           
  3064                           ;SPIlib.c: 124:      return SSPBUF ;
  3065  000FD4  50C9               	movf	4041,w,c	;volatile
  3066  000FD6  0012               	return		;funcret
  3067  000FD8                     __end_of_SPI_transfer:
  3068                           	opt callstack 0
  3069                           
  3070 ;; *************** function _ECAN_Initialize *****************
  3071 ;; Defined at:
  3072 ;;		line 62 in file "mcc_generated_files/ecan.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3088 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3089 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3090 ;;Total ram usage:        1 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    1
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_main
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text17
  3101  000B9C                     __ptext17:
  3102                           	opt callstack 0
  3103  000B9C                     _ECAN_Initialize:
  3104                           	opt callstack 29
  3105                           
  3106                           ;mcc_generated_files/ecan.c: 64:     CANCON = 0x80;
  3107                           
  3108                           ;incstack = 0
  3109  000B9C  0E80               	movlw	128
  3110  000B9E  6E6F               	movwf	3951,c	;volatile
  3111  000BA0                     l3013:
  3112  000BA0  506E               	movf	3950,w,c	;volatile
  3113  000BA2  0BE0               	andlw	224
  3114  000BA4  0A80               	xorlw	128
  3115  000BA6  A4D8               	btfss	status,2,c
  3116  000BA8  D7FB               	goto	l3013
  3117                           
  3118                           ;mcc_generated_files/ecan.c: 70:     ECANCON = 0x00;
  3119  000BAA  0E00               	movlw	0
  3120  000BAC  6E72               	movwf	3954,c	;volatile
  3121                           
  3122                           ;mcc_generated_files/ecan.c: 75:     CIOCON = 0x20;
  3123  000BAE  0E20               	movlw	32
  3124  000BB0  6E70               	movwf	3952,c	;volatile
  3125                           
  3126                           ;mcc_generated_files/ecan.c: 86:     RXB0CONbits.RXM0 = 1;
  3127  000BB2  8A60               	bsf	3936,5,c	;volatile
  3128                           
  3129                           ;mcc_generated_files/ecan.c: 87:     RXB0CONbits.RXM1 = 1;
  3130  000BB4  8C60               	bsf	3936,6,c	;volatile
  3131                           
  3132                           ;mcc_generated_files/ecan.c: 91:     RXM0EIDH = 0xFF;
  3133  000BB6  010E               	movlb	14	; () banked
  3134  000BB8  69FA               	setf	250,b	;volatile
  3135                           
  3136                           ; BSR set to: 14
  3137                           ;mcc_generated_files/ecan.c: 92:     RXM0EIDL = 0xFF;
  3138  000BBA  69FB               	setf	251,b	;volatile
  3139                           
  3140                           ; BSR set to: 14
  3141                           ;mcc_generated_files/ecan.c: 93:     RXM0SIDH = 0xFF;
  3142  000BBC  69F8               	setf	248,b	;volatile
  3143                           
  3144                           ;mcc_generated_files/ecan.c: 94:     RXM0SIDL = 0xE3;
  3145  000BBE  0EE3               	movlw	227
  3146  000BC0  6FF9               	movwf	249,b	;volatile
  3147                           
  3148                           ; BSR set to: 14
  3149                           ;mcc_generated_files/ecan.c: 95:     RXM1EIDH = 0xFF;
  3150  000BC2  69FE               	setf	254,b	;volatile
  3151                           
  3152                           ; BSR set to: 14
  3153                           ;mcc_generated_files/ecan.c: 96:     RXM1EIDL = 0xFF;
  3154  000BC4  69FF               	setf	255,b	;volatile
  3155                           
  3156                           ; BSR set to: 14
  3157                           ;mcc_generated_files/ecan.c: 97:     RXM1SIDH = 0xFF;
  3158  000BC6  69FC               	setf	252,b	;volatile
  3159                           
  3160                           ;mcc_generated_files/ecan.c: 98:     RXM1SIDL = 0xE3;
  3161  000BC8  0EE3               	movlw	227
  3162  000BCA  6FFD               	movwf	253,b	;volatile
  3163                           
  3164                           ;mcc_generated_files/ecan.c: 103:     RXF0EIDH = 0x00;
  3165  000BCC  0E00               	movlw	0
  3166  000BCE  6FE2               	movwf	226,b	;volatile
  3167                           
  3168                           ;mcc_generated_files/ecan.c: 104:     RXF0EIDL = 0x00;
  3169  000BD0  0E00               	movlw	0
  3170  000BD2  6FE3               	movwf	227,b	;volatile
  3171                           
  3172                           ;mcc_generated_files/ecan.c: 105:     RXF0SIDH = 0x24;
  3173  000BD4  0E24               	movlw	36
  3174  000BD6  6FE0               	movwf	224,b	;volatile
  3175                           
  3176                           ;mcc_generated_files/ecan.c: 106:     RXF0SIDL = 0x60;
  3177  000BD8  0E60               	movlw	96
  3178  000BDA  6FE1               	movwf	225,b	;volatile
  3179                           
  3180                           ;mcc_generated_files/ecan.c: 107:     RXF1EIDH = 0x00;
  3181  000BDC  0E00               	movlw	0
  3182  000BDE  6FE6               	movwf	230,b	;volatile
  3183                           
  3184                           ;mcc_generated_files/ecan.c: 108:     RXF1EIDL = 0x00;
  3185  000BE0  0E00               	movlw	0
  3186  000BE2  6FE7               	movwf	231,b	;volatile
  3187                           
  3188                           ;mcc_generated_files/ecan.c: 109:     RXF1SIDH = 0x00;
  3189  000BE4  0E00               	movlw	0
  3190  000BE6  6FE4               	movwf	228,b	;volatile
  3191                           
  3192                           ;mcc_generated_files/ecan.c: 110:     RXF1SIDL = 0x00;
  3193  000BE8  0E00               	movlw	0
  3194  000BEA  6FE5               	movwf	229,b	;volatile
  3195                           
  3196                           ;mcc_generated_files/ecan.c: 111:     RXF2EIDH = 0x00;
  3197  000BEC  0E00               	movlw	0
  3198  000BEE  6FEA               	movwf	234,b	;volatile
  3199                           
  3200                           ;mcc_generated_files/ecan.c: 112:     RXF2EIDL = 0x00;
  3201  000BF0  0E00               	movlw	0
  3202  000BF2  6FEB               	movwf	235,b	;volatile
  3203                           
  3204                           ;mcc_generated_files/ecan.c: 113:     RXF2SIDH = 0x00;
  3205  000BF4  0E00               	movlw	0
  3206  000BF6  6FE8               	movwf	232,b	;volatile
  3207                           
  3208                           ;mcc_generated_files/ecan.c: 114:     RXF2SIDL = 0x00;
  3209  000BF8  0E00               	movlw	0
  3210  000BFA  6FE9               	movwf	233,b	;volatile
  3211                           
  3212                           ;mcc_generated_files/ecan.c: 115:     RXF3EIDH = 0x00;
  3213  000BFC  0E00               	movlw	0
  3214  000BFE  6FEE               	movwf	238,b	;volatile
  3215                           
  3216                           ;mcc_generated_files/ecan.c: 116:     RXF3EIDL = 0x00;
  3217  000C00  0E00               	movlw	0
  3218  000C02  6FEF               	movwf	239,b	;volatile
  3219                           
  3220                           ;mcc_generated_files/ecan.c: 117:     RXF3SIDH = 0x00;
  3221  000C04  0E00               	movlw	0
  3222  000C06  6FEC               	movwf	236,b	;volatile
  3223                           
  3224                           ;mcc_generated_files/ecan.c: 118:     RXF3SIDL = 0x00;
  3225  000C08  0E00               	movlw	0
  3226  000C0A  6FED               	movwf	237,b	;volatile
  3227                           
  3228                           ;mcc_generated_files/ecan.c: 119:     RXF4EIDH = 0x00;
  3229  000C0C  0E00               	movlw	0
  3230  000C0E  6FF2               	movwf	242,b	;volatile
  3231                           
  3232                           ;mcc_generated_files/ecan.c: 120:     RXF4EIDL = 0x00;
  3233  000C10  0E00               	movlw	0
  3234  000C12  6FF3               	movwf	243,b	;volatile
  3235                           
  3236                           ;mcc_generated_files/ecan.c: 121:     RXF4SIDH = 0x00;
  3237  000C14  0E00               	movlw	0
  3238  000C16  6FF0               	movwf	240,b	;volatile
  3239                           
  3240                           ;mcc_generated_files/ecan.c: 122:     RXF4SIDL = 0x00;
  3241  000C18  0E00               	movlw	0
  3242  000C1A  6FF1               	movwf	241,b	;volatile
  3243                           
  3244                           ;mcc_generated_files/ecan.c: 123:     RXF5EIDH = 0x00;
  3245  000C1C  0E00               	movlw	0
  3246  000C1E  6FF6               	movwf	246,b	;volatile
  3247                           
  3248                           ;mcc_generated_files/ecan.c: 124:     RXF5EIDL = 0x00;
  3249  000C20  0E00               	movlw	0
  3250  000C22  6FF7               	movwf	247,b	;volatile
  3251                           
  3252                           ;mcc_generated_files/ecan.c: 125:     RXF5SIDH = 0x00;
  3253  000C24  0E00               	movlw	0
  3254  000C26  6FF4               	movwf	244,b	;volatile
  3255                           
  3256                           ;mcc_generated_files/ecan.c: 126:     RXF5SIDL = 0x00;
  3257  000C28  0E00               	movlw	0
  3258  000C2A  6FF5               	movwf	245,b	;volatile
  3259                           
  3260                           ;mcc_generated_files/ecan.c: 141:     BRGCON1 = 0x01;
  3261  000C2C  0E01               	movlw	1
  3262  000C2E  6F43               	movwf	67,b	;volatile
  3263                           
  3264                           ;mcc_generated_files/ecan.c: 142:     BRGCON2 = 0x98;
  3265  000C30  0E98               	movlw	152
  3266  000C32  6F44               	movwf	68,b	;volatile
  3267                           
  3268                           ;mcc_generated_files/ecan.c: 143:     BRGCON3 = 0x01;
  3269  000C34  0E01               	movlw	1
  3270  000C36  6F45               	movwf	69,b	;volatile
  3271                           
  3272                           ;mcc_generated_files/ecan.c: 145:     CANCON = 0x00;
  3273  000C38  0E00               	movlw	0
  3274  000C3A  6E6F               	movwf	3951,c	;volatile
  3275  000C3C                     l3033:
  3276  000C3C  CF6E F001          	movff	3950,??_ECAN_Initialize	;volatile
  3277  000C40  0EE0               	movlw	224
  3278  000C42  1601               	andwf	??_ECAN_Initialize,f,c
  3279  000C44  B4D8               	btfsc	status,2,c
  3280  000C46  0012               	return	
  3281  000C48  D7F9               	goto	l3033
  3282  000C4A                     __end_of_ECAN_Initialize:
  3283                           	opt callstack 0
  3284                           
  3285 ;; *************** function _CAN_receive *****************
  3286 ;; Defined at:
  3287 ;;		line 241 in file "mcc_generated_files/ecan.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  tempCanMsg      2   19[COMRAM] PTR struct .
  3290 ;;		 -> rxMessage(14), 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  returnValue     1   21[COMRAM] unsigned char 
  3293 ;; Return value:  Size  Location     Type
  3294 ;;                  1    wreg      unsigned char 
  3295 ;; Registers used:
  3296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3297 ;; Tracked objects:
  3298 ;;		On entry : 0/0
  3299 ;;		On exit  : 0/0
  3300 ;;		Unchanged: 0/0
  3301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3303 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3305 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3306 ;;Total ram usage:        3 bytes
  3307 ;; Hardware stack levels used:    1
  3308 ;; Hardware stack levels required when called:    2
  3309 ;; This function calls:
  3310 ;;		_convertReg2ExtendedCANid
  3311 ;;		_convertReg2StandardCANid
  3312 ;; This function is called by:
  3313 ;;		_main
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text18
  3318  0002F8                     __ptext18:
  3319                           	opt callstack 0
  3320  0002F8                     _CAN_receive:
  3321                           	opt callstack 28
  3322                           
  3323                           ;mcc_generated_files/ecan.c: 241: uint8_t CAN_receive(uCAN_MSG *tempCanMsg);mcc_generate
      +                          d_files/ecan.c: 242: {;mcc_generated_files/ecan.c: 243:     uint8_t returnValue = 0;
  3324                           
  3325                           ;incstack = 0
  3326  0002F8  0E00               	movlw	0
  3327  0002FA  6E16               	movwf	CAN_receive@returnValue,c
  3328                           
  3329                           ;mcc_generated_files/ecan.c: 246:     if (RXB0CONbits.RXFUL != 0)
  3330  0002FC  AE60               	btfss	3936,7,c	;volatile
  3331  0002FE  D085               	goto	l256
  3332                           
  3333                           ;mcc_generated_files/ecan.c: 247:     {;mcc_generated_files/ecan.c: 248:         if ((RX
      +                          B0SIDL & 0x08) == 0x08)
  3334  000300  A662               	btfss	3938,3,c	;volatile
  3335  000302  D01E               	goto	l3045
  3336                           
  3337                           ;mcc_generated_files/ecan.c: 249:         {;mcc_generated_files/ecan.c: 251:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  3338  000304  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3339  000308  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3340  00030C  0E02               	movlw	2
  3341  00030E  6EDF               	movwf	indf2,c
  3342                           
  3343                           ;mcc_generated_files/ecan.c: 252:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB0EIDH, RXB0EIDL, RXB0SIDH, RXB0SIDL);
  3344  000310  CF64 F001          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  3345  000314  CF61 F002          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  3346  000318  CF62 F003          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  3347  00031C  5063               	movf	3939,w,c	;volatile
  3348  00031E  EC8A  F003         	call	_convertReg2ExtendedCANid
  3349  000322  EE20 F001          	lfsr	2,1
  3350  000326  5014               	movf	CAN_receive@tempCanMsg,w,c
  3351  000328  26D9               	addwf	fsr2l,f,c
  3352  00032A  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3353  00032C  22DA               	addwfc	fsr2h,f,c
  3354  00032E  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  3355  000332  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  3356  000336  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  3357  00033A  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  3358                           
  3359                           ;mcc_generated_files/ecan.c: 253:         }
  3360  00033E  D019               	goto	l3049
  3361  000340                     l3045:
  3362                           
  3363                           ;mcc_generated_files/ecan.c: 255:         {;mcc_generated_files/ecan.c: 257:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  3364  000340  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3365  000344  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3366  000348  0E01               	movlw	1
  3367  00034A  6EDF               	movwf	indf2,c
  3368                           
  3369                           ;mcc_generated_files/ecan.c: 258:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB0SIDH, RXB0SIDL);
  3370  00034C  CF62 F001          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  3371  000350  5061               	movf	3937,w,c	;volatile
  3372  000352  ECA7  F006         	call	_convertReg2StandardCANid
  3373  000356  EE20 F001          	lfsr	2,1
  3374  00035A  5014               	movf	CAN_receive@tempCanMsg,w,c
  3375  00035C  26D9               	addwf	fsr2l,f,c
  3376  00035E  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3377  000360  22DA               	addwfc	fsr2h,f,c
  3378  000362  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  3379  000366  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  3380  00036A  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  3381  00036E  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  3382  000372                     l3049:
  3383                           
  3384                           ;mcc_generated_files/ecan.c: 261:         tempCanMsg->frame.dlc = RXB0DLC;
  3385  000372  EE20 F005          	lfsr	2,5
  3386  000376  5014               	movf	CAN_receive@tempCanMsg,w,c
  3387  000378  26D9               	addwf	fsr2l,f,c
  3388  00037A  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3389  00037C  22DA               	addwfc	fsr2h,f,c
  3390  00037E  CF65 FFDF          	movff	3941,indf2	;volatile
  3391                           
  3392                           ;mcc_generated_files/ecan.c: 262:         tempCanMsg->frame.data0 = RXB0D0;
  3393  000382  EE20 F006          	lfsr	2,6
  3394  000386  5014               	movf	CAN_receive@tempCanMsg,w,c
  3395  000388  26D9               	addwf	fsr2l,f,c
  3396  00038A  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3397  00038C  22DA               	addwfc	fsr2h,f,c
  3398  00038E  CF66 FFDF          	movff	3942,indf2	;volatile
  3399                           
  3400                           ;mcc_generated_files/ecan.c: 263:         tempCanMsg->frame.data1 = RXB0D1;
  3401  000392  EE20 F007          	lfsr	2,7
  3402  000396  5014               	movf	CAN_receive@tempCanMsg,w,c
  3403  000398  26D9               	addwf	fsr2l,f,c
  3404  00039A  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3405  00039C  22DA               	addwfc	fsr2h,f,c
  3406  00039E  CF67 FFDF          	movff	3943,indf2	;volatile
  3407                           
  3408                           ;mcc_generated_files/ecan.c: 264:         tempCanMsg->frame.data2 = RXB0D2;
  3409  0003A2  EE20 F008          	lfsr	2,8
  3410  0003A6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3411  0003A8  26D9               	addwf	fsr2l,f,c
  3412  0003AA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3413  0003AC  22DA               	addwfc	fsr2h,f,c
  3414  0003AE  CF68 FFDF          	movff	3944,indf2	;volatile
  3415                           
  3416                           ;mcc_generated_files/ecan.c: 265:         tempCanMsg->frame.data3 = RXB0D3;
  3417  0003B2  EE20 F009          	lfsr	2,9
  3418  0003B6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3419  0003B8  26D9               	addwf	fsr2l,f,c
  3420  0003BA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3421  0003BC  22DA               	addwfc	fsr2h,f,c
  3422  0003BE  CF69 FFDF          	movff	3945,indf2	;volatile
  3423                           
  3424                           ;mcc_generated_files/ecan.c: 266:         tempCanMsg->frame.data4 = RXB0D4;
  3425  0003C2  EE20 F00A          	lfsr	2,10
  3426  0003C6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3427  0003C8  26D9               	addwf	fsr2l,f,c
  3428  0003CA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3429  0003CC  22DA               	addwfc	fsr2h,f,c
  3430  0003CE  CF6A FFDF          	movff	3946,indf2	;volatile
  3431                           
  3432                           ;mcc_generated_files/ecan.c: 267:         tempCanMsg->frame.data5 = RXB0D5;
  3433  0003D2  EE20 F00B          	lfsr	2,11
  3434  0003D6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3435  0003D8  26D9               	addwf	fsr2l,f,c
  3436  0003DA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3437  0003DC  22DA               	addwfc	fsr2h,f,c
  3438  0003DE  CF6B FFDF          	movff	3947,indf2	;volatile
  3439                           
  3440                           ;mcc_generated_files/ecan.c: 268:         tempCanMsg->frame.data6 = RXB0D6;
  3441  0003E2  EE20 F00C          	lfsr	2,12
  3442  0003E6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3443  0003E8  26D9               	addwf	fsr2l,f,c
  3444  0003EA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3445  0003EC  22DA               	addwfc	fsr2h,f,c
  3446  0003EE  CF6C FFDF          	movff	3948,indf2	;volatile
  3447                           
  3448                           ;mcc_generated_files/ecan.c: 269:         tempCanMsg->frame.data7 = RXB0D7;
  3449  0003F2  EE20 F00D          	lfsr	2,13
  3450  0003F6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3451  0003F8  26D9               	addwf	fsr2l,f,c
  3452  0003FA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3453  0003FC  22DA               	addwfc	fsr2h,f,c
  3454  0003FE  CF6D FFDF          	movff	3949,indf2	;volatile
  3455                           
  3456                           ;mcc_generated_files/ecan.c: 270:         RXB0CONbits.RXFUL = 0;
  3457  000402  9E60               	bcf	3936,7,c	;volatile
  3458  000404                     l3069:
  3459                           
  3460                           ;mcc_generated_files/ecan.c: 271:         returnValue = 1;
  3461  000404  0E01               	movlw	1
  3462  000406  6E16               	movwf	CAN_receive@returnValue,c
  3463                           
  3464                           ;mcc_generated_files/ecan.c: 272:     }
  3465  000408  D087               	goto	l3103
  3466  00040A                     l256:
  3467  00040A  010F               	movlb	15	; () banked
  3468  00040C  AF30               	btfss	48,7,b	;volatile
  3469  00040E  D084               	goto	l3103
  3470                           
  3471                           ; BSR set to: 15
  3472                           ;mcc_generated_files/ecan.c: 274:     {;mcc_generated_files/ecan.c: 275:         if ((RX
      +                          B1SIDL & 0x08) == 0x08)
  3473  000410  A732               	btfss	50,3,b	;volatile
  3474  000412  D01E               	goto	l3077
  3475                           
  3476                           ; BSR set to: 15
  3477                           ;mcc_generated_files/ecan.c: 276:         {;mcc_generated_files/ecan.c: 278:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  3478  000414  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3479  000418  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3480  00041C  0E02               	movlw	2
  3481  00041E  6EDF               	movwf	indf2,c
  3482                           
  3483                           ; BSR set to: 15
  3484                           ;mcc_generated_files/ecan.c: 279:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB1EIDH, RXB1EIDL, RXB1SIDH, RXB1SIDL);
  3485  000420  CF34 F001          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  3486  000424  CF31 F002          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  3487  000428  CF32 F003          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  3488  00042C  5133               	movf	51,w,b	;volatile
  3489  00042E  EC8A  F003         	call	_convertReg2ExtendedCANid
  3490  000432  EE20 F001          	lfsr	2,1
  3491  000436  5014               	movf	CAN_receive@tempCanMsg,w,c
  3492  000438  26D9               	addwf	fsr2l,f,c
  3493  00043A  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3494  00043C  22DA               	addwfc	fsr2h,f,c
  3495  00043E  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  3496  000442  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  3497  000446  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  3498  00044A  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  3499                           
  3500                           ;mcc_generated_files/ecan.c: 280:         }
  3501  00044E  D019               	goto	l3081
  3502  000450                     l3077:
  3503                           
  3504                           ; BSR set to: 15
  3505                           ;mcc_generated_files/ecan.c: 282:         {;mcc_generated_files/ecan.c: 284:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  3506  000450  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3507  000454  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3508  000458  0E01               	movlw	1
  3509  00045A  6EDF               	movwf	indf2,c
  3510                           
  3511                           ; BSR set to: 15
  3512                           ;mcc_generated_files/ecan.c: 285:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB1SIDH, RXB1SIDL);
  3513  00045C  CF32 F001          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  3514  000460  5131               	movf	49,w,b	;volatile
  3515  000462  ECA7  F006         	call	_convertReg2StandardCANid
  3516  000466  EE20 F001          	lfsr	2,1
  3517  00046A  5014               	movf	CAN_receive@tempCanMsg,w,c
  3518  00046C  26D9               	addwf	fsr2l,f,c
  3519  00046E  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3520  000470  22DA               	addwfc	fsr2h,f,c
  3521  000472  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  3522  000476  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  3523  00047A  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  3524  00047E  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  3525  000482                     l3081:
  3526                           
  3527                           ;mcc_generated_files/ecan.c: 288:         tempCanMsg->frame.dlc = RXB1DLC;
  3528  000482  EE20 F005          	lfsr	2,5
  3529  000486  5014               	movf	CAN_receive@tempCanMsg,w,c
  3530  000488  26D9               	addwf	fsr2l,f,c
  3531  00048A  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3532  00048C  22DA               	addwfc	fsr2h,f,c
  3533  00048E  CF35 FFDF          	movff	3893,indf2	;volatile
  3534                           
  3535                           ;mcc_generated_files/ecan.c: 289:         tempCanMsg->frame.data0 = RXB1D0;
  3536  000492  EE20 F006          	lfsr	2,6
  3537  000496  5014               	movf	CAN_receive@tempCanMsg,w,c
  3538  000498  26D9               	addwf	fsr2l,f,c
  3539  00049A  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3540  00049C  22DA               	addwfc	fsr2h,f,c
  3541  00049E  CF36 FFDF          	movff	3894,indf2	;volatile
  3542                           
  3543                           ;mcc_generated_files/ecan.c: 290:         tempCanMsg->frame.data1 = RXB1D1;
  3544  0004A2  EE20 F007          	lfsr	2,7
  3545  0004A6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3546  0004A8  26D9               	addwf	fsr2l,f,c
  3547  0004AA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3548  0004AC  22DA               	addwfc	fsr2h,f,c
  3549  0004AE  CF37 FFDF          	movff	3895,indf2	;volatile
  3550                           
  3551                           ;mcc_generated_files/ecan.c: 291:         tempCanMsg->frame.data2 = RXB1D2;
  3552  0004B2  EE20 F008          	lfsr	2,8
  3553  0004B6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3554  0004B8  26D9               	addwf	fsr2l,f,c
  3555  0004BA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3556  0004BC  22DA               	addwfc	fsr2h,f,c
  3557  0004BE  CF38 FFDF          	movff	3896,indf2	;volatile
  3558                           
  3559                           ;mcc_generated_files/ecan.c: 292:         tempCanMsg->frame.data3 = RXB1D3;
  3560  0004C2  EE20 F009          	lfsr	2,9
  3561  0004C6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3562  0004C8  26D9               	addwf	fsr2l,f,c
  3563  0004CA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3564  0004CC  22DA               	addwfc	fsr2h,f,c
  3565  0004CE  CF39 FFDF          	movff	3897,indf2	;volatile
  3566                           
  3567                           ;mcc_generated_files/ecan.c: 293:         tempCanMsg->frame.data4 = RXB1D4;
  3568  0004D2  EE20 F00A          	lfsr	2,10
  3569  0004D6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3570  0004D8  26D9               	addwf	fsr2l,f,c
  3571  0004DA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3572  0004DC  22DA               	addwfc	fsr2h,f,c
  3573  0004DE  CF3A FFDF          	movff	3898,indf2	;volatile
  3574                           
  3575                           ;mcc_generated_files/ecan.c: 294:         tempCanMsg->frame.data5 = RXB1D5;
  3576  0004E2  EE20 F00B          	lfsr	2,11
  3577  0004E6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3578  0004E8  26D9               	addwf	fsr2l,f,c
  3579  0004EA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3580  0004EC  22DA               	addwfc	fsr2h,f,c
  3581  0004EE  CF3B FFDF          	movff	3899,indf2	;volatile
  3582                           
  3583                           ;mcc_generated_files/ecan.c: 295:         tempCanMsg->frame.data6 = RXB1D6;
  3584  0004F2  EE20 F00C          	lfsr	2,12
  3585  0004F6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3586  0004F8  26D9               	addwf	fsr2l,f,c
  3587  0004FA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3588  0004FC  22DA               	addwfc	fsr2h,f,c
  3589  0004FE  CF3C FFDF          	movff	3900,indf2	;volatile
  3590                           
  3591                           ;mcc_generated_files/ecan.c: 296:         tempCanMsg->frame.data7 = RXB1D7;
  3592  000502  EE20 F00D          	lfsr	2,13
  3593  000506  5014               	movf	CAN_receive@tempCanMsg,w,c
  3594  000508  26D9               	addwf	fsr2l,f,c
  3595  00050A  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3596  00050C  22DA               	addwfc	fsr2h,f,c
  3597  00050E  CF3D FFDF          	movff	3901,indf2	;volatile
  3598                           
  3599                           ;mcc_generated_files/ecan.c: 297:         RXB1CONbits.RXFUL = 0;
  3600  000512  010F               	movlb	15	; () banked
  3601  000514  9F30               	bcf	48,7,b	;volatile
  3602  000516  D776               	goto	l3069
  3603  000518                     l3103:
  3604                           
  3605                           ;mcc_generated_files/ecan.c: 300:     return (returnValue);
  3606  000518  5016               	movf	CAN_receive@returnValue,w,c
  3607  00051A  0012               	return		;funcret
  3608  00051C                     __end_of_CAN_receive:
  3609                           	opt callstack 0
  3610                           
  3611 ;; *************** function _convertReg2StandardCANid *****************
  3612 ;; Defined at:
  3613 ;;		line 387 in file "mcc_generated_files/ecan.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  tempRXBn_SID    1    wreg     unsigned char 
  3616 ;;  tempRXBn_SID    1    0[COMRAM] unsigned char 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  tempRXBn_SID    1    6[COMRAM] unsigned char 
  3619 ;;  ConvertedID     4   11[COMRAM] unsigned long 
  3620 ;;  returnValue     4    7[COMRAM] unsigned long 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  4    0[COMRAM] unsigned long 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3630 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3631 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3632 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3633 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3634 ;;Total ram usage:       15 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    1
  3637 ;; This function calls:
  3638 ;;		Nothing
  3639 ;; This function is called by:
  3640 ;;		_CAN_receive
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text19
  3645  000D4E                     __ptext19:
  3646                           	opt callstack 0
  3647  000D4E                     _convertReg2StandardCANid:
  3648                           	opt callstack 28
  3649                           
  3650                           ;incstack = 0
  3651                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  3652  000D4E  6E07               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
  3653                           
  3654                           ;mcc_generated_files/ecan.c: 390:     uint32_t ConvertedID;;mcc_generated_files/ecan.c: 
      +                          394:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  3655  000D50  5007               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
  3656  000D52  6E05               	movwf	??_convertReg2StandardCANid& (0+255),c
  3657  000D54  6A06               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
  3658  000D56  90D8               	bcf	status,0,c
  3659  000D58  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3660  000D5A  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3661  000D5C  90D8               	bcf	status,0,c
  3662  000D5E  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3663  000D60  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3664  000D62  90D8               	bcf	status,0,c
  3665  000D64  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3666  000D66  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3667  000D68  C005  F00C         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  3668  000D6C  C006  F00D         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  3669  000D70  0E00               	movlw	0
  3670  000D72  BE0D               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
  3671  000D74  0EFF               	movlw	-1
  3672  000D76  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  3673  000D78  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  3674                           
  3675                           ;mcc_generated_files/ecan.c: 395:     ConvertedID = ConvertedID + (uint32_t)(tempRXBn_SI
      +                          DL >> 5);
  3676  000D7A  C001  F005         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  3677  000D7E  0E05               	movlw	5
  3678  000D80  6E06               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
  3679  000D82                     u1185:
  3680  000D82  90D8               	bcf	status,0,c
  3681  000D84  3205               	rrcf	??_convertReg2StandardCANid,f,c
  3682  000D86  2E06               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
  3683  000D88  D7FC               	goto	u1185
  3684  000D8A  5005               	movf	??_convertReg2StandardCANid,w,c
  3685  000D8C  240C               	addwf	convertReg2StandardCANid@ConvertedID,w,c
  3686  000D8E  6E0C               	movwf	convertReg2StandardCANid@ConvertedID,c
  3687  000D90  0E00               	movlw	0
  3688  000D92  200D               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
  3689  000D94  6E0D               	movwf	convertReg2StandardCANid@ConvertedID+1,c
  3690  000D96  0E00               	movlw	0
  3691  000D98  200E               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
  3692  000D9A  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  3693  000D9C  0E00               	movlw	0
  3694  000D9E  200F               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
  3695  000DA0  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  3696                           
  3697                           ;mcc_generated_files/ecan.c: 396:     returnValue = ConvertedID;
  3698  000DA2  C00C  F008         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  3699  000DA6  C00D  F009         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  3700  000DAA  C00E  F00A         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  3701  000DAE  C00F  F00B         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  3702                           
  3703                           ;mcc_generated_files/ecan.c: 397:     return (returnValue);
  3704  000DB2  C008  F001         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  3705  000DB6  C009  F002         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  3706  000DBA  C00A  F003         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  3707  000DBE  C00B  F004         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  3708  000DC2  0012               	return		;funcret
  3709  000DC4                     __end_of_convertReg2StandardCANid:
  3710                           	opt callstack 0
  3711                           
  3712 ;; *************** function _convertReg2ExtendedCANid *****************
  3713 ;; Defined at:
  3714 ;;		line 366 in file "mcc_generated_files/ecan.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  tempRXBn_EID    1    wreg     unsigned char 
  3717 ;;  tempRXBn_EID    1    0[COMRAM] unsigned char 
  3718 ;;  tempRXBn_SID    1    1[COMRAM] unsigned char 
  3719 ;;  tempRXBn_SID    1    2[COMRAM] unsigned char 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  tempRXBn_EID    1    8[COMRAM] unsigned char 
  3722 ;;  ConvertedID     4   15[COMRAM] unsigned long 
  3723 ;;  returnValue     4    9[COMRAM] unsigned long 
  3724 ;;  CAN_standard    1   14[COMRAM] unsigned char 
  3725 ;;  CAN_standard    1   13[COMRAM] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  4    0[COMRAM] unsigned long 
  3728 ;; Registers used:
  3729 ;;		wreg, status,2, status,0
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3735 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3736 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3737 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3738 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3739 ;;Total ram usage:       19 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    1
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_CAN_receive
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text20
  3750  000714                     __ptext20:
  3751                           	opt callstack 0
  3752  000714                     _convertReg2ExtendedCANid:
  3753                           	opt callstack 28
  3754                           
  3755                           ;incstack = 0
  3756                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  3757  000714  6E09               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
  3758                           
  3759                           ;mcc_generated_files/ecan.c: 369:     uint32_t ConvertedID = 0;
  3760  000716  0E00               	movlw	0
  3761  000718  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3762  00071A  0E00               	movlw	0
  3763  00071C  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3764  00071E  0E00               	movlw	0
  3765  000720  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3766  000722  0E00               	movlw	0
  3767  000724  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3768                           
  3769                           ;mcc_generated_files/ecan.c: 370:     uint8_t CAN_standardLo_ID_lo2bits;;mcc_generated_f
      +                          iles/ecan.c: 371:     uint8_t CAN_standardLo_ID_hi3bits;;mcc_generated_files/ecan.c: 373
      +                          :     CAN_standardLo_ID_lo2bits = (uint8_t)(tempRXBn_SIDL & 0x03);
  3770  000726  5003               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  3771  000728  0B03               	andlw	3
  3772  00072A  6E0E               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
  3773                           
  3774                           ;mcc_generated_files/ecan.c: 374:     CAN_standardLo_ID_hi3bits = (uint8_t)(tempRXBn_SID
      +                          L >> 5);
  3775  00072C  3803               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  3776  00072E  42E8               	rrncf	wreg,f,c
  3777  000730  0B07               	andlw	7
  3778  000732  6E0F               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
  3779                           
  3780                           ;mcc_generated_files/ecan.c: 375:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  3781  000734  5002               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
  3782  000736  6E05               	movwf	??_convertReg2ExtendedCANid& (0+255),c
  3783  000738  6A06               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
  3784  00073A  90D8               	bcf	status,0,c
  3785  00073C  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3786  00073E  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3787  000740  90D8               	bcf	status,0,c
  3788  000742  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3789  000744  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3790  000746  90D8               	bcf	status,0,c
  3791  000748  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3792  00074A  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3793  00074C  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3794  000750  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3795  000754  0E00               	movlw	0
  3796  000756  BE11               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
  3797  000758  0EFF               	movlw	-1
  3798  00075A  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3799  00075C  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3800                           
  3801                           ;mcc_generated_files/ecan.c: 376:     ConvertedID = ConvertedID + CAN_standardLo_ID_hi3b
      +                          its;
  3802  00075E  500F               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
  3803  000760  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3804  000762  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3805  000764  0E00               	movlw	0
  3806  000766  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3807  000768  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3808  00076A  0E00               	movlw	0
  3809  00076C  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3810  00076E  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3811  000770  0E00               	movlw	0
  3812  000772  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3813  000774  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3814                           
  3815                           ;mcc_generated_files/ecan.c: 377:     ConvertedID = (ConvertedID << 2);
  3816  000776  C010  F005         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  3817  00077A  C011  F006         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  3818  00077E  C012  F007         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  3819  000782  C013  F008         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  3820  000786  0E02               	movlw	2
  3821  000788                     u1175:
  3822  000788  90D8               	bcf	status,0,c
  3823  00078A  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3824  00078C  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3825  00078E  3607               	rlcf	??_convertReg2ExtendedCANid+2,f,c
  3826  000790  3608               	rlcf	??_convertReg2ExtendedCANid+3,f,c
  3827  000792  2EE8               	decfsz	wreg,f,c
  3828  000794  D7F9               	goto	u1175
  3829  000796  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3830  00079A  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3831  00079E  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3832  0007A2  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3833                           
  3834                           ;mcc_generated_files/ecan.c: 378:     ConvertedID = ConvertedID + CAN_standardLo_ID_lo2b
      +                          its;
  3835  0007A6  500E               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
  3836  0007A8  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3837  0007AA  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3838  0007AC  0E00               	movlw	0
  3839  0007AE  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3840  0007B0  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3841  0007B2  0E00               	movlw	0
  3842  0007B4  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3843  0007B6  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3844  0007B8  0E00               	movlw	0
  3845  0007BA  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3846  0007BC  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3847                           
  3848                           ;mcc_generated_files/ecan.c: 379:     ConvertedID = (ConvertedID << 8);
  3849  0007BE  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  3850  0007C2  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  3851  0007C6  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  3852  0007CA  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  3853  0007CC  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3854  0007D0  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3855  0007D4  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3856  0007D8  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3857                           
  3858                           ;mcc_generated_files/ecan.c: 380:     ConvertedID = ConvertedID + tempRXBn_EIDH;
  3859  0007DC  5009               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
  3860  0007DE  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3861  0007E0  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3862  0007E2  0E00               	movlw	0
  3863  0007E4  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3864  0007E6  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3865  0007E8  0E00               	movlw	0
  3866  0007EA  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3867  0007EC  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3868  0007EE  0E00               	movlw	0
  3869  0007F0  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3870  0007F2  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3871                           
  3872                           ;mcc_generated_files/ecan.c: 381:     ConvertedID = (ConvertedID << 8);
  3873  0007F4  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  3874  0007F8  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  3875  0007FC  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  3876  000800  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  3877  000802  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3878  000806  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3879  00080A  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3880  00080E  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3881                           
  3882                           ;mcc_generated_files/ecan.c: 382:     ConvertedID = ConvertedID + tempRXBn_EIDL;
  3883  000812  5001               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
  3884  000814  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3885  000816  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3886  000818  0E00               	movlw	0
  3887  00081A  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3888  00081C  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3889  00081E  0E00               	movlw	0
  3890  000820  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3891  000822  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3892  000824  0E00               	movlw	0
  3893  000826  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3894  000828  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3895                           
  3896                           ;mcc_generated_files/ecan.c: 383:     returnValue = ConvertedID;
  3897  00082A  C010  F00A         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  3898  00082E  C011  F00B         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  3899  000832  C012  F00C         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  3900  000836  C013  F00D         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  3901                           
  3902                           ;mcc_generated_files/ecan.c: 384:     return (returnValue);
  3903  00083A  C00A  F001         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  3904  00083E  C00B  F002         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  3905  000842  C00C  F003         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  3906  000846  C00D  F004         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  3907  00084A  0012               	return		;funcret
  3908  00084C                     __end_of_convertReg2ExtendedCANid:
  3909                           	opt callstack 0
  3910                           
  3911 ;; *************** function _InterTimer *****************
  3912 ;; Defined at:
  3913 ;;		line 7 in file "servo.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;		None
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      void 
  3920 ;; Registers used:
  3921 ;;		wreg, status,2
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3931 ;;Total ram usage:        0 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		Interrupt level 2
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	intcode
  3941  000008                     __pintcode:
  3942                           	opt callstack 0
  3943  000008                     _InterTimer:
  3944                           	opt callstack 25
  3945                           
  3946                           ;incstack = 0
  3947  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3948                           
  3949                           ;servo.c: 8:     if(PIR1bits.TMR1IF == 1){
  3950  00000A  A09E               	btfss	3998,0,c	;volatile
  3951  00000C  D002               	goto	i2l872
  3952                           
  3953                           ;servo.c: 9:         PORTCbits.RC1 = 0;
  3954  00000E  9282               	bcf	3970,1,c	;volatile
  3955                           
  3956                           ;servo.c: 10:         PIR1bits.TMR1IF = 0;
  3957  000010  909E               	bcf	3998,0,c	;volatile
  3958  000012                     i2l872:
  3959                           
  3960                           ;servo.c: 12:     if(PIR2bits.TMR3IF == 1){
  3961  000012  A2A1               	btfss	4001,1,c	;volatile
  3962  000014  D00B               	goto	i2l874
  3963                           
  3964                           ;servo.c: 13:         PORTCbits.RC1 = 1;
  3965  000016  8282               	bsf	3970,1,c	;volatile
  3966                           
  3967                           ;servo.c: 14:         TMR3H = (55536 >> 8);
  3968  000018  0ED8               	movlw	216
  3969  00001A  6EB3               	movwf	4019,c	;volatile
  3970                           
  3971                           ;servo.c: 15:         TMR3L = (55536 & 0x00ff);
  3972  00001C  0EF0               	movlw	240
  3973  00001E  6EB2               	movwf	4018,c	;volatile
  3974                           
  3975                           ;servo.c: 16:         TMR1H = (T1time >> 8);
  3976  000020  504D               	movf	_T1time+1,w,c
  3977  000022  6ECF               	movwf	4047,c	;volatile
  3978                           
  3979                           ;servo.c: 17:         TMR1L = (T1time & 0x00ff);
  3980  000024  C04C  FFCE         	movff	_T1time,4046	;volatile
  3981                           
  3982                           ;servo.c: 18:         PIR1bits.TMR1IF = 0;
  3983  000028  909E               	bcf	3998,0,c	;volatile
  3984                           
  3985                           ;servo.c: 19:         PIR2bits.TMR3IF = 0;
  3986  00002A  92A1               	bcf	4001,1,c	;volatile
  3987  00002C                     i2l874:
  3988  00002C  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3989  00002E  0011               	retfie		f
  3990  000030                     __end_of_InterTimer:
  3991                           	opt callstack 0
  3992  0000                     
  3993                           	psect	rparam
  3994  0000                     
  3995                           	psect	temp
  3996  00004E                     btemp:
  3997                           	opt callstack 0
  3998  00004E                     	ds	1
  3999  0000                     int$flags	set	btemp
  4000  0000                     wtemp8	set	btemp+1
  4001  0000                     ttemp5	set	btemp+1
  4002  0000                     ttemp6	set	btemp+4
  4003  0000                     ttemp7	set	btemp+8
  4004                           tosu	equ	0xFFF
  4005                           tosh	equ	0xFFE
  4006                           tosl	equ	0xFFD
  4007                           stkptr	equ	0xFFC
  4008                           pclatu	equ	0xFFB
  4009                           pclath	equ	0xFFA
  4010                           pcl	equ	0xFF9
  4011                           tblptru	equ	0xFF8
  4012                           tblptrh	equ	0xFF7
  4013                           tblptrl	equ	0xFF6
  4014                           tablat	equ	0xFF5
  4015                           prodh	equ	0xFF4
  4016                           prodl	equ	0xFF3
  4017                           indf0	equ	0xFEF
  4018                           postinc0	equ	0xFEE
  4019                           postdec0	equ	0xFED
  4020                           preinc0	equ	0xFEC
  4021                           plusw0	equ	0xFEB
  4022                           fsr0h	equ	0xFEA
  4023                           fsr0l	equ	0xFE9
  4024                           wreg	equ	0xFE8
  4025                           indf1	equ	0xFE7
  4026                           postinc1	equ	0xFE6
  4027                           postdec1	equ	0xFE5
  4028                           preinc1	equ	0xFE4
  4029                           plusw1	equ	0xFE3
  4030                           fsr1h	equ	0xFE2
  4031                           fsr1l	equ	0xFE1
  4032                           bsr	equ	0xFE0
  4033                           indf2	equ	0xFDF
  4034                           postinc2	equ	0xFDE
  4035                           postdec2	equ	0xFDD
  4036                           preinc2	equ	0xFDC
  4037                           plusw2	equ	0xFDB
  4038                           fsr2h	equ	0xFDA
  4039                           fsr2l	equ	0xFD9
  4040                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         47
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      81
    BANK0           160      0      28
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    L6470_change@dt	PTR unsigned char  size(2) Largest target is 8
		 -> data(COMRAM[8]), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> rxMessage(BANK0[14]), 


Critical Paths under _main in COMRAM

    _main->_can_recieve
    _can_recieve->_ServoOut
    _ServoOut->___aldiv
    ___aldiv->___lmul
    _L6470_command->_L6470_Move
    _L6470_command->_L6470_Run
    _L6470_Stop->_SPI_transfer
    _L6470_Run->_CMD_Send
    _L6470_Move->_CMD_Send
    _L6470_CMD->_SPI_transfer
    _L6470_Init->_L6470_GetRegister
    _L6470_GetRegister->_SPI_transfer
    _CMD_Send->_SPI_transfer
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _InterTimer in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterTimer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterTimer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterTimer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterTimer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterTimer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterTimer in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterTimer in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterTimer in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   18741
                                             46 COMRAM     6     6      0
                        _CAN_receive
                    _ECAN_Initialize
                          _L6470_CMD
                         _L6470_Init
                          _L6470_Run
                         _L6470_Stop
                           _SPI_Init
                           _ServoOut
                               _Wait
                        _can_recieve
 ---------------------------------------------------------------------------------
 (1) _can_recieve                                         14     0     14    8314
                                             32 COMRAM    14     0     14
                      _L6470_command
                           _ServoOut
 ---------------------------------------------------------------------------------
 (2) _ServoOut                                             6     4      2    1095
                                             26 COMRAM     6     4      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _L6470_command                                        2     2      0    6914
                                             23 COMRAM     2     2      0
                          _L6470_CMD
                  _L6470_GetRegister
                         _L6470_Move
                          _L6470_Run
                         _L6470_Stop
                       _L6470_change
 ---------------------------------------------------------------------------------
 (3) _L6470_change                                        15    11      4     419
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (3) _L6470_Stop                                           6     4      2     448
                                              1 COMRAM     6     4      2
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _L6470_Run                                            5     1      4    2747
                                             18 COMRAM     5     1      4
                           _CMD_Send
                       _L6470_change (ARG)
 ---------------------------------------------------------------------------------
 (3) _L6470_Move                                           5     1      4    2519
                                             18 COMRAM     5     1      4
                           _CMD_Send
                       _L6470_change (ARG)
 ---------------------------------------------------------------------------------
 (3) _L6470_CMD                                            2     0      2     348
                                              1 COMRAM     2     0      2
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (1) _Wait                                                 5     3      2     654
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             6     3      3     377
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _L6470_Init                                          13     9      4    2997
                                             20 COMRAM    13     9      4
                           _CMD_Send
                  _L6470_GetRegister
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _L6470_GetRegister                                   19    15      4     433
                                              1 COMRAM    19    15      4
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _CMD_Send                                            17    11      6    2399
                                              1 COMRAM    17    11      6
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _SPI_transfer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Initialize                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    1760
                                             19 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     266
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4     821
                                              0 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _ECAN_Initialize
   _L6470_CMD
     _SPI_transfer
   _L6470_Init
     _CMD_Send
       _SPI_transfer
     _L6470_GetRegister
       _SPI_transfer
     _SPI_transfer
   _L6470_Run
     _CMD_Send
       _SPI_transfer
     _L6470_change (ARG)
   _L6470_Stop
     _SPI_transfer
   _SPI_Init
   _ServoOut
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _Wait
   _can_recieve
     _L6470_command
       _L6470_CMD
         _SPI_transfer
       _L6470_GetRegister
         _SPI_transfer
       _L6470_Move
         _CMD_Send
           _SPI_transfer
         _L6470_change (ARG)
       _L6470_Run
         _CMD_Send
           _SPI_transfer
         _L6470_change (ARG)
       _L6470_Stop
         _SPI_transfer
       _L6470_change
     _ServoOut
       ___aldiv
         ___lmul (ARG)
       ___lmul

 _InterTimer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      1C       5       17.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      51       1       86.2%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6D       6        0.0%
DATA                 0      0      6D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Oct 21 15:45:30 2019

                                      _SSPSTATbits 000FC7                                    SPI_Init@divider 0001  
                                 L6470_CMD@command 0002                           __size_of_ECAN_Initialize 00AE  
                                      __CFG_BORV$3 000000                                       __CFG_CP0$OFF 000000  
                                     __CFG_CP1$OFF 000000                                       __CFG_CP2$OFF 000000  
                                     __CFG_CP3$OFF 000000                                                l256 040A  
                                              l408 0FA2                                                l435 0524  
                                              l428 0B56                                                l383 0100  
                                              l393 0154                                                l394 0174  
                                              l386 010A                                                l803 0FCE  
                                              l387 013E                                                l779 0E3E  
                                     __CFG_CPB$OFF 000000                                       __CFG_CPD$OFF 000000  
                                              u990 0F64                                L6470_Init@step_mode 001B  
                                              _pos 0031                                                prod 000FF3  
                                              wreg 000FE8                         ??_convertReg2StandardCANid 0005  
                            __size_of_SPI_transfer 0010                                               l3001 0902  
                                             l3013 0BA0                                               l3005 0922  
                                             l3103 0518                                               l3033 0C3C  
                                             l3121 0E54                                               l3211 0EEC  
                                             l3045 0340                                               l3303 019C  
                                             l3081 0482                                               l3049 0372  
                                             l3331 0268                                               l3077 0450  
                                             l3069 0404                                               l3341 02A8  
                                             l3245 00BC                                               l3335 027E  
                                             l3247 00D2                                               l2801 0F58  
                                             l2811 0F00                                               l3275 012A  
                                             l3347 02C0                                               l3197 0F90  
                                             l3293 0186                                               l3277 0136  
                                             l2905 09B4                                               l2921 0A02  
                                             l2843 0A72                                               l2835 0A3E  
                                             l2907 09C0                                               l3299 018E  
                                             l2837 0A46                                               l2925 0A18  
                                             l2917 09F4                                               l2775 0B36  
                                             l2855 0AC2                                               l2785 0B60  
                                             l2769 0AF4                                               l2873 0D28  
                                             l2881 0DE8                                               l2795 0B76  
                                             l2859 0F28                                               l2867 0CEE  
                                             l2789 0B6A                                               l2893 097A  
                                             l2877 0DD4                                               l2991 08C0  
                                             l2983 084E                                               l2993 08CE  
                                             l2985 085A                                               l2995 08E4  
                                             l2987 0886                                               l2899 0992  
                                             l2989 08B2                                               u1010 0F0C  
                                             u1030 0FBC                                               u1300 0542  
                                             u1140 09C4                                               u1070 0F34  
                                             u1410 017C                                               u1315 0690  
                                             u1316 0692                                               u1270 0E38  
                                             u1175 0788                                               u1431 01BA  
                                             u1185 0D82                                               u1290 0E4E  
                                             u1527 0F96                                               _WPUB 000F5B  
                                             _Busy 0035                                               _Wait 0F86  
                                             _data 003C                                               _main 0034  
                                             _mode 0039                                               fsr2h 000FDA  
                                             indf2 000FDF                                               fsr1l 000FE1  
                                             fsr2l 000FD9                                               btemp 004E  
                                             prodl 000FF3                                               start 0030  
                                    __CFG_IESO$OFF 000000                                      __CFG_MCLRE$ON 000000  
                                     ___param_bank 000000                                   __end_of_CMD_Send 0B9C  
                                __end_of_L6470_CMD 0FC8                                  __end_of_L6470_Run 0F86  
                             __size_of_can_recieve 0046                                              ?_Wait 0001  
                                  __end_of___aldiv 0A2A                                              ?_main 0001  
                                            _T1CON 000FCD                                              _T3CON 000FB1  
                                            i2l872 0012                                              i2l874 002C  
                                     _SPI_transfer 0FC8                                              _TMR1H 000FCF  
                                            _TMR3H 000FB3                                              _TMR1L 000FCE  
                                            _TMR3L 000FB2                                              _PORTA 000F80  
                                            _PORTB 000F81                                              _PORTC 000F82  
                                            _TRISA 000F92                                              _TRISB 000F93  
                                            _TRISC 000F94                                      __CFG_WRT0$OFF 000000  
                                    __CFG_WRT1$OFF 000000                                      __CFG_WRT2$OFF 000000  
                              ___lmul@multiplicand 0005                                      __CFG_WRT3$OFF 000000  
                               L6470_GetRegister@i 000E                                              Wait@i 0004  
                                   __CFG_EBTR0$OFF 000000                                     __CFG_FCMEN$OFF 000000  
                                   __CFG_EBTR1$OFF 000000                              CAN_receive@tempCanMsg 0014  
                                   __CFG_EBTR2$OFF 000000                                     __CFG_EBTR3$OFF 000000  
                                    __CFG_WRTB$OFF 000000                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                                     __CFG_EBTRB$OFF 000000  
                                 __end_of_SPI_Init 0E64                                              tablat 000FF5  
                                            plusw0 000FEB                                              plusw2 000FDB  
                                            ttemp5 004F                                              ttemp6 0052  
                                            ttemp7 0056                convertReg2ExtendedCANid@ConvertedID 0010  
                                            status 000FD8                                              wtemp8 004F  
                                     ??_L6470_Init 0019                                       ??_L6470_Move 0017  
                                     ??_L6470_Stop 0004                                       SPI_Init@mode 0006  
                                     SPI_Init@stat 0004                                    __initialization 0E64  
                             __size_of_CAN_receive 0224                                       __end_of_Wait 0FB0  
                                     __end_of_main 02F8                                             ??_Wait 0003  
                                           ??_main 002F                                         _InterTimer 0008  
                                    __activetblptr 000002                                     __CFG_RETEN$OFF 000000  
                                 __end_of_ServoOut 0CD4                                 __end_of_L6470_Init 0714  
                               __end_of_L6470_Move 0F56                                  ??_ECAN_Initialize 0001  
                               __end_of_L6470_Stop 0F24                                             _CANCON 000F6F  
                                           _ANCON0 000F5D                                             _ANCON1 000F5C  
                                           _CIOCON 000F70                                    __CFG_BBSIZ$BB2K 000000  
                                           _OSCCON 000FD3                                             _RXB0D0 000F66  
                                           _RXB0D1 000F67                                             _RXB0D2 000F68  
                                           _RXB0D3 000F69                                             _RXB0D4 000F6A  
                                           _RXB1D0 000F36                                             _RXB0D5 000F6B  
                                           _RXB1D1 000F37                                             _RXB0D6 000F6C  
                                           _RXB1D2 000F38                                             _RXB0D7 000F6D  
                                           _RXB1D3 000F39                                             _RXB1D4 000F3A  
                                           _RXB1D5 000F3B                                             _RXB1D6 000F3C  
                                           _RXB1D7 000F3D                                             _TXB0D0 000F26  
                                           _TXB0D1 000F27                                             _TXB0D2 000F28  
                                           _TXB0D3 000F29                                             _TXB0D4 000F2A  
                                           _TXB1D0 000F16                                             _TXB0D5 000F2B  
                                           _TXB1D1 000F17                                             _TXB0D6 000F2C  
                                           _TXB1D2 000F18                                             _TXB0D7 000F2D  
                                           _TXB1D3 000F19                                             _TXB1D4 000F1A  
                                           _TXB2D0 000F06                                             _TXB1D5 000F1B  
                                           _TXB2D1 000F07                                             _TXB1D6 000F1C  
                                           _TXB2D2 000F08                                             _TXB1D7 000F1D  
                                           _TXB2D3 000F09                                             _TXB2D4 000F0A  
                                           _TXB2D5 000F0B                                             _TXB2D6 000F0C  
                                           _TXB2D7 000F0D                                             _SSPADD 000FC8  
                                           _SSPBUF 000FC9                                             _T1time 004C  
                              L6470_GetRegister@dt 000A                                     __CFG_XINST$OFF 000000  
                                           ___lmul 0DC4                                          ??___aldiv 0015  
                                   __CFG_STVREN$ON 000000                                             clear_0 0E8A  
                                           clear_1 0E96                                       __pdataCOMRAM 0044  
                 __end_of_convertReg2StandardCANid 0DC4                                             tblptrh 000FF7  
                                           tblptrl 000FF6                                             tblptru 000FF8  
                                        CMD_Send@i 0011                                          ?_CMD_Send 0002  
                                       __accesstop 0060                            __end_of__initialization 0E9C  
                         _convertReg2ExtendedCANid 0714                             CAN_receive@returnValue 0016  
                                    ___rparam_used 000001                                     __pcstackCOMRAM 0001  
                                   SPI_transfer@dt 0001                                          ?_SPI_Init 0001  
                         L6470_GetRegister@regadrs 0010                                        ?_InterTimer 0001  
            convertReg2StandardCANid@tempRXBn_SIDH 0007              convertReg2StandardCANid@tempRXBn_SIDL 0001  
                                       ??_CMD_Send 0008                                         __pbssBANK0 0060  
                                  __CFG_PLLCFG$OFF 000000                                         __pnvCOMRAM 004C  
                                        ?_ServoOut 001B                                            ?___lmul 0001  
                            __end_of_L6470_command 095E                                            _ECANCON 000F72  
                                   ___lmul@product 0009                                            _CANSTAT 000F6E  
                                       ??_SPI_Init 0004                                            _BRGCON1 000E43  
                                          _BRGCON2 000E44                                            _BRGCON3 000E45  
                                        _L6470_CMD 0FB0                                   __CFG_CANMX$PORTB 000000  
                                        _L6470_Run 0F56                                  _L6470_GetRegister 0A2A  
                                          _RXB0DLC 000F65                                            _RXB1DLC 000F35  
                                          _TXB0DLC 000F25                                            _TXB1DLC 000F15  
                                          _TXB2DLC 000F05                                 ?_L6470_GetRegister 0002  
                                          _SSPCON1 000FC6                                            _SSPSTAT 000FC7  
                              ??_L6470_GetRegister 0006                                __size_of_InterTimer 0028  
                             L6470_GetRegister@ans 0011                               L6470_GetRegister@num 0002  
                                  __CFG_PWRTEN$OFF 000000                                            Wait@num 0001  
                                          __Hparam 0000                                            __Lparam 0000  
                __size_of_convertReg2StandardCANid 0076                          ?_convertReg2StandardCANid 0001  
                                       ??_ServoOut 001D                                      ??_can_recieve 002F  
                                          ___aldiv 095E                                    __size_of___lmul 0056  
                                  _ECAN_Initialize 0B9C                                            __pcinit 0E64  
                                          __ramtop 0F00                                            __ptext0 0034  
                                          __ptext1 0EAA                                            __ptext2 0C4A  
                                          __ptext3 0DC4                                            __ptext4 095E  
                                          __ptext5 084C                                            __ptext6 0CD4  
                                          __ptext7 0EF0                                            __ptext8 0F56  
                                          __ptext9 0F24                          __end_of_L6470_GetRegister 0AE8  
                                        _T1CONbits 000FCD                                         ?_L6470_CMD 0002  
                                        _T3CONbits 000FB1                                         ?_L6470_Run 0013  
                                 ___aldiv@dividend 000D                                  __CFG_MSSPMSK$MSK7 000000  
                                    ?_L6470_change 0001                               end_of_initialization 0E9C  
                                    __Lmediumconst 0000                                      ??_CAN_receive 0016  
                                      L6470_Init@i 0020                                         CMD_Send@dt 000C  
                                 ___aldiv@quotient 0017                                            postdec1 000FE5  
                                          postdec2 000FDD                                            postinc0 000FEE  
                                          postinc2 000FDE                                         _servo_Flag 003B  
                                        _PORTAbits 000F80                                          _PORTBbits 000F81  
                                        _PORTCbits 000F82                                __end_of_can_recieve 0EF0  
                                 __CFG_FOSC$INTIO2 000000                                     ??_L6470_change 0005  
                                  L6470_change@val 000C                                    L6470_change@num 0003  
                       ??_convertReg2ExtendedCANid 0005                                  __size_of_CMD_Send 00B4  
                             can_recieve@rxMessage 0021                            __end_of_ECAN_Initialize 0C4A  
                              __end_of_CAN_receive 051C                                     __end_of___lmul 0E1A  
                                    __pidataCOMRAM 0FD8                                       ??_InterTimer 0001  
                       __size_of_L6470_GetRegister 00BE                                        ??_L6470_CMD 0004  
                                __size_of_SPI_Init 004A                                        ??_L6470_Run 0017  
                              start_initialization 0E64                                        SPI_Init@con 0005  
                                      SPI_Init@sdo 0002                convertReg2StandardCANid@returnValue 0008  
                               __end_of_InterTimer 0030                                           ??___lmul 0009  
                                      _can_recieve 0EAA                                  __size_of_ServoOut 008A  
                                 L6470_Init@config 0019                                      ?_SPI_transfer 0001  
                                      __pbssCOMRAM 0031                                        _CAN_receive 02F8  
                                 ?_ECAN_Initialize 0001                               __end_of_L6470_change 0D4E  
                                    ServoOut@angle 001B                                          __pintcode 0008  
                                    ServoOut@value 001D                                           ?___aldiv 000D  
                                        _direction 0037                                     L6470_Move@step 0013  
                                   ??_SPI_transfer 0001                                        _COMSTATbits 000F71  
                                   L6470_Run@speed 0013                   __end_of_convertReg2ExtendedCANid 084C  
                           __size_of_L6470_command 0112                                           _CMD_Send 0AE8  
                                   L6470_Stop@mode 0002                                    ___aldiv@divisor 0011  
                                  ___aldiv@counter 0015                                         _L6470_Init 051C  
                                       _L6470_Move 0F24                                         _L6470_Stop 0EF0  
                                         _PIE1bits 000F9D                                           _PIE2bits 000FA0  
                                         _PIE5bits 000F76                                           _PIR1bits 000F9E  
                                         _PIR2bits 000FA1                                           _PIR5bits 000F77  
                                        _rxMessage 006E                                           _RXB0EIDH 000F63  
                                         _RXB0EIDL 000F64                                           _RXB1EIDH 000F33  
                                         _RXB1EIDL 000F34                                           _RXB0SIDH 000F61  
                                         _RXB0SIDL 000F62                                           _RXB1SIDH 000F31  
                                         _RXF0EIDH 000EE2                                           _RXB1SIDL 000F32  
                                         _RXF0EIDL 000EE3                                           _RXF1EIDH 000EE6  
                                         _RXF1EIDL 000EE7                                           _RXF2EIDH 000EEA  
                                         _RXF2EIDL 000EEB                                           _RXF3EIDH 000EEE  
                                         _RXF3EIDL 000EEF                                           _RXF4EIDH 000EF2  
                                         _RXF4EIDL 000EF3                                           _RXF5EIDH 000EF6  
                                         _RXF5EIDL 000EF7                                           _RXF0SIDH 000EE0  
                                         _RXF0SIDL 000EE1                                           _TXB0EIDH 000F23  
                                         _RXF1SIDH 000EE4                                           _TXB0EIDL 000F24  
                                         _RXF1SIDL 000EE5                                           _TXB1EIDH 000F13  
                                         _RXF2SIDH 000EE8                                           _TXB1EIDL 000F14  
                                         _RXF2SIDL 000EE9                                           _TXB2EIDH 000F03  
                                         _RXF3SIDH 000EEC                                           _TXB2EIDL 000F04  
                                         _RXF3SIDL 000EED                                           _RXF4SIDH 000EF0  
                                         _RXF4SIDL 000EF1                                           _RXF5SIDH 000EF4  
                                         _RXF5SIDL 000EF5                                           _RXM0EIDH 000EFA  
                                         _RXM0EIDL 000EFB                                           _TXB0SIDH 000F21  
                                         _RXM1EIDH 000EFE                                           _TXB0SIDL 000F22  
                                         _RXM1EIDL 000EFF                                           _TXB1SIDH 000F11  
                                         _TXB1SIDL 000F12                                           _TXB2SIDH 000F01  
                                         _TXB2SIDL 000F02                                          _txMessage 0060  
                                         _RXM0SIDH 000EF8                                           _RXM0SIDL 000EF9  
                                         _RXM1SIDH 000EFC                                           _RXM1SIDL 000EFD  
                                   L6470_change@dt 0001                                           _SPI_Init 0E1A  
                                 __CFG_SOSCSEL$DIG 000000                                  ___lmul@multiplier 0001  
                                      _INTCON2bits 000FF1                                          copy_data0 0E78  
                         _convertReg2StandardCANid 0D4E              convertReg2ExtendedCANid@tempRXBn_EIDH 0009  
            convertReg2ExtendedCANid@tempRXBn_EIDL 0001              convertReg2ExtendedCANid@tempRXBn_SIDH 0002  
            convertReg2ExtendedCANid@tempRXBn_SIDL 0003                                           __Hrparam 0000  
                                         __Lrparam 0000                                 __CFG_BOREN$SBORDIS 000000  
                                         _ServoOut 0C4A                                      _L6470_command 084C  
                                 L6470_Stop@F12231 0044                                   __size_of___aldiv 00CC  
convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 000F  convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 000E  
                                    L6470_Init@val 001C                                           __ptext10 0FB0  
                                         __ptext11 0F86                                           __ptext20 0714  
                                         __ptext12 0E1A                                           __ptext13 051C  
                                         __ptext14 0A2A                                           __ptext15 0AE8  
                                         __ptext16 0FC8                                           __ptext17 0B9C  
                                         __ptext18 02F8                                           __ptext19 0D4E  
                                    L6470_Move@dir 0017                convertReg2StandardCANid@ConvertedID 000C  
                                    __size_of_Wait 002A                              __size_of_L6470_change 007A  
                                    __size_of_main 02C4                                        ?_L6470_Init 0015  
                                      ?_L6470_Move 0013                               __end_of_SPI_transfer 0FD8  
                                    L6470_Stop@cmd 0004                                        ?_L6470_Stop 0002  
              convertReg2ExtendedCANid@returnValue 000A                  __size_of_convertReg2ExtendedCANid 0138  
                        ?_convertReg2ExtendedCANid 0001                                     ?_L6470_command 0001  
                                     ?_can_recieve 0021                                           int$flags 004E  
                                    L6470_change@i 000A                                __CFG_INTOSCSEL$HIGH 000000  
                                      _RXB0CONbits 000F60                                        _RXB1CONbits 000F30  
                               __CFG_WDTEN$SWDTDIS 000000                                         _INTCONbits 000FF2  
                                     _L6470_change 0CD4                                           intlevel2 0000  
                                     L6470_Run@dir 0017                                        _TXB0CONbits 000F20  
                                     ?_CAN_receive 0014                                        _TXB1CONbits 000F10  
                                      _TXB2CONbits 000F00                                        CMD_Send@cmd 0010  
                                      CMD_Send@val 0002                                        CMD_Send@num 0006  
                               __CFG_WDTPS$1048576 000000                                __size_of_L6470_Init 01F8  
                              __size_of_L6470_Move 0032                                __size_of_L6470_Stop 0034  
                                      _servo_Angle 0048                                       ___aldiv@sign 0016  
                               __size_of_L6470_CMD 0018                                 __size_of_L6470_Run 0030  
                              __CFG_BORPWR$ZPBORMV 000000                                    ??_L6470_command 0018  
