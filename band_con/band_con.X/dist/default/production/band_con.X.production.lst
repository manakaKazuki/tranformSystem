

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Jul 04 17:19:13 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           ; Version 2.05
    39                           ; Generated 20/12/2018 GMT
    40                           ; 
    41                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F26K80 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  000F30                     __pidataCOMRAM:
    75                           	opt callstack 0
    76                           
    77                           ;initializer for L6470_Stop@F12231
    78  000F30  B0                 	db	176
    79  000F31  B8                 	db	184
    80  000F32  A0                 	db	160
    81  000F33  A8                 	db	168
    82                           
    83                           ;initializer for _servo_Angle
    84  000F34  003C               	dw	60
    85  000F36  0078               	dw	120
    86                           
    87                           	psect	nvCOMRAM
    88  000054                     __pnvCOMRAM:
    89                           	opt callstack 0
    90  000054                     _T1time:
    91                           	opt callstack 0
    92  000054                     	ds	2
    93  0000                     _BRGCON3	set	3653
    94  0000                     _BRGCON2	set	3652
    95  0000                     _BRGCON1	set	3651
    96  0000                     _RXF5SIDL	set	3829
    97  0000                     _RXF5SIDH	set	3828
    98  0000                     _RXF5EIDL	set	3831
    99  0000                     _RXF5EIDH	set	3830
   100  0000                     _RXF4SIDL	set	3825
   101  0000                     _RXF4SIDH	set	3824
   102  0000                     _RXF4EIDL	set	3827
   103  0000                     _RXF4EIDH	set	3826
   104  0000                     _RXF3SIDL	set	3821
   105  0000                     _RXF3SIDH	set	3820
   106  0000                     _RXF3EIDL	set	3823
   107  0000                     _RXF3EIDH	set	3822
   108  0000                     _RXF2SIDL	set	3817
   109  0000                     _RXF2SIDH	set	3816
   110  0000                     _RXF2EIDL	set	3819
   111  0000                     _RXF2EIDH	set	3818
   112  0000                     _RXF1SIDL	set	3813
   113  0000                     _RXF1SIDH	set	3812
   114  0000                     _RXF1EIDL	set	3815
   115  0000                     _RXF1EIDH	set	3814
   116  0000                     _RXF0SIDL	set	3809
   117  0000                     _RXF0SIDH	set	3808
   118  0000                     _RXF0EIDL	set	3811
   119  0000                     _RXF0EIDH	set	3810
   120  0000                     _RXM1SIDL	set	3837
   121  0000                     _RXM1SIDH	set	3836
   122  0000                     _RXM1EIDL	set	3839
   123  0000                     _RXM1EIDH	set	3838
   124  0000                     _RXM0SIDL	set	3833
   125  0000                     _RXM0SIDH	set	3832
   126  0000                     _RXM0EIDL	set	3835
   127  0000                     _RXM0EIDH	set	3834
   128  0000                     _ANCON1	set	3932
   129  0000                     _ANCON0	set	3933
   130  0000                     _WPUB	set	3931
   131  0000                     _RXB1D7	set	3901
   132  0000                     _RXB1D6	set	3900
   133  0000                     _RXB1D5	set	3899
   134  0000                     _RXB1D4	set	3898
   135  0000                     _RXB1D3	set	3897
   136  0000                     _RXB1D2	set	3896
   137  0000                     _RXB1D1	set	3895
   138  0000                     _RXB1D0	set	3894
   139  0000                     _RXB1DLC	set	3893
   140  0000                     _RXB1SIDH	set	3889
   141  0000                     _RXB1EIDL	set	3892
   142  0000                     _RXB1EIDH	set	3891
   143  0000                     _RXB1SIDL	set	3890
   144  0000                     _RXB1CONbits	set	3888
   145  0000                     _TXB2D7	set	3853
   146  0000                     _TXB2D6	set	3852
   147  0000                     _TXB2D5	set	3851
   148  0000                     _TXB2D4	set	3850
   149  0000                     _TXB2D3	set	3849
   150  0000                     _TXB2D2	set	3848
   151  0000                     _TXB2D1	set	3847
   152  0000                     _TXB2D0	set	3846
   153  0000                     _TXB2DLC	set	3845
   154  0000                     _TXB2SIDL	set	3842
   155  0000                     _TXB2SIDH	set	3841
   156  0000                     _TXB2EIDL	set	3844
   157  0000                     _TXB2EIDH	set	3843
   158  0000                     _TXB2CONbits	set	3840
   159  0000                     _TXB1D7	set	3869
   160  0000                     _TXB1D6	set	3868
   161  0000                     _TXB1D5	set	3867
   162  0000                     _TXB1D4	set	3866
   163  0000                     _TXB1D3	set	3865
   164  0000                     _TXB1D2	set	3864
   165  0000                     _TXB1D1	set	3863
   166  0000                     _TXB1D0	set	3862
   167  0000                     _TXB1DLC	set	3861
   168  0000                     _TXB1SIDL	set	3858
   169  0000                     _TXB1SIDH	set	3857
   170  0000                     _TXB1EIDL	set	3860
   171  0000                     _TXB1EIDH	set	3859
   172  0000                     _TXB1CONbits	set	3856
   173  0000                     _TXB0D7	set	3885
   174  0000                     _TXB0D6	set	3884
   175  0000                     _TXB0D5	set	3883
   176  0000                     _TXB0D4	set	3882
   177  0000                     _TXB0D3	set	3881
   178  0000                     _TXB0D2	set	3880
   179  0000                     _TXB0D1	set	3879
   180  0000                     _TXB0D0	set	3878
   181  0000                     _TXB0DLC	set	3877
   182  0000                     _TXB0SIDL	set	3874
   183  0000                     _TXB0SIDH	set	3873
   184  0000                     _TXB0EIDL	set	3876
   185  0000                     _TXB0EIDH	set	3875
   186  0000                     _TXB0CONbits	set	3872
   187  0000                     _TMR1L	set	4046
   188  0000                     _TMR1H	set	4047
   189  0000                     _TMR3L	set	4018
   190  0000                     _TMR3H	set	4019
   191  0000                     _SSPADD	set	4040
   192  0000                     _SSPSTAT	set	4039
   193  0000                     _SSPCON1	set	4038
   194  0000                     _SSPSTATbits	set	4039
   195  0000                     _SSPBUF	set	4041
   196  0000                     _PORTAbits	set	3968
   197  0000                     _PORTCbits	set	3970
   198  0000                     _PORTBbits	set	3969
   199  0000                     _T3CONbits	set	4017
   200  0000                     _T1CONbits	set	4045
   201  0000                     _INTCONbits	set	4082
   202  0000                     _PIE2bits	set	4000
   203  0000                     _PIR2bits	set	4001
   204  0000                     _PIE1bits	set	3997
   205  0000                     _PIR1bits	set	3998
   206  0000                     _T3CON	set	4017
   207  0000                     _T1CON	set	4045
   208  0000                     _PORTC	set	3970
   209  0000                     _PORTB	set	3969
   210  0000                     _PORTA	set	3968
   211  0000                     _TRISC	set	3988
   212  0000                     _TRISB	set	3987
   213  0000                     _TRISA	set	3986
   214  0000                     _INTCON2bits	set	4081
   215  0000                     _OSCCON	set	4051
   216  0000                     _COMSTATbits	set	3953
   217  0000                     _RXB0D7	set	3949
   218  0000                     _RXB0D6	set	3948
   219  0000                     _RXB0D5	set	3947
   220  0000                     _RXB0D4	set	3946
   221  0000                     _RXB0D3	set	3945
   222  0000                     _RXB0D2	set	3944
   223  0000                     _RXB0D1	set	3943
   224  0000                     _RXB0D0	set	3942
   225  0000                     _RXB0DLC	set	3941
   226  0000                     _RXB0SIDH	set	3937
   227  0000                     _RXB0EIDL	set	3940
   228  0000                     _RXB0EIDH	set	3939
   229  0000                     _RXB0SIDL	set	3938
   230  0000                     _PIE5bits	set	3958
   231  0000                     _PIR5bits	set	3959
   232  0000                     _RXB0CONbits	set	3936
   233  0000                     _CIOCON	set	3952
   234  0000                     _ECANCON	set	3954
   235  0000                     _CANSTAT	set	3950
   236  0000                     _CANCON	set	3951
   237                           
   238                           ; #config settings
   239  0000                     
   240                           	psect	cinit
   241  000E02                     __pcinit:
   242                           	opt callstack 0
   243  000E02                     start_initialization:
   244                           	opt callstack 0
   245  000E02                     __initialization:
   246                           	opt callstack 0
   247                           
   248                           ; Initialize objects allocated to COMRAM (8 bytes)
   249                           ; load TBLPTR registers with __pidataCOMRAM
   250  000E02  0E30               	movlw	low __pidataCOMRAM
   251  000E04  6EF6               	movwf	tblptrl,c
   252  000E06  0E0F               	movlw	high __pidataCOMRAM
   253  000E08  6EF7               	movwf	tblptrh,c
   254  000E0A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   255  000E0C  6EF8               	movwf	tblptru,c
   256  000E0E  EE00  F04C         	lfsr	0,__pdataCOMRAM
   257  000E12  EE10 F008          	lfsr	1,8
   258  000E16                     copy_data0:
   259  000E16  0009               	tblrd		*+
   260  000E18  CFF5 FFEE          	movff	tablat,postinc0
   261  000E1C  50E5               	movf	postdec1,w,c
   262  000E1E  50E1               	movf	fsr1l,w,c
   263  000E20  E1FA               	bnz	copy_data0
   264                           
   265                           ; Clear objects allocated to BANK0 (14 bytes)
   266  000E22  EE00  F060         	lfsr	0,__pbssBANK0
   267  000E26  0E0E               	movlw	14
   268  000E28                     clear_0:
   269  000E28  6AEE               	clrf	postinc0,c
   270  000E2A  06E8               	decf	wreg,f,c
   271  000E2C  E1FD               	bnz	clear_0
   272                           
   273                           ; Clear objects allocated to COMRAM (27 bytes)
   274  000E2E  EE00  F031         	lfsr	0,__pbssCOMRAM
   275  000E32  0E1B               	movlw	27
   276  000E34                     clear_1:
   277  000E34  6AEE               	clrf	postinc0,c
   278  000E36  06E8               	decf	wreg,f,c
   279  000E38  E1FD               	bnz	clear_1
   280  000E3A                     end_of_initialization:
   281                           	opt callstack 0
   282  000E3A                     __end_of__initialization:
   283                           	opt callstack 0
   284  000E3A  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   285  000E3C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   286  000E3E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   287  000E40  6EF8               	movwf	tblptru,c
   288  000E42  0100               	movlb	0
   289  000E44  EF1A  F000         	goto	_main	;jump to C main() function
   290                           
   291                           	psect	bssCOMRAM
   292  000031                     __pbssCOMRAM:
   293                           	opt callstack 0
   294  000031                     _txMessage:
   295                           	opt callstack 0
   296  000031                     	ds	14
   297  00003F                     _Busy:
   298                           	opt callstack 0
   299  00003F                     	ds	2
   300  000041                     _arm_mode_flag:
   301                           	opt callstack 0
   302  000041                     	ds	2
   303  000043                     _servo_Flag:
   304                           	opt callstack 0
   305  000043                     	ds	1
   306  000044                     _data:
   307                           	opt callstack 0
   308  000044                     	ds	8
   309                           
   310                           	psect	dataCOMRAM
   311  00004C                     __pdataCOMRAM:
   312                           	opt callstack 0
   313  00004C                     L6470_Stop@F12231:
   314                           	opt callstack 0
   315  00004C                     	ds	4
   316  000050                     _servo_Angle:
   317                           	opt callstack 0
   318  000050                     	ds	4
   319                           
   320                           	psect	bssBANK0
   321  000060                     __pbssBANK0:
   322                           	opt callstack 0
   323  000060                     _rxMessage:
   324                           	opt callstack 0
   325  000060                     	ds	14
   326                           
   327                           	psect	cstackCOMRAM
   328  000001                     __pcstackCOMRAM:
   329                           	opt callstack 0
   330  000001                     ??_ECAN_Initialize:
   331  000001                     ?_convertReg2ExtendedCANid:
   332                           	opt callstack 0
   333  000001                     ?_convertReg2StandardCANid:
   334                           	opt callstack 0
   335  000001                     ?_L6470_change:
   336                           	opt callstack 0
   337  000001                     ?___lmul:
   338                           	opt callstack 0
   339  000001                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   340                           	opt callstack 0
   341  000001                     convertReg2StandardCANid@tempRXBn_SIDL:
   342                           	opt callstack 0
   343  000001                     SPI_Init@divider:
   344                           	opt callstack 0
   345  000001                     SPI_transfer@dt:
   346                           	opt callstack 0
   347  000001                     Wait@num:
   348                           	opt callstack 0
   349  000001                     L6470_change@dt:
   350                           	opt callstack 0
   351  000001                     ___lmul@multiplier:
   352                           	opt callstack 0
   353                           
   354                           ; 4 bytes @ 0x0
   355  000001                     	ds	1
   356  000002                     ?_L6470_GetRegister:
   357                           	opt callstack 0
   358  000002                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   359                           	opt callstack 0
   360  000002                     L6470_GetRegister@num:
   361                           	opt callstack 0
   362  000002                     L6470_Stop@mode:
   363                           	opt callstack 0
   364  000002                     L6470_CMD@command:
   365                           	opt callstack 0
   366  000002                     SPI_Init@sdo:
   367                           	opt callstack 0
   368  000002                     CMD_Send@val:
   369                           	opt callstack 0
   370                           
   371                           ; 4 bytes @ 0x1
   372  000002                     	ds	1
   373  000003                     ??_Wait:
   374  000003                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   375                           	opt callstack 0
   376  000003                     L6470_change@num:
   377                           	opt callstack 0
   378                           
   379                           ; 2 bytes @ 0x2
   380  000003                     	ds	1
   381  000004                     SPI_Init@stat:
   382                           	opt callstack 0
   383  000004                     Wait@i:
   384                           	opt callstack 0
   385  000004                     L6470_Stop@cmd:
   386                           	opt callstack 0
   387                           
   388                           ; 4 bytes @ 0x3
   389  000004                     	ds	1
   390  000005                     ??_convertReg2ExtendedCANid:
   391  000005                     ??_convertReg2StandardCANid:
   392  000005                     ??_L6470_change:
   393  000005                     SPI_Init@con:
   394                           	opt callstack 0
   395  000005                     ___lmul@multiplicand:
   396                           	opt callstack 0
   397                           
   398                           ; 4 bytes @ 0x4
   399  000005                     	ds	1
   400  000006                     ??_L6470_GetRegister:
   401  000006                     SPI_Init@mode:
   402                           	opt callstack 0
   403  000006                     CMD_Send@num:
   404                           	opt callstack 0
   405                           
   406                           ; 2 bytes @ 0x5
   407  000006                     	ds	1
   408  000007                     convertReg2StandardCANid@tempRXBn_SIDH:
   409                           	opt callstack 0
   410                           
   411                           ; 1 bytes @ 0x6
   412  000007                     	ds	1
   413  000008                     ??_CMD_Send:
   414  000008                     convertReg2StandardCANid@returnValue:
   415                           	opt callstack 0
   416                           
   417                           ; 4 bytes @ 0x7
   418  000008                     	ds	1
   419  000009                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   420                           	opt callstack 0
   421  000009                     ___lmul@product:
   422                           	opt callstack 0
   423                           
   424                           ; 4 bytes @ 0x8
   425  000009                     	ds	1
   426  00000A                     L6470_change@i:
   427                           	opt callstack 0
   428  00000A                     convertReg2ExtendedCANid@returnValue:
   429                           	opt callstack 0
   430  00000A                     L6470_GetRegister@dt:
   431                           	opt callstack 0
   432                           
   433                           ; 4 bytes @ 0x9
   434  00000A                     	ds	2
   435  00000C                     convertReg2StandardCANid@ConvertedID:
   436                           	opt callstack 0
   437  00000C                     CMD_Send@dt:
   438                           	opt callstack 0
   439  00000C                     L6470_change@val:
   440                           	opt callstack 0
   441                           
   442                           ; 4 bytes @ 0xB
   443  00000C                     	ds	1
   444  00000D                     ?___aldiv:
   445                           	opt callstack 0
   446  00000D                     ___aldiv@dividend:
   447                           	opt callstack 0
   448                           
   449                           ; 4 bytes @ 0xC
   450  00000D                     	ds	1
   451  00000E                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   452                           	opt callstack 0
   453  00000E                     L6470_GetRegister@i:
   454                           	opt callstack 0
   455                           
   456                           ; 2 bytes @ 0xD
   457  00000E                     	ds	1
   458  00000F                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   459                           	opt callstack 0
   460                           
   461                           ; 1 bytes @ 0xE
   462  00000F                     	ds	1
   463  000010                     CMD_Send@cmd:
   464                           	opt callstack 0
   465  000010                     L6470_GetRegister@regadrs:
   466                           	opt callstack 0
   467  000010                     convertReg2ExtendedCANid@ConvertedID:
   468                           	opt callstack 0
   469                           
   470                           ; 4 bytes @ 0xF
   471  000010                     	ds	1
   472  000011                     CMD_Send@i:
   473                           	opt callstack 0
   474  000011                     L6470_GetRegister@ans:
   475                           	opt callstack 0
   476  000011                     ___aldiv@divisor:
   477                           	opt callstack 0
   478                           
   479                           ; 4 bytes @ 0x10
   480  000011                     	ds	2
   481  000013                     L6470_Run@speed:
   482                           	opt callstack 0
   483  000013                     L6470_Move@step:
   484                           	opt callstack 0
   485                           
   486                           ; 4 bytes @ 0x12
   487  000013                     	ds	1
   488  000014                     CAN_receive@tempCanMsg:
   489                           	opt callstack 0
   490                           
   491                           ; 2 bytes @ 0x13
   492  000014                     	ds	1
   493  000015                     ?_L6470_Init:
   494                           	opt callstack 0
   495  000015                     ___aldiv@counter:
   496                           	opt callstack 0
   497                           
   498                           ; 1 bytes @ 0x14
   499  000015                     	ds	1
   500  000016                     CAN_receive@returnValue:
   501                           	opt callstack 0
   502  000016                     ___aldiv@sign:
   503                           	opt callstack 0
   504                           
   505                           ; 1 bytes @ 0x15
   506  000016                     	ds	1
   507  000017                     L6470_Run@dir:
   508                           	opt callstack 0
   509  000017                     L6470_Move@dir:
   510                           	opt callstack 0
   511  000017                     ___aldiv@quotient:
   512                           	opt callstack 0
   513                           
   514                           ; 4 bytes @ 0x16
   515  000017                     	ds	1
   516  000018                     ??_L6470_command:
   517                           
   518                           ; 1 bytes @ 0x17
   519  000018                     	ds	1
   520  000019                     L6470_Init@config:
   521                           	opt callstack 0
   522                           
   523                           ; 2 bytes @ 0x18
   524  000019                     	ds	2
   525  00001B                     L6470_Init@step_mode:
   526                           	opt callstack 0
   527  00001B                     ServoOut@angle:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x1A
   531  00001B                     	ds	1
   532  00001C                     L6470_Init@val:
   533                           	opt callstack 0
   534                           
   535                           ; 4 bytes @ 0x1B
   536  00001C                     	ds	1
   537  00001D                     ServoOut@value:
   538                           	opt callstack 0
   539                           
   540                           ; 4 bytes @ 0x1C
   541  00001D                     	ds	3
   542  000020                     L6470_Init@i:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x1F
   546  000020                     	ds	1
   547  000021                     can_recieve@rxMessage:
   548                           	opt callstack 0
   549                           
   550                           ; 14 bytes @ 0x20
   551  000021                     	ds	14
   552  00002F                     ??_main:
   553                           
   554                           ; 1 bytes @ 0x2E
   555  00002F                     	ds	2
   556                           
   557 ;;
   558 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   559 ;;
   560 ;; *************** function _main *****************
   561 ;; Defined at:
   562 ;;		line 109 in file "main.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  ans             4    0        unsigned long 
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   577 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   578 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   579 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   580 ;;Total ram usage:        6 bytes
   581 ;; Hardware stack levels required when called:    6
   582 ;; This function calls:
   583 ;;		_CAN_receive
   584 ;;		_ECAN_Initialize
   585 ;;		_L6470_CMD
   586 ;;		_L6470_Init
   587 ;;		_L6470_Run
   588 ;;		_L6470_Stop
   589 ;;		_SPI_Init
   590 ;;		_ServoOut
   591 ;;		_Wait
   592 ;;		_can_recieve
   593 ;; This function is called by:
   594 ;;		Startup code after reset
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           	psect	text0
   599  000034                     __ptext0:
   600                           	opt callstack 0
   601  000034                     _main:
   602                           	opt callstack 25
   603                           
   604                           ;main.c: 111:     unsigned long ans ;;main.c: 113:     OSCCON = 0b01110010;
   605                           
   606                           ;incstack = 0
   607  000034  0E72               	movlw	114
   608  000036  6ED3               	movwf	4051,c	;volatile
   609                           
   610                           ;main.c: 114:     INTCON2bits.RBPU = 0;
   611  000038  9EF1               	bcf	4081,7,c	;volatile
   612                           
   613                           ;main.c: 115:     WPUB = 0b00100010;
   614  00003A  0E22               	movlw	34
   615  00003C  010F               	movlb	15	; () banked
   616  00003E  6F5B               	movwf	91,b	;volatile
   617                           
   618                           ;main.c: 116:     ANCON0 = 0b00000000;
   619  000040  0E00               	movlw	0
   620  000042  6F5D               	movwf	93,b	;volatile
   621                           
   622                           ;main.c: 117:     ANCON1 = 0b00000000;
   623  000044  0E00               	movlw	0
   624  000046  6F5C               	movwf	92,b	;volatile
   625                           
   626                           ;main.c: 118:     TRISA = 0b11000000;
   627  000048  0EC0               	movlw	192
   628  00004A  6E92               	movwf	3986,c	;volatile
   629                           
   630                           ;main.c: 119:     TRISB = 0b00101010;
   631  00004C  0E2A               	movlw	42
   632  00004E  6E93               	movwf	3987,c	;volatile
   633                           
   634                           ;main.c: 120:     TRISC = 0b00010001;
   635  000050  0E11               	movlw	17
   636  000052  6E94               	movwf	3988,c	;volatile
   637                           
   638                           ;main.c: 121:     PORTA = 0b00000000;
   639  000054  0E00               	movlw	0
   640  000056  6E80               	movwf	3968,c	;volatile
   641                           
   642                           ;main.c: 122:     PORTB = 0b00000001;
   643  000058  0E01               	movlw	1
   644  00005A  6E81               	movwf	3969,c	;volatile
   645                           
   646                           ;main.c: 123:     PORTC = 0b00000000;
   647  00005C  0E00               	movlw	0
   648  00005E  6E82               	movwf	3970,c	;volatile
   649                           
   650                           ;main.c: 125:     T1CON = 0b00110000;
   651  000060  0E30               	movlw	48
   652  000062  6ECD               	movwf	4045,c	;volatile
   653                           
   654                           ;main.c: 126:     T3CON = 0b00110000;
   655  000064  0E30               	movlw	48
   656  000066  6EB1               	movwf	4017,c	;volatile
   657                           
   658                           ; BSR set to: 15
   659                           ;main.c: 127:     PIR1bits.TMR1IF = 0;
   660  000068  909E               	bcf	3998,0,c	;volatile
   661                           
   662                           ; BSR set to: 15
   663                           ;main.c: 128:     PIE1bits.TMR1IE = 1;
   664  00006A  809D               	bsf	3997,0,c	;volatile
   665                           
   666                           ; BSR set to: 15
   667                           ;main.c: 129:     PIR2bits.TMR3IF = 0;
   668  00006C  92A1               	bcf	4001,1,c	;volatile
   669                           
   670                           ; BSR set to: 15
   671                           ;main.c: 130:     PIE2bits.TMR3IE = 1;
   672  00006E  82A0               	bsf	4000,1,c	;volatile
   673                           
   674                           ; BSR set to: 15
   675                           ;main.c: 131:     INTCONbits.PEIE = 1;
   676  000070  8CF2               	bsf	4082,6,c	;volatile
   677                           
   678                           ; BSR set to: 15
   679                           ;main.c: 132:     INTCONbits.GIE = 1;
   680  000072  8EF2               	bsf	4082,7,c	;volatile
   681                           
   682                           ; BSR set to: 15
   683                           ;main.c: 135:     ServoOut(servo_Angle[servo_Flag]);
   684  000074  5043               	movf	_servo_Flag,w,c
   685  000076  0D02               	mullw	2
   686  000078  0E50               	movlw	low _servo_Angle
   687  00007A  24F3               	addwf	prodl,w,c
   688  00007C  6ED9               	movwf	fsr2l,c
   689  00007E  0E00               	movlw	high _servo_Angle
   690  000080  20F4               	addwfc	prodh,w,c
   691  000082  6EDA               	movwf	fsr2h,c
   692  000084  CFDE F01B          	movff	postinc2,ServoOut@angle
   693  000088  CFDD F01C          	movff	postdec2,ServoOut@angle+1
   694  00008C  ECD0  F005         	call	_ServoOut	;wreg free
   695                           
   696                           ;main.c: 136:     T1CONbits.TMR1ON = 1;
   697  000090  80CD               	bsf	4045,0,c	;volatile
   698                           
   699                           ;main.c: 137:     T3CONbits.TMR3ON = 1;
   700  000092  80B1               	bsf	4017,0,c	;volatile
   701                           
   702                           ;main.c: 141:     ECAN_Initialize() ;
   703  000094  EC79  F005         	call	_ECAN_Initialize	;wreg free
   704                           
   705                           ;main.c: 144:     SPI_Init(3,0x1,0) ;
   706  000098  0E01               	movlw	1
   707  00009A  6E01               	movwf	SPI_Init@divider,c
   708  00009C  0E00               	movlw	0
   709  00009E  6E03               	movwf	SPI_Init@sdo+1,c
   710  0000A0  0E00               	movlw	0
   711  0000A2  6E02               	movwf	SPI_Init@sdo,c
   712  0000A4  0E03               	movlw	3
   713  0000A6  ECB8  F006         	call	_SPI_Init
   714  0000AA  EC4C  F002         	call	_L6470_Init	;wreg free
   715                           
   716                           ;main.c: 148:     Wait(300) ;
   717  0000AE  0E01               	movlw	1
   718  0000B0  6E02               	movwf	Wait@num+1,c
   719  0000B2  0E2C               	movlw	44
   720  0000B4  6E01               	movwf	Wait@num,c
   721  0000B6  EC6F  F007         	call	_Wait	;wreg free
   722                           
   723                           ;main.c: 150:     while(PORTBbits.RB5){
   724  0000BA  D00B               	goto	l3163
   725  0000BC                     l3161:
   726                           
   727                           ;main.c: 151:         L6470_Run(0,30000);
   728  0000BC  0E30               	movlw	48
   729  0000BE  6E13               	movwf	L6470_Run@speed,c
   730  0000C0  0E75               	movlw	117
   731  0000C2  6E14               	movwf	L6470_Run@speed+1,c
   732  0000C4  0E00               	movlw	0
   733  0000C6  6E15               	movwf	L6470_Run@speed+2,c
   734  0000C8  0E00               	movlw	0
   735  0000CA  6E16               	movwf	L6470_Run@speed+3,c
   736  0000CC  0E00               	movlw	0
   737  0000CE  EC57  F007         	call	_L6470_Run
   738  0000D2                     l3163:
   739                           
   740                           ;main.c: 150:     while(PORTBbits.RB5){
   741  0000D2  BA81               	btfsc	3969,5,c	;volatile
   742  0000D4  D7F3               	goto	l3161
   743                           
   744                           ;main.c: 153:     L6470_Stop(1);
   745  0000D6  0E00               	movlw	0
   746  0000D8  6E03               	movwf	L6470_Stop@mode+1,c
   747  0000DA  0E01               	movlw	1
   748  0000DC  6E02               	movwf	L6470_Stop@mode,c
   749  0000DE  EC24  F007         	call	_L6470_Stop	;wreg free
   750                           
   751                           ;main.c: 154:     L6470_CMD(0xD8);
   752  0000E2  0E00               	movlw	0
   753  0000E4  6E03               	movwf	L6470_CMD@command+1,c
   754  0000E6  0ED8               	movlw	216
   755  0000E8  6E02               	movwf	L6470_CMD@command,c
   756  0000EA  EC84  F007         	call	_L6470_CMD	;wreg free
   757                           
   758                           ;main.c: 157:     PORTCbits.RC2 = 1;
   759  0000EE  8482               	bsf	3970,2,c	;volatile
   760                           
   761                           ;main.c: 158:     Wait(100);
   762  0000F0  0E00               	movlw	0
   763  0000F2  6E02               	movwf	Wait@num+1,c
   764  0000F4  0E64               	movlw	100
   765  0000F6  6E01               	movwf	Wait@num,c
   766  0000F8  EC6F  F007         	call	_Wait	;wreg free
   767                           
   768                           ;main.c: 159:     PORTCbits.RC2 = 0;
   769  0000FC  9482               	bcf	3970,2,c	;volatile
   770  0000FE                     l3175:
   771                           
   772                           ;main.c: 162:         if(PORTAbits.RA6 == 0){
   773  0000FE  BC80               	btfsc	3968,6,c	;volatile
   774  000100  D025               	goto	l380
   775                           
   776                           ;main.c: 163:             if(arm_mode_flag == 1){
   777  000102  0441               	decf	_arm_mode_flag,w,c
   778  000104  1042               	iorwf	_arm_mode_flag+1,w,c
   779  000106  A4D8               	btfss	status,2,c
   780  000108  D01A               	goto	l3191
   781                           
   782                           ;main.c: 164:                 PORTCbits.RC2 = 1;
   783  00010A  8482               	bsf	3970,2,c	;volatile
   784                           
   785                           ;main.c: 165:                 if(servo_Flag == 1){
   786  00010C  0443               	decf	_servo_Flag,w,c
   787  00010E  A4D8               	btfss	status,2,c
   788  000110  D002               	goto	l3185
   789                           
   790                           ;main.c: 166:                     servo_Flag = 0;
   791  000112  0E00               	movlw	0
   792  000114  D001               	goto	L1
   793  000116                     l3185:
   794                           
   795                           ;main.c: 168:                     servo_Flag = 1;
   796  000116  0E01               	movlw	1
   797  000118                     L1:
   798  000118  6E43               	movwf	_servo_Flag,c
   799                           
   800                           ;main.c: 170:                 ServoOut(servo_Angle[servo_Flag]);
   801  00011A  5043               	movf	_servo_Flag,w,c
   802  00011C  0D02               	mullw	2
   803  00011E  0E50               	movlw	low _servo_Angle
   804  000120  24F3               	addwf	prodl,w,c
   805  000122  6ED9               	movwf	fsr2l,c
   806  000124  0E00               	movlw	high _servo_Angle
   807  000126  20F4               	addwfc	prodh,w,c
   808  000128  6EDA               	movwf	fsr2h,c
   809  00012A  CFDE F01B          	movff	postinc2,ServoOut@angle
   810  00012E  CFDD F01C          	movff	postdec2,ServoOut@angle+1
   811  000132  ECD0  F005         	call	_ServoOut	;wreg free
   812                           
   813                           ;main.c: 171:                 arm_mode_flag = 0;
   814  000136  0E00               	movlw	0
   815  000138  6E42               	movwf	_arm_mode_flag+1,c
   816  00013A  0E00               	movlw	0
   817  00013C  6E41               	movwf	_arm_mode_flag,c
   818  00013E                     l3191:
   819                           
   820                           ;main.c: 173:             Wait(1);
   821  00013E  0E00               	movlw	0
   822  000140  6E02               	movwf	Wait@num+1,c
   823  000142  0E01               	movlw	1
   824  000144  6E01               	movwf	Wait@num,c
   825  000146  EC6F  F007         	call	_Wait	;wreg free
   826                           
   827                           ;main.c: 174:         }else{
   828  00014A  D005               	goto	l3197
   829  00014C                     l380:
   830                           
   831                           ;main.c: 175:             PORTCbits.RC2 = 0;
   832  00014C  9482               	bcf	3970,2,c	;volatile
   833                           
   834                           ;main.c: 176:             arm_mode_flag = 1;
   835  00014E  0E00               	movlw	0
   836  000150  6E42               	movwf	_arm_mode_flag+1,c
   837  000152  0E01               	movlw	1
   838  000154  D7F3               	goto	L2
   839  000156                     l3197:
   840                           
   841                           ;main.c: 180:         if(PORTAbits.RA7 == 0){
   842  000156  BE80               	btfsc	3968,7,c	;volatile
   843  000158  D00C               	goto	l385
   844                           
   845                           ;main.c: 181:             L6470_Run(1,30000);
   846  00015A  0E30               	movlw	48
   847  00015C  6E13               	movwf	L6470_Run@speed,c
   848  00015E  0E75               	movlw	117
   849  000160  6E14               	movwf	L6470_Run@speed+1,c
   850  000162  0E00               	movlw	0
   851  000164  6E15               	movwf	L6470_Run@speed+2,c
   852  000166  0E00               	movlw	0
   853  000168  6E16               	movwf	L6470_Run@speed+3,c
   854  00016A  0E01               	movlw	1
   855  00016C  EC57  F007         	call	_L6470_Run
   856                           
   857                           ;main.c: 182:         }else if(PORTCbits.RC0 == 0){
   858  000170  D015               	goto	l386
   859  000172                     l385:
   860  000172  A082               	btfss	3970,0,c	;volatile
   861                           
   862                           ;main.c: 183:             if(PORTBbits.RB5){
   863  000174  AA81               	btfss	3969,5,c	;volatile
   864  000176  D00C               	goto	l3205
   865                           
   866                           ;main.c: 184:                 L6470_Run(0,30000);
   867  000178  0E30               	movlw	48
   868  00017A  6E13               	movwf	L6470_Run@speed,c
   869  00017C  0E75               	movlw	117
   870  00017E  6E14               	movwf	L6470_Run@speed+1,c
   871  000180  0E00               	movlw	0
   872  000182  6E15               	movwf	L6470_Run@speed+2,c
   873  000184  0E00               	movlw	0
   874  000186  6E16               	movwf	L6470_Run@speed+3,c
   875  000188  0E00               	movlw	0
   876  00018A  EC57  F007         	call	_L6470_Run
   877                           
   878                           ;main.c: 185:             }else{
   879  00018E  D006               	goto	l386
   880  000190                     l3205:
   881                           
   882                           ;main.c: 186:                 L6470_Stop(1);
   883  000190  0E00               	movlw	0
   884  000192  6E03               	movwf	L6470_Stop@mode+1,c
   885  000194  0E01               	movlw	1
   886  000196  6E02               	movwf	L6470_Stop@mode,c
   887  000198  EC24  F007         	call	_L6470_Stop	;wreg free
   888  00019C                     l386:
   889                           
   890                           ;main.c: 192:         if (CAN_receive(&rxMessage)) {
   891  00019C  0E60               	movlw	low _rxMessage
   892  00019E  6E14               	movwf	CAN_receive@tempCanMsg,c
   893  0001A0  0E00               	movlw	high _rxMessage
   894  0001A2  6E15               	movwf	CAN_receive@tempCanMsg+1,c
   895  0001A4  EC3A  F001         	call	_CAN_receive	;wreg free
   896  0001A8  0900               	iorlw	0
   897  0001AA  B4D8               	btfsc	status,2,c
   898  0001AC  D7A8               	goto	l3175
   899                           
   900                           ;main.c: 194:             PORTCbits.RC2 = 1;
   901  0001AE  8482               	bsf	3970,2,c	;volatile
   902                           
   903                           ;main.c: 195:             data = can_recieve(rxMessage);
   904  0001B0  EE20  F060         	lfsr	2,_rxMessage
   905  0001B4  EE00  F021         	lfsr	0,can_recieve@rxMessage
   906  0001B8  0E0D               	movlw	13
   907  0001BA                     u1431:
   908  0001BA  CFDB FFEB          	movff	plusw2,plusw0
   909  0001BE  06E8               	decf	wreg,f,c
   910  0001C0  E2FC               	bc	u1431
   911  0001C2  ECDD  F006         	call	_can_recieve	;wreg free
   912  0001C6  6E2F               	movwf	??_main& (0+255),c
   913  0001C8  6A30               	clrf	(??_main+1)& (0+255),c
   914  0001CA  C02F  F044         	movff	??_main,_data
   915  0001CE  C030  F045         	movff	??_main+1,_data+1
   916                           
   917                           ;main.c: 196:             txMessage.frame.idType = 1 ;
   918  0001D2  0E01               	movlw	1
   919  0001D4  6E31               	movwf	_txMessage,c
   920                           
   921                           ;main.c: 197:             txMessage.frame.id = 0x001 ;
   922  0001D6  0E01               	movlw	1
   923  0001D8  6E32               	movwf	_txMessage+1,c
   924  0001DA  0E00               	movlw	0
   925  0001DC  6E33               	movwf	_txMessage+2,c
   926  0001DE  0E00               	movlw	0
   927  0001E0  6E34               	movwf	_txMessage+3,c
   928  0001E2  0E00               	movlw	0
   929  0001E4  6E35               	movwf	_txMessage+4,c
   930                           
   931                           ;main.c: 198:             txMessage.frame.dlc = 8 ;
   932  0001E6  0E08               	movlw	8
   933  0001E8  6E36               	movwf	_txMessage+5,c
   934                           
   935                           ;main.c: 199:             txMessage.frame.data0 = data[0];
   936  0001EA  C044  FFD9         	movff	_data,fsr2l
   937  0001EE  C045  FFDA         	movff	_data+1,fsr2h
   938  0001F2  50DF               	movf	indf2,w,c
   939  0001F4  6E37               	movwf	_txMessage+6,c
   940                           
   941                           ;main.c: 200:             txMessage.frame.data1 = data[1];
   942  0001F6  EE20 F002          	lfsr	2,2
   943  0001FA  5044               	movf	_data,w,c
   944  0001FC  26D9               	addwf	fsr2l,f,c
   945  0001FE  5045               	movf	_data+1,w,c
   946  000200  22DA               	addwfc	fsr2h,f,c
   947  000202  50DF               	movf	indf2,w,c
   948  000204  6E38               	movwf	_txMessage+7,c
   949                           
   950                           ;main.c: 201:             txMessage.frame.data2 = data[2];
   951  000206  EE20 F004          	lfsr	2,4
   952  00020A  5044               	movf	_data,w,c
   953  00020C  26D9               	addwf	fsr2l,f,c
   954  00020E  5045               	movf	_data+1,w,c
   955  000210  22DA               	addwfc	fsr2h,f,c
   956  000212  50DF               	movf	indf2,w,c
   957  000214  6E39               	movwf	_txMessage+8,c
   958                           
   959                           ;main.c: 202:             txMessage.frame.data3 = data[3];
   960  000216  EE20 F006          	lfsr	2,6
   961  00021A  5044               	movf	_data,w,c
   962  00021C  26D9               	addwf	fsr2l,f,c
   963  00021E  5045               	movf	_data+1,w,c
   964  000220  22DA               	addwfc	fsr2h,f,c
   965  000222  50DF               	movf	indf2,w,c
   966  000224  6E3A               	movwf	_txMessage+9,c
   967                           
   968                           ;main.c: 203:             txMessage.frame.data4 = data[4];
   969  000226  EE20 F008          	lfsr	2,8
   970  00022A  5044               	movf	_data,w,c
   971  00022C  26D9               	addwf	fsr2l,f,c
   972  00022E  5045               	movf	_data+1,w,c
   973  000230  22DA               	addwfc	fsr2h,f,c
   974  000232  50DF               	movf	indf2,w,c
   975  000234  6E3B               	movwf	_txMessage+10,c
   976                           
   977                           ;main.c: 204:             txMessage.frame.data5 = data[5];
   978  000236  EE20 F00A          	lfsr	2,10
   979  00023A  5044               	movf	_data,w,c
   980  00023C  26D9               	addwf	fsr2l,f,c
   981  00023E  5045               	movf	_data+1,w,c
   982  000240  22DA               	addwfc	fsr2h,f,c
   983  000242  50DF               	movf	indf2,w,c
   984  000244  6E3C               	movwf	_txMessage+11,c
   985                           
   986                           ;main.c: 205:             txMessage.frame.data6 = data[6];
   987  000246  EE20 F00C          	lfsr	2,12
   988  00024A  5044               	movf	_data,w,c
   989  00024C  26D9               	addwf	fsr2l,f,c
   990  00024E  5045               	movf	_data+1,w,c
   991  000250  22DA               	addwfc	fsr2h,f,c
   992  000252  50DF               	movf	indf2,w,c
   993  000254  6E3D               	movwf	_txMessage+12,c
   994                           
   995                           ;main.c: 206:             txMessage.frame.data7 = data[7];
   996  000256  EE20 F00E          	lfsr	2,14
   997  00025A  5044               	movf	_data,w,c
   998  00025C  26D9               	addwf	fsr2l,f,c
   999  00025E  5045               	movf	_data+1,w,c
  1000  000260  22DA               	addwfc	fsr2h,f,c
  1001  000262  50DF               	movf	indf2,w,c
  1002  000264  6E3E               	movwf	_txMessage+13,c
  1003                           
  1004                           ;main.c: 208:             Wait(50);
  1005  000266  0E00               	movlw	0
  1006  000268  6E02               	movwf	Wait@num+1,c
  1007  00026A  0E32               	movlw	50
  1008  00026C  6E01               	movwf	Wait@num,c
  1009  00026E  EC6F  F007         	call	_Wait	;wreg free
  1010  000272  D745               	goto	l3175
  1011  000274                     __end_of_main:
  1012                           	opt callstack 0
  1013                           
  1014 ;; *************** function _can_recieve *****************
  1015 ;; Defined at:
  1016 ;;		line 57 in file "can_command.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  rxMessage      14   32[COMRAM] struct .
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      unsigned char 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1030 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1033 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1034 ;;Total ram usage:       14 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; Hardware stack levels required when called:    5
  1037 ;; This function calls:
  1038 ;;		_L6470_command
  1039 ;;		_ServoOut
  1040 ;; This function is called by:
  1041 ;;		_main
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text1
  1046  000DBA                     __ptext1:
  1047                           	opt callstack 0
  1048  000DBA                     _can_recieve:
  1049                           	opt callstack 25
  1050                           
  1051                           ;can_command.c: 61:      if (rxMessage.frame.idType == 1) {
  1052                           
  1053                           ;incstack = 0
  1054  000DBA  0421               	decf	can_recieve@rxMessage,w,c
  1055  000DBC  A4D8               	btfss	status,2,c
  1056  000DBE  D01F               	goto	l3127
  1057                           
  1058                           ;can_command.c: 64:          if(rxMessage.frame.id == 0x102){
  1059  000DC0  0E02               	movlw	2
  1060  000DC2  1822               	xorwf	can_recieve@rxMessage+1,w,c
  1061  000DC4  E11C               	bnz	l3127
  1062  000DC6  0423               	decf	can_recieve@rxMessage+2,w,c
  1063  000DC8  1024               	iorwf	can_recieve@rxMessage+3,w,c
  1064  000DCA  1025               	iorwf	can_recieve@rxMessage+4,w,c
  1065  000DCC  A4D8               	btfss	status,2,c
  1066  000DCE  D017               	goto	l3127
  1067                           
  1068                           ;can_command.c: 65:                 data[0] = rxMessage.frame.data0 ;
  1069  000DD0  C027  F044         	movff	can_recieve@rxMessage+6,_data
  1070                           
  1071                           ;can_command.c: 66:                 data[1] = rxMessage.frame.data1 ;
  1072  000DD4  C028  F045         	movff	can_recieve@rxMessage+7,_data+1
  1073                           
  1074                           ;can_command.c: 67:                 data[2] = rxMessage.frame.data2 ;
  1075  000DD8  C029  F046         	movff	can_recieve@rxMessage+8,_data+2
  1076                           
  1077                           ;can_command.c: 68:                 data[3] = rxMessage.frame.data3 ;
  1078  000DDC  C02A  F047         	movff	can_recieve@rxMessage+9,_data+3
  1079                           
  1080                           ;can_command.c: 69:                 data[4] = rxMessage.frame.data4 ;
  1081  000DE0  C02B  F048         	movff	can_recieve@rxMessage+10,_data+4
  1082                           
  1083                           ;can_command.c: 70:                 data[5] = rxMessage.frame.data5 ;
  1084  000DE4  C02C  F049         	movff	can_recieve@rxMessage+11,_data+5
  1085                           
  1086                           ;can_command.c: 71:                 data[6] = rxMessage.frame.data6 ;
  1087  000DE8  C02D  F04A         	movff	can_recieve@rxMessage+12,_data+6
  1088                           
  1089                           ;can_command.c: 72:                 data[7] = rxMessage.frame.data7 ;
  1090  000DEC  C02E  F04B         	movff	can_recieve@rxMessage+13,_data+7
  1091                           
  1092                           ;can_command.c: 73:                 ServoOut(data[1]);
  1093  000DF0  C045  F01B         	movff	_data+1,ServoOut@angle
  1094  000DF4  6A1C               	clrf	ServoOut@angle+1,c
  1095  000DF6  ECD0  F005         	call	_ServoOut	;wreg free
  1096                           
  1097                           ;can_command.c: 74:                 L6470_command();}
  1098  000DFA  ECE4  F003         	call	_L6470_command	;wreg free
  1099  000DFE                     l3127:
  1100                           
  1101                           ;can_command.c: 80:      return data;
  1102  000DFE  0E44               	movlw	_data& (0+255)
  1103  000E00  0012               	return		;funcret
  1104  000E02                     __end_of_can_recieve:
  1105                           	opt callstack 0
  1106                           
  1107 ;; *************** function _ServoOut *****************
  1108 ;; Defined at:
  1109 ;;		line 24 in file "servo.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  angle           2   26[COMRAM] int 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  value           4   28[COMRAM] long 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2, status,0, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1124 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1126 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1127 ;;Total ram usage:        6 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:    2
  1130 ;; This function calls:
  1131 ;;		___aldiv
  1132 ;;		___lmul
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;;		_can_recieve
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text2
  1140  000BA0                     __ptext2:
  1141                           	opt callstack 0
  1142  000BA0                     _ServoOut:
  1143                           	opt callstack 27
  1144                           
  1145                           ;servo.c: 25:     long value;;servo.c: 27:     PIR1bits.TMR1IF = 0;
  1146                           
  1147                           ;incstack = 0
  1148  000BA0  909E               	bcf	3998,0,c	;volatile
  1149                           
  1150                           ;servo.c: 28:     PIR2bits.TMR3IF = 0;
  1151  000BA2  92A1               	bcf	4001,1,c	;volatile
  1152                           
  1153                           ;servo.c: 30:     value = (long)(angle) * 1000 / 180 + 250;
  1154  000BA4  C01B  F001         	movff	ServoOut@angle,___lmul@multiplier
  1155  000BA8  C01C  F002         	movff	ServoOut@angle+1,___lmul@multiplier+1
  1156  000BAC  0E00               	movlw	0
  1157  000BAE  BE02               	btfsc	___lmul@multiplier+1,7,c
  1158  000BB0  0EFF               	movlw	-1
  1159  000BB2  6E03               	movwf	___lmul@multiplier+2,c
  1160  000BB4  6E04               	movwf	___lmul@multiplier+3,c
  1161  000BB6  0EE8               	movlw	232
  1162  000BB8  6E05               	movwf	___lmul@multiplicand,c
  1163  000BBA  0E03               	movlw	3
  1164  000BBC  6E06               	movwf	___lmul@multiplicand+1,c
  1165  000BBE  0E00               	movlw	0
  1166  000BC0  6E07               	movwf	___lmul@multiplicand+2,c
  1167  000BC2  0E00               	movlw	0
  1168  000BC4  6E08               	movwf	___lmul@multiplicand+3,c
  1169  000BC6  EC8D  F006         	call	___lmul	;wreg free
  1170  000BCA  C001  F00D         	movff	?___lmul,___aldiv@dividend
  1171  000BCE  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  1172  000BD2  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  1173  000BD6  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  1174  000BDA  0EB4               	movlw	180
  1175  000BDC  6E11               	movwf	___aldiv@divisor,c
  1176  000BDE  0E00               	movlw	0
  1177  000BE0  6E12               	movwf	___aldiv@divisor+1,c
  1178  000BE2  0E00               	movlw	0
  1179  000BE4  6E13               	movwf	___aldiv@divisor+2,c
  1180  000BE6  0E00               	movlw	0
  1181  000BE8  6E14               	movwf	___aldiv@divisor+3,c
  1182  000BEA  EC5A  F004         	call	___aldiv	;wreg free
  1183  000BEE  0EFA               	movlw	250
  1184  000BF0  240D               	addwf	?___aldiv,w,c
  1185  000BF2  6E1D               	movwf	ServoOut@value,c
  1186  000BF4  0E00               	movlw	0
  1187  000BF6  200E               	addwfc	?___aldiv+1,w,c
  1188  000BF8  6E1E               	movwf	ServoOut@value+1,c
  1189  000BFA  0E00               	movlw	0
  1190  000BFC  200F               	addwfc	?___aldiv+2,w,c
  1191  000BFE  6E1F               	movwf	ServoOut@value+2,c
  1192  000C00  0E00               	movlw	0
  1193  000C02  2010               	addwfc	?___aldiv+3,w,c
  1194  000C04  6E20               	movwf	ServoOut@value+3,c
  1195                           
  1196                           ;servo.c: 31:     T1time = 65536 - value;
  1197  000C06  501D               	movf	ServoOut@value,w,c
  1198  000C08  0800               	sublw	0
  1199  000C0A  6E54               	movwf	_T1time,c
  1200  000C0C  501E               	movf	ServoOut@value+1,w,c
  1201  000C0E  A0D8               	btfss	status,0,c
  1202  000C10  2AE8               	incf	wreg,f,c
  1203  000C12  0800               	sublw	0
  1204  000C14  6E55               	movwf	_T1time+1,c
  1205                           
  1206                           ;servo.c: 33:     TMR1H = (T1time >> 8);
  1207  000C16  5055               	movf	_T1time+1,w,c
  1208  000C18  6ECF               	movwf	4047,c	;volatile
  1209                           
  1210                           ;servo.c: 34:     TMR1L = (T1time & 0x00ff);
  1211  000C1A  C054  FFCE         	movff	_T1time,4046	;volatile
  1212                           
  1213                           ;servo.c: 35:     TMR3H = (55536>>8);
  1214  000C1E  0ED8               	movlw	216
  1215  000C20  6EB3               	movwf	4019,c	;volatile
  1216                           
  1217                           ;servo.c: 36:     TMR3L = (55536 & 0x00ff);
  1218  000C22  0EF0               	movlw	240
  1219  000C24  6EB2               	movwf	4018,c	;volatile
  1220                           
  1221                           ;servo.c: 38:     PORTCbits.RC1 = 1;
  1222  000C26  8282               	bsf	3970,1,c	;volatile
  1223  000C28  0012               	return		;funcret
  1224  000C2A                     __end_of_ServoOut:
  1225                           	opt callstack 0
  1226                           
  1227 ;; *************** function ___lmul *****************
  1228 ;; Defined at:
  1229 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  multiplier      4    0[COMRAM] unsigned long 
  1232 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  product         4    8[COMRAM] unsigned long 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  4    0[COMRAM] unsigned long 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1244 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1245 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1247 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1248 ;;Total ram usage:       12 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    1
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_ServoOut
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text3
  1259  000D1A                     __ptext3:
  1260                           	opt callstack 0
  1261  000D1A                     ___lmul:
  1262                           	opt callstack 27
  1263                           
  1264                           ;incstack = 0
  1265  000D1A  0E00               	movlw	0
  1266  000D1C  6E09               	movwf	___lmul@product,c
  1267  000D1E  0E00               	movlw	0
  1268  000D20  6E0A               	movwf	___lmul@product+1,c
  1269  000D22  0E00               	movlw	0
  1270  000D24  6E0B               	movwf	___lmul@product+2,c
  1271  000D26  0E00               	movlw	0
  1272  000D28  6E0C               	movwf	___lmul@product+3,c
  1273  000D2A                     l2767:
  1274  000D2A  A001               	btfss	___lmul@multiplier,0,c
  1275  000D2C  D008               	goto	l2771
  1276  000D2E  5005               	movf	___lmul@multiplicand,w,c
  1277  000D30  2609               	addwf	___lmul@product,f,c
  1278  000D32  5006               	movf	___lmul@multiplicand+1,w,c
  1279  000D34  220A               	addwfc	___lmul@product+1,f,c
  1280  000D36  5007               	movf	___lmul@multiplicand+2,w,c
  1281  000D38  220B               	addwfc	___lmul@product+2,f,c
  1282  000D3A  5008               	movf	___lmul@multiplicand+3,w,c
  1283  000D3C  220C               	addwfc	___lmul@product+3,f,c
  1284  000D3E                     l2771:
  1285  000D3E  90D8               	bcf	status,0,c
  1286  000D40  3605               	rlcf	___lmul@multiplicand,f,c
  1287  000D42  3606               	rlcf	___lmul@multiplicand+1,f,c
  1288  000D44  3607               	rlcf	___lmul@multiplicand+2,f,c
  1289  000D46  3608               	rlcf	___lmul@multiplicand+3,f,c
  1290  000D48  90D8               	bcf	status,0,c
  1291  000D4A  3204               	rrcf	___lmul@multiplier+3,f,c
  1292  000D4C  3203               	rrcf	___lmul@multiplier+2,f,c
  1293  000D4E  3202               	rrcf	___lmul@multiplier+1,f,c
  1294  000D50  3201               	rrcf	___lmul@multiplier,f,c
  1295  000D52  5001               	movf	___lmul@multiplier,w,c
  1296  000D54  1002               	iorwf	___lmul@multiplier+1,w,c
  1297  000D56  1003               	iorwf	___lmul@multiplier+2,w,c
  1298  000D58  1004               	iorwf	___lmul@multiplier+3,w,c
  1299  000D5A  A4D8               	btfss	status,2,c
  1300  000D5C  D7E6               	goto	l2767
  1301  000D5E  C009  F001         	movff	___lmul@product,?___lmul
  1302  000D62  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1303  000D66  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1304  000D6A  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1305  000D6E  0012               	return		;funcret
  1306  000D70                     __end_of___lmul:
  1307                           	opt callstack 0
  1308                           
  1309 ;; *************** function ___aldiv *****************
  1310 ;; Defined at:
  1311 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  dividend        4   12[COMRAM] long 
  1314 ;;  divisor         4   16[COMRAM] long 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  quotient        4   22[COMRAM] long 
  1317 ;;  sign            1   21[COMRAM] unsigned char 
  1318 ;;  counter         1   20[COMRAM] unsigned char 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  4   12[COMRAM] long 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2, status,0
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1328 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1329 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1331 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1332 ;;Total ram usage:       14 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    1
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		_ServoOut
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text4
  1343  0008B4                     __ptext4:
  1344                           	opt callstack 0
  1345  0008B4                     ___aldiv:
  1346                           	opt callstack 27
  1347                           
  1348                           ;incstack = 0
  1349  0008B4  0E00               	movlw	0
  1350  0008B6  6E16               	movwf	___aldiv@sign,c
  1351  0008B8  AE14               	btfss	___aldiv@divisor+3,7,c
  1352  0008BA  D00A               	goto	l2783
  1353  0008BC  1E14               	comf	___aldiv@divisor+3,f,c
  1354  0008BE  1E13               	comf	___aldiv@divisor+2,f,c
  1355  0008C0  1E12               	comf	___aldiv@divisor+1,f,c
  1356  0008C2  6C11               	negf	___aldiv@divisor,c
  1357  0008C4  0E00               	movlw	0
  1358  0008C6  2212               	addwfc	___aldiv@divisor+1,f,c
  1359  0008C8  2213               	addwfc	___aldiv@divisor+2,f,c
  1360  0008CA  2214               	addwfc	___aldiv@divisor+3,f,c
  1361  0008CC  0E01               	movlw	1
  1362  0008CE  6E16               	movwf	___aldiv@sign,c
  1363  0008D0                     l2783:
  1364  0008D0  AE10               	btfss	___aldiv@dividend+3,7,c
  1365  0008D2  D00A               	goto	l2789
  1366  0008D4  1E10               	comf	___aldiv@dividend+3,f,c
  1367  0008D6  1E0F               	comf	___aldiv@dividend+2,f,c
  1368  0008D8  1E0E               	comf	___aldiv@dividend+1,f,c
  1369  0008DA  6C0D               	negf	___aldiv@dividend,c
  1370  0008DC  0E00               	movlw	0
  1371  0008DE  220E               	addwfc	___aldiv@dividend+1,f,c
  1372  0008E0  220F               	addwfc	___aldiv@dividend+2,f,c
  1373  0008E2  2210               	addwfc	___aldiv@dividend+3,f,c
  1374  0008E4  0E01               	movlw	1
  1375  0008E6  1A16               	xorwf	___aldiv@sign,f,c
  1376  0008E8                     l2789:
  1377  0008E8  0E00               	movlw	0
  1378  0008EA  6E17               	movwf	___aldiv@quotient,c
  1379  0008EC  0E00               	movlw	0
  1380  0008EE  6E18               	movwf	___aldiv@quotient+1,c
  1381  0008F0  0E00               	movlw	0
  1382  0008F2  6E19               	movwf	___aldiv@quotient+2,c
  1383  0008F4  0E00               	movlw	0
  1384  0008F6  6E1A               	movwf	___aldiv@quotient+3,c
  1385  0008F8  5011               	movf	___aldiv@divisor,w,c
  1386  0008FA  1012               	iorwf	___aldiv@divisor+1,w,c
  1387  0008FC  1013               	iorwf	___aldiv@divisor+2,w,c
  1388  0008FE  1014               	iorwf	___aldiv@divisor+3,w,c
  1389  000900  B4D8               	btfsc	status,2,c
  1390  000902  D02A               	goto	l2811
  1391  000904  0E01               	movlw	1
  1392  000906  6E15               	movwf	___aldiv@counter,c
  1393  000908  D006               	goto	l2797
  1394  00090A                     l2795:
  1395  00090A  90D8               	bcf	status,0,c
  1396  00090C  3611               	rlcf	___aldiv@divisor,f,c
  1397  00090E  3612               	rlcf	___aldiv@divisor+1,f,c
  1398  000910  3613               	rlcf	___aldiv@divisor+2,f,c
  1399  000912  3614               	rlcf	___aldiv@divisor+3,f,c
  1400  000914  2A15               	incf	___aldiv@counter,f,c
  1401  000916                     l2797:
  1402  000916  AE14               	btfss	___aldiv@divisor+3,7,c
  1403  000918  D7F8               	goto	l2795
  1404  00091A                     u1120:
  1405  00091A  90D8               	bcf	status,0,c
  1406  00091C  3617               	rlcf	___aldiv@quotient,f,c
  1407  00091E  3618               	rlcf	___aldiv@quotient+1,f,c
  1408  000920  3619               	rlcf	___aldiv@quotient+2,f,c
  1409  000922  361A               	rlcf	___aldiv@quotient+3,f,c
  1410  000924  5011               	movf	___aldiv@divisor,w,c
  1411  000926  5C0D               	subwf	___aldiv@dividend,w,c
  1412  000928  5012               	movf	___aldiv@divisor+1,w,c
  1413  00092A  580E               	subwfb	___aldiv@dividend+1,w,c
  1414  00092C  5013               	movf	___aldiv@divisor+2,w,c
  1415  00092E  580F               	subwfb	___aldiv@dividend+2,w,c
  1416  000930  5014               	movf	___aldiv@divisor+3,w,c
  1417  000932  5810               	subwfb	___aldiv@dividend+3,w,c
  1418  000934  A0D8               	btfss	status,0,c
  1419  000936  D009               	goto	l2807
  1420  000938  5011               	movf	___aldiv@divisor,w,c
  1421  00093A  5E0D               	subwf	___aldiv@dividend,f,c
  1422  00093C  5012               	movf	___aldiv@divisor+1,w,c
  1423  00093E  5A0E               	subwfb	___aldiv@dividend+1,f,c
  1424  000940  5013               	movf	___aldiv@divisor+2,w,c
  1425  000942  5A0F               	subwfb	___aldiv@dividend+2,f,c
  1426  000944  5014               	movf	___aldiv@divisor+3,w,c
  1427  000946  5A10               	subwfb	___aldiv@dividend+3,f,c
  1428  000948  8017               	bsf	___aldiv@quotient,0,c
  1429  00094A                     l2807:
  1430  00094A  90D8               	bcf	status,0,c
  1431  00094C  3214               	rrcf	___aldiv@divisor+3,f,c
  1432  00094E  3213               	rrcf	___aldiv@divisor+2,f,c
  1433  000950  3212               	rrcf	___aldiv@divisor+1,f,c
  1434  000952  3211               	rrcf	___aldiv@divisor,f,c
  1435  000954  2E15               	decfsz	___aldiv@counter,f,c
  1436  000956  D7E1               	goto	u1120
  1437  000958                     l2811:
  1438  000958  5016               	movf	___aldiv@sign,w,c
  1439  00095A  B4D8               	btfsc	status,2,c
  1440  00095C  D008               	goto	l2815
  1441  00095E  1E1A               	comf	___aldiv@quotient+3,f,c
  1442  000960  1E19               	comf	___aldiv@quotient+2,f,c
  1443  000962  1E18               	comf	___aldiv@quotient+1,f,c
  1444  000964  6C17               	negf	___aldiv@quotient,c
  1445  000966  0E00               	movlw	0
  1446  000968  2218               	addwfc	___aldiv@quotient+1,f,c
  1447  00096A  2219               	addwfc	___aldiv@quotient+2,f,c
  1448  00096C  221A               	addwfc	___aldiv@quotient+3,f,c
  1449  00096E                     l2815:
  1450  00096E  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  1451  000972  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  1452  000976  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  1453  00097A  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  1454  00097E  0012               	return		;funcret
  1455  000980                     __end_of___aldiv:
  1456                           	opt callstack 0
  1457                           
  1458 ;; *************** function _L6470_command *****************
  1459 ;; Defined at:
  1460 ;;		line 27 in file "can_command.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1477 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1478 ;;Total ram usage:        2 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:    4
  1481 ;; This function calls:
  1482 ;;		_L6470_CMD
  1483 ;;		_L6470_Move
  1484 ;;		_L6470_Run
  1485 ;;		_L6470_Stop
  1486 ;;		_L6470_change
  1487 ;; This function is called by:
  1488 ;;		_can_recieve
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text5
  1493  0007C8                     __ptext5:
  1494                           	opt callstack 0
  1495  0007C8                     _L6470_command:
  1496                           	opt callstack 25
  1497                           
  1498                           ;can_command.c: 28:     switch(data[2]){
  1499                           
  1500                           ;incstack = 0
  1501  0007C8  D05A               	goto	l2921
  1502  0007CA                     l2901:
  1503                           
  1504                           ;can_command.c: 30:             L6470_Stop(data[7]);
  1505  0007CA  C04B  F002         	movff	_data+7,L6470_Stop@mode
  1506  0007CE  6A03               	clrf	L6470_Stop@mode+1,c
  1507  0007D0  EC24  F007         	call	_L6470_Stop	;wreg free
  1508                           
  1509                           ;can_command.c: 31:             break;
  1510  0007D4  0012               	return	
  1511  0007D6                     l2903:
  1512                           
  1513                           ;can_command.c: 33:             L6470_Run(data[3],L6470_change(&data[4],3));
  1514  0007D6  0E48               	movlw	low (_data+4)
  1515  0007D8  6E01               	movwf	L6470_change@dt,c
  1516  0007DA  0E00               	movlw	high (_data+4)
  1517  0007DC  6E02               	movwf	L6470_change@dt+1,c
  1518  0007DE  0E00               	movlw	0
  1519  0007E0  6E04               	movwf	L6470_change@num+1,c
  1520  0007E2  0E03               	movlw	3
  1521  0007E4  6E03               	movwf	L6470_change@num,c
  1522  0007E6  EC15  F006         	call	_L6470_change	;wreg free
  1523  0007EA  C001  F013         	movff	?_L6470_change,L6470_Run@speed
  1524  0007EE  C002  F014         	movff	?_L6470_change+1,L6470_Run@speed+1
  1525  0007F2  C003  F015         	movff	?_L6470_change+2,L6470_Run@speed+2
  1526  0007F6  C004  F016         	movff	?_L6470_change+3,L6470_Run@speed+3
  1527  0007FA  5047               	movf	_data+3,w,c
  1528  0007FC  EC57  F007         	call	_L6470_Run
  1529                           
  1530                           ;can_command.c: 34:             break;
  1531  000800  0012               	return	
  1532  000802                     l2905:
  1533                           
  1534                           ;can_command.c: 36:             L6470_Move(data[3],L6470_change(&data[4],3));
  1535  000802  0E48               	movlw	low (_data+4)
  1536  000804  6E01               	movwf	L6470_change@dt,c
  1537  000806  0E00               	movlw	high (_data+4)
  1538  000808  6E02               	movwf	L6470_change@dt+1,c
  1539  00080A  0E00               	movlw	0
  1540  00080C  6E04               	movwf	L6470_change@num+1,c
  1541  00080E  0E03               	movlw	3
  1542  000810  6E03               	movwf	L6470_change@num,c
  1543  000812  EC15  F006         	call	_L6470_change	;wreg free
  1544  000816  C001  F013         	movff	?_L6470_change,L6470_Move@step
  1545  00081A  C002  F014         	movff	?_L6470_change+1,L6470_Move@step+1
  1546  00081E  C003  F015         	movff	?_L6470_change+2,L6470_Move@step+2
  1547  000822  C004  F016         	movff	?_L6470_change+3,L6470_Move@step+3
  1548  000826  5047               	movf	_data+3,w,c
  1549  000828  EC3E  F007         	call	_L6470_Move
  1550                           
  1551                           ;can_command.c: 37:             break;
  1552  00082C  0012               	return	
  1553  00082E                     l2907:
  1554                           
  1555                           ;can_command.c: 39:             L6470_CMD(0x70);
  1556  00082E  0E00               	movlw	0
  1557  000830  6E03               	movwf	L6470_CMD@command+1,c
  1558  000832  0E70               	movlw	112
  1559  000834  6E02               	movwf	L6470_CMD@command,c
  1560  000836  EC84  F007         	call	_L6470_CMD	;wreg free
  1561                           
  1562                           ;can_command.c: 40:             break;
  1563  00083A  0012               	return	
  1564  00083C                     l2909:
  1565                           
  1566                           ;can_command.c: 42:             L6470_CMD(0xC0);
  1567  00083C  0E00               	movlw	0
  1568  00083E  6E03               	movwf	L6470_CMD@command+1,c
  1569  000840  0EC0               	movlw	192
  1570  000842  6E02               	movwf	L6470_CMD@command,c
  1571  000844  EC84  F007         	call	_L6470_CMD	;wreg free
  1572                           
  1573                           ;can_command.c: 43:             break;
  1574  000848  0012               	return	
  1575  00084A                     l2911:
  1576                           
  1577                           ;can_command.c: 46:                 L6470_Run(0,30000);
  1578  00084A  0E30               	movlw	48
  1579  00084C  6E13               	movwf	L6470_Run@speed,c
  1580  00084E  0E75               	movlw	117
  1581  000850  6E14               	movwf	L6470_Run@speed+1,c
  1582  000852  0E00               	movlw	0
  1583  000854  6E15               	movwf	L6470_Run@speed+2,c
  1584  000856  0E00               	movlw	0
  1585  000858  6E16               	movwf	L6470_Run@speed+3,c
  1586  00085A  0E00               	movlw	0
  1587  00085C  EC57  F007         	call	_L6470_Run
  1588  000860                     l2913:
  1589                           
  1590                           ;can_command.c: 45:             while(PORTBbits.RB5){
  1591  000860  BA81               	btfsc	3969,5,c	;volatile
  1592  000862  D7F3               	goto	l2911
  1593                           
  1594                           ;can_command.c: 48:             L6470_Stop(1);
  1595  000864  0E00               	movlw	0
  1596  000866  6E03               	movwf	L6470_Stop@mode+1,c
  1597  000868  0E01               	movlw	1
  1598  00086A  6E02               	movwf	L6470_Stop@mode,c
  1599  00086C  EC24  F007         	call	_L6470_Stop	;wreg free
  1600                           
  1601                           ;can_command.c: 49:             L6470_CMD(0xD8);
  1602  000870  0E00               	movlw	0
  1603  000872  6E03               	movwf	L6470_CMD@command+1,c
  1604  000874  0ED8               	movlw	216
  1605  000876  6E02               	movwf	L6470_CMD@command,c
  1606  000878  EC84  F007         	call	_L6470_CMD	;wreg free
  1607                           
  1608                           ;can_command.c: 50:             break;
  1609  00087C  0012               	return	
  1610  00087E                     l2921:
  1611  00087E  5046               	movf	_data+2,w,c
  1612  000880  6E18               	movwf	??_L6470_command& (0+255),c
  1613  000882  6A19               	clrf	(??_L6470_command+1)& (0+255),c
  1614                           
  1615                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1616                           ; Switch size 1, requested type "simple"
  1617                           ; Number of cases is 1, Range of values is 0 to 0
  1618                           ; switch strategies available:
  1619                           ; Name         Instructions Cycles
  1620                           ; simple_byte            4     3 (average)
  1621                           ;	Chosen strategy is simple_byte
  1622  000884  5019               	movf	??_L6470_command+1,w,c
  1623  000886  0A00               	xorlw	0	; case 0
  1624  000888  A4D8               	btfss	status,2,c
  1625  00088A  0012               	return	
  1626                           
  1627                           ; Switch size 1, requested type "simple"
  1628                           ; Number of cases is 6, Range of values is 0 to 5
  1629                           ; switch strategies available:
  1630                           ; Name         Instructions Cycles
  1631                           ; simple_byte           19    10 (average)
  1632                           ;	Chosen strategy is simple_byte
  1633  00088C  5018               	movf	??_L6470_command,w,c
  1634  00088E  0A00               	xorlw	0	; case 0
  1635  000890  B4D8               	btfsc	status,2,c
  1636  000892  D79B               	goto	l2901
  1637  000894  0A01               	xorlw	1	; case 1
  1638  000896  B4D8               	btfsc	status,2,c
  1639  000898  D79E               	goto	l2903
  1640  00089A  0A03               	xorlw	3	; case 2
  1641  00089C  B4D8               	btfsc	status,2,c
  1642  00089E  D7B1               	goto	l2905
  1643  0008A0  0A01               	xorlw	1	; case 3
  1644  0008A2  B4D8               	btfsc	status,2,c
  1645  0008A4  D7C4               	goto	l2907
  1646  0008A6  0A07               	xorlw	7	; case 4
  1647  0008A8  B4D8               	btfsc	status,2,c
  1648  0008AA  D7C8               	goto	l2909
  1649  0008AC  0A01               	xorlw	1	; case 5
  1650  0008AE  A4D8               	btfss	status,2,c
  1651  0008B0  0012               	return	
  1652  0008B2  D7D6               	goto	l2913
  1653  0008B4                     __end_of_L6470_command:
  1654                           	opt callstack 0
  1655                           
  1656 ;; *************** function _L6470_change *****************
  1657 ;; Defined at:
  1658 ;;		line 17 in file "can_command.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;  dt              2    0[COMRAM] PTR unsigned char 
  1661 ;;		 -> data(8), 
  1662 ;;  num             2    2[COMRAM] int 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  val             4   11[COMRAM] unsigned long 
  1665 ;;  i               2    9[COMRAM] int 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  4    0[COMRAM] unsigned long 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1676 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1677 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1678 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1679 ;;Total ram usage:       15 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    1
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_L6470_command
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text6
  1690  000C2A                     __ptext6:
  1691                           	opt callstack 0
  1692  000C2A                     _L6470_change:
  1693                           	opt callstack 27
  1694                           
  1695                           ;can_command.c: 18:     int i;;can_command.c: 19:     unsigned long val = 0;
  1696                           
  1697                           ;incstack = 0
  1698  000C2A  0E00               	movlw	0
  1699  000C2C  6E0C               	movwf	L6470_change@val,c
  1700  000C2E  0E00               	movlw	0
  1701  000C30  6E0D               	movwf	L6470_change@val+1,c
  1702  000C32  0E00               	movlw	0
  1703  000C34  6E0E               	movwf	L6470_change@val+2,c
  1704  000C36  0E00               	movlw	0
  1705  000C38  6E0F               	movwf	L6470_change@val+3,c
  1706                           
  1707                           ;can_command.c: 20:     for(i=0; i<num; i++){
  1708  000C3A  0E00               	movlw	0
  1709  000C3C  6E0B               	movwf	L6470_change@i+1,c
  1710  000C3E  0E00               	movlw	0
  1711  000C40  6E0A               	movwf	L6470_change@i,c
  1712  000C42  D01D               	goto	l2763
  1713  000C44                     l2757:
  1714                           
  1715                           ;can_command.c: 21:         val = (val << 8) + *dt;
  1716  000C44  C001  FFD9         	movff	L6470_change@dt,fsr2l
  1717  000C48  C002  FFDA         	movff	L6470_change@dt+1,fsr2h
  1718  000C4C  50DF               	movf	indf2,w,c
  1719  000C4E  6E05               	movwf	??_L6470_change& (0+255),c
  1720  000C50  5005               	movf	??_L6470_change,w,c
  1721  000C52  C00C  F007         	movff	L6470_change@val,??_L6470_change+2
  1722  000C56  C00D  F008         	movff	L6470_change@val+1,??_L6470_change+3
  1723  000C5A  C00E  F009         	movff	L6470_change@val+2,??_L6470_change+4
  1724  000C5E  6A06               	clrf	(??_L6470_change+1)& (0+255),c
  1725  000C60  2406               	addwf	??_L6470_change+1,w,c
  1726  000C62  6E0C               	movwf	L6470_change@val,c
  1727  000C64  0E00               	movlw	0
  1728  000C66  2007               	addwfc	??_L6470_change+2,w,c
  1729  000C68  6E0D               	movwf	L6470_change@val+1,c
  1730  000C6A  0E00               	movlw	0
  1731  000C6C  2008               	addwfc	??_L6470_change+3,w,c
  1732  000C6E  6E0E               	movwf	L6470_change@val+2,c
  1733  000C70  0E00               	movlw	0
  1734  000C72  2009               	addwfc	??_L6470_change+4,w,c
  1735  000C74  6E0F               	movwf	L6470_change@val+3,c
  1736                           
  1737                           ;can_command.c: 22:         ++dt;
  1738  000C76  4A01               	infsnz	L6470_change@dt,f,c
  1739  000C78  2A02               	incf	L6470_change@dt+1,f,c
  1740                           
  1741                           ;can_command.c: 23:     }
  1742  000C7A  4A0A               	infsnz	L6470_change@i,f,c
  1743  000C7C  2A0B               	incf	L6470_change@i+1,f,c
  1744  000C7E                     l2763:
  1745  000C7E  5003               	movf	L6470_change@num,w,c
  1746  000C80  5C0A               	subwf	L6470_change@i,w,c
  1747  000C82  500B               	movf	L6470_change@i+1,w,c
  1748  000C84  0A80               	xorlw	128
  1749  000C86  6E05               	movwf	??_L6470_change& (0+255),c
  1750  000C88  5004               	movf	L6470_change@num+1,w,c
  1751  000C8A  0A80               	xorlw	128
  1752  000C8C  5805               	subwfb	??_L6470_change& (0+255),w,c
  1753  000C8E  A0D8               	btfss	status,0,c
  1754  000C90  D7D9               	goto	l2757
  1755                           
  1756                           ;can_command.c: 24:     return val;
  1757  000C92  C00C  F001         	movff	L6470_change@val,?_L6470_change
  1758  000C96  C00D  F002         	movff	L6470_change@val+1,?_L6470_change+1
  1759  000C9A  C00E  F003         	movff	L6470_change@val+2,?_L6470_change+2
  1760  000C9E  C00F  F004         	movff	L6470_change@val+3,?_L6470_change+3
  1761  000CA2  0012               	return		;funcret
  1762  000CA4                     __end_of_L6470_change:
  1763                           	opt callstack 0
  1764                           
  1765 ;; *************** function _L6470_Stop *****************
  1766 ;; Defined at:
  1767 ;;		line 205 in file "L6470.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  mode            2    1[COMRAM] int 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  cmd             4    3[COMRAM] unsigned char [4]
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1782 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1784 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1785 ;;Total ram usage:        6 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    2
  1788 ;; This function calls:
  1789 ;;		_SPI_transfer
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;;		_L6470_command
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text7
  1797  000E48                     __ptext7:
  1798                           	opt callstack 0
  1799  000E48                     _L6470_Stop:
  1800                           	opt callstack 26
  1801                           
  1802                           ;L6470.c: 205: void L6470_Stop(int mode);L6470.c: 206: {;L6470.c: 207:      unsigned cha
      +                          r cmd[4] = {0xB0,0xB8,0xA0,0xA8} ;
  1803                           
  1804                           ;incstack = 0
  1805  000E48  C04C  F004         	movff	L6470_Stop@F12231,L6470_Stop@cmd
  1806  000E4C  C04D  F005         	movff	L6470_Stop@F12231+1,L6470_Stop@cmd+1
  1807  000E50  C04E  F006         	movff	L6470_Stop@F12231+2,L6470_Stop@cmd+2
  1808  000E54  C04F  F007         	movff	L6470_Stop@F12231+3,L6470_Stop@cmd+3
  1809  000E58                     l2729:
  1810  000E58  503F               	movf	_Busy,w,c
  1811  000E5A  1040               	iorwf	_Busy+1,w,c
  1812  000E5C  A4D8               	btfss	status,2,c
  1813  000E5E  D002               	goto	u1010
  1814  000E60  A281               	btfss	3969,1,c	;volatile
  1815  000E62  D7FA               	goto	l2729
  1816  000E64                     u1010:
  1817                           
  1818                           ;L6470.c: 210:      PORTBbits.RB0 = 0 ;
  1819  000E64  9081               	bcf	3969,0,c	;volatile
  1820                           
  1821                           ;L6470.c: 211:      SPI_transfer(cmd[mode]) ;
  1822  000E66  0E04               	movlw	low L6470_Stop@cmd
  1823  000E68  2402               	addwf	L6470_Stop@mode,w,c
  1824  000E6A  6ED9               	movwf	fsr2l,c
  1825  000E6C  0E00               	movlw	high L6470_Stop@cmd
  1826  000E6E  2003               	addwfc	L6470_Stop@mode+1,w,c
  1827  000E70  6EDA               	movwf	fsr2h,c
  1828  000E72  50DF               	movf	indf2,w,c
  1829  000E74  EC90  F007         	call	_SPI_transfer
  1830                           
  1831                           ;L6470.c: 212:      PORTBbits.RB0 = 1 ;
  1832  000E78  8081               	bsf	3969,0,c	;volatile
  1833  000E7A  0012               	return		;funcret
  1834  000E7C                     __end_of_L6470_Stop:
  1835                           	opt callstack 0
  1836                           
  1837 ;; *************** function _L6470_Run *****************
  1838 ;; Defined at:
  1839 ;;		line 174 in file "L6470.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  dir             1    wreg     unsigned char 
  1842 ;;  speed           4   18[COMRAM] unsigned long 
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  dir             1   22[COMRAM] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1854 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1857 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1858 ;;Total ram usage:        5 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    3
  1861 ;; This function calls:
  1862 ;;		_CMD_Send
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;;		_L6470_command
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text8
  1870  000EAE                     __ptext8:
  1871                           	opt callstack 0
  1872  000EAE                     _L6470_Run:
  1873                           	opt callstack 25
  1874                           
  1875                           ;incstack = 0
  1876                           ;L6470_Run@dir stored from wreg
  1877  000EAE  6E17               	movwf	L6470_Run@dir,c
  1878  000EB0                     
  1879                           ;L6470.c: 174: void L6470_Run(char dir,unsigned long speed);L6470.c: 175: {;L6470.c: 176
      +                          :      while( (Busy==0) && (PORTBbits.RB1==0) ) ;
  1880  000EB0  503F               	movf	_Busy,w,c
  1881  000EB2  1040               	iorwf	_Busy+1,w,c
  1882  000EB4  A4D8               	btfss	status,2,c
  1883  000EB6  D002               	goto	u990
  1884  000EB8  A281               	btfss	3969,1,c	;volatile
  1885  000EBA  D7FA               	goto	l2719
  1886  000EBC                     u990:
  1887                           
  1888                           ;L6470.c: 177:      CMD_Send(0x50|dir,speed,3) ;
  1889  000EBC  C013  F002         	movff	L6470_Run@speed,CMD_Send@val
  1890  000EC0  C014  F003         	movff	L6470_Run@speed+1,CMD_Send@val+1
  1891  000EC4  C015  F004         	movff	L6470_Run@speed+2,CMD_Send@val+2
  1892  000EC8  C016  F005         	movff	L6470_Run@speed+3,CMD_Send@val+3
  1893  000ECC  0E00               	movlw	0
  1894  000ECE  6E07               	movwf	CMD_Send@num+1,c
  1895  000ED0  0E03               	movlw	3
  1896  000ED2  6E06               	movwf	CMD_Send@num,c
  1897  000ED4  5017               	movf	L6470_Run@dir,w,c
  1898  000ED6  0950               	iorlw	80
  1899  000ED8  EC1F  F005         	call	_CMD_Send
  1900  000EDC  0012               	return		;funcret
  1901  000EDE                     __end_of_L6470_Run:
  1902                           	opt callstack 0
  1903                           
  1904 ;; *************** function _L6470_Move *****************
  1905 ;; Defined at:
  1906 ;;		line 188 in file "L6470.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  dir             1    wreg     unsigned char 
  1909 ;;  step            4   18[COMRAM] unsigned long 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  dir             1   22[COMRAM] unsigned char 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1921 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1924 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1925 ;;Total ram usage:        5 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    3
  1928 ;; This function calls:
  1929 ;;		_CMD_Send
  1930 ;; This function is called by:
  1931 ;;		_L6470_command
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text9
  1936  000E7C                     __ptext9:
  1937                           	opt callstack 0
  1938  000E7C                     _L6470_Move:
  1939                           	opt callstack 25
  1940                           
  1941                           ;incstack = 0
  1942                           ;L6470_Move@dir stored from wreg
  1943  000E7C  6E17               	movwf	L6470_Move@dir,c
  1944                           
  1945                           ;L6470.c: 188: void L6470_Move(char dir,unsigned long step);L6470.c: 189: {;L6470.c: 190
      +                          :     PORTCbits.RC2 = 1;
  1946  000E7E  8482               	bsf	3970,2,c	;volatile
  1947  000E80                     l2749:
  1948  000E80  503F               	movf	_Busy,w,c
  1949  000E82  1040               	iorwf	_Busy+1,w,c
  1950  000E84  A4D8               	btfss	status,2,c
  1951  000E86  D002               	goto	u1050
  1952  000E88  A281               	btfss	3969,1,c	;volatile
  1953  000E8A  D7FA               	goto	l2749
  1954  000E8C                     u1050:
  1955                           
  1956                           ;L6470.c: 192:      CMD_Send(0x40|dir,step,3) ;
  1957  000E8C  C013  F002         	movff	L6470_Move@step,CMD_Send@val
  1958  000E90  C014  F003         	movff	L6470_Move@step+1,CMD_Send@val+1
  1959  000E94  C015  F004         	movff	L6470_Move@step+2,CMD_Send@val+2
  1960  000E98  C016  F005         	movff	L6470_Move@step+3,CMD_Send@val+3
  1961  000E9C  0E00               	movlw	0
  1962  000E9E  6E07               	movwf	CMD_Send@num+1,c
  1963  000EA0  0E03               	movlw	3
  1964  000EA2  6E06               	movwf	CMD_Send@num,c
  1965  000EA4  5017               	movf	L6470_Move@dir,w,c
  1966  000EA6  0940               	iorlw	64
  1967  000EA8  EC1F  F005         	call	_CMD_Send
  1968  000EAC  0012               	return		;funcret
  1969  000EAE                     __end_of_L6470_Move:
  1970                           	opt callstack 0
  1971                           
  1972 ;; *************** function _L6470_CMD *****************
  1973 ;; Defined at:
  1974 ;;		line 215 in file "L6470.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  command         2    1[COMRAM] int 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg, status,2, status,0, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1991 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1992 ;;Total ram usage:        2 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    2
  1995 ;; This function calls:
  1996 ;;		_SPI_transfer
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;;		_L6470_command
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text10
  2004  000F08                     __ptext10:
  2005                           	opt callstack 0
  2006  000F08                     _L6470_CMD:
  2007                           	opt callstack 26
  2008                           
  2009                           ;L6470.c: 216:     while( (Busy==0) && (PORTBbits.RB1==0) ) ;
  2010                           
  2011                           ;incstack = 0
  2012  000F08  503F               	movf	_Busy,w,c
  2013  000F0A  1040               	iorwf	_Busy+1,w,c
  2014  000F0C  A4D8               	btfss	status,2,c
  2015  000F0E  D002               	goto	u1030
  2016  000F10  A281               	btfss	3969,1,c	;volatile
  2017  000F12  D7FA               	goto	_L6470_CMD
  2018  000F14                     u1030:
  2019                           
  2020                           ;L6470.c: 217:      PORTBbits.RB0 = 0 ;
  2021  000F14  9081               	bcf	3969,0,c	;volatile
  2022                           
  2023                           ;L6470.c: 218:      SPI_transfer(command) ;
  2024  000F16  5002               	movf	L6470_CMD@command,w,c
  2025  000F18  EC90  F007         	call	_SPI_transfer
  2026                           
  2027                           ;L6470.c: 219:      PORTBbits.RB0 = 1 ;
  2028  000F1C  8081               	bsf	3969,0,c	;volatile
  2029  000F1E  0012               	return		;funcret
  2030  000F20                     __end_of_L6470_CMD:
  2031                           	opt callstack 0
  2032                           
  2033 ;; *************** function _Wait *****************
  2034 ;; Defined at:
  2035 ;;		line 215 in file "main.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  num             2    0[COMRAM] unsigned int 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  i               2    3[COMRAM] int 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2052 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2053 ;;Total ram usage:        5 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    1
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text11
  2064  000EDE                     __ptext11:
  2065                           	opt callstack 0
  2066  000EDE                     _Wait:
  2067                           	opt callstack 29
  2068                           
  2069                           ;main.c: 215: void Wait(unsigned int num);main.c: 216: {;main.c: 217:      int i ;;main.
      +                          c: 220:      for (i=0 ; i<num ; i++) {
  2070                           
  2071                           ;incstack = 0
  2072  000EDE  0E00               	movlw	0
  2073  000EE0  6E05               	movwf	Wait@i+1,c
  2074  000EE2  0E00               	movlw	0
  2075  000EE4  6E04               	movwf	Wait@i,c
  2076  000EE6  D009               	goto	l397
  2077  000EE8                     l3113:
  2078                           
  2079                           ;main.c: 221:           _delay((unsigned long)((10)*(16000000/4000.0))) ;
  2080  000EE8  0E34               	movlw	52
  2081  000EEA  6E03               	movwf	??_Wait& (0+255),c
  2082  000EEC  0EF2               	movlw	242
  2083  000EEE                     u1527:
  2084  000EEE  2EE8               	decfsz	wreg,f,c
  2085  000EF0  D7FE               	bra	u1527
  2086  000EF2  2E03               	decfsz	??_Wait& (0+255),f,c
  2087  000EF4  D7FC               	bra	u1527
  2088                           
  2089                           ;main.c: 222:      }
  2090  000EF6  4A04               	infsnz	Wait@i,f,c
  2091  000EF8  2A05               	incf	Wait@i+1,f,c
  2092  000EFA                     l397:
  2093  000EFA  5001               	movf	Wait@num,w,c
  2094  000EFC  5C04               	subwf	Wait@i,w,c
  2095  000EFE  5002               	movf	Wait@num+1,w,c
  2096  000F00  5805               	subwfb	Wait@i+1,w,c
  2097  000F02  B0D8               	btfsc	status,0,c
  2098  000F04  0012               	return	
  2099  000F06  D7F0               	goto	l3113
  2100  000F08                     __end_of_Wait:
  2101                           	opt callstack 0
  2102                           
  2103 ;; *************** function _SPI_Init *****************
  2104 ;; Defined at:
  2105 ;;		line 36 in file "SPIlib.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  mode            1    wreg     unsigned char 
  2108 ;;  divider         1    0[COMRAM] unsigned char 
  2109 ;;  sdo             2    1[COMRAM] int 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  mode            1    5[COMRAM] unsigned char 
  2112 ;;  con             1    4[COMRAM] unsigned char 
  2113 ;;  stat            1    3[COMRAM] unsigned char 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2123 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2124 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2126 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2127 ;;Total ram usage:        6 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    1
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text12
  2138  000D70                     __ptext12:
  2139                           	opt callstack 0
  2140  000D70                     _SPI_Init:
  2141                           	opt callstack 29
  2142                           
  2143                           ;incstack = 0
  2144                           ;SPI_Init@mode stored from wreg
  2145  000D70  6E06               	movwf	SPI_Init@mode,c
  2146                           
  2147                           ;SPIlib.c: 36: void SPI_Init(char mode,char divider,int sdo);SPIlib.c: 37: {;SPIlib.c: 3
      +                          8:      char con , stat ;;SPIlib.c: 65:      con = 0b00100000 ;
  2148  000D72  0E20               	movlw	32
  2149  000D74  6E05               	movwf	SPI_Init@con,c
  2150                           
  2151                           ;SPIlib.c: 66:      stat = 0b00000000 ;
  2152  000D76  0E00               	movlw	0
  2153  000D78  6E04               	movwf	SPI_Init@stat,c
  2154                           
  2155                           ;SPIlib.c: 67:      con = con | divider ;
  2156  000D7A  5005               	movf	SPI_Init@con,w,c
  2157  000D7C  1001               	iorwf	SPI_Init@divider,w,c
  2158  000D7E  6E05               	movwf	SPI_Init@con,c
  2159                           
  2160                           ;SPIlib.c: 68:      if (mode == 0 || mode == 2) {
  2161  000D80  5006               	movf	SPI_Init@mode,w,c
  2162  000D82  B4D8               	btfsc	status,2,c
  2163  000D84  D004               	goto	u1270
  2164  000D86  0E02               	movlw	2
  2165  000D88  1806               	xorwf	SPI_Init@mode,w,c
  2166  000D8A  A4D8               	btfss	status,2,c
  2167  000D8C  D003               	goto	l768
  2168  000D8E                     u1270:
  2169                           
  2170                           ;SPIlib.c: 69:           stat = stat | 0x40 ;
  2171  000D8E  5004               	movf	SPI_Init@stat,w,c
  2172  000D90  0940               	iorlw	64
  2173  000D92  6E04               	movwf	SPI_Init@stat,c
  2174  000D94                     l768:
  2175                           
  2176                           ;SPIlib.c: 71:      if (mode == 2 || mode == 3) {
  2177  000D94  0E02               	movlw	2
  2178  000D96  1806               	xorwf	SPI_Init@mode,w,c
  2179  000D98  B4D8               	btfsc	status,2,c
  2180  000D9A  D004               	goto	u1290
  2181  000D9C  0E03               	movlw	3
  2182  000D9E  1806               	xorwf	SPI_Init@mode,w,c
  2183  000DA0  A4D8               	btfss	status,2,c
  2184  000DA2  D003               	goto	l3037
  2185  000DA4                     u1290:
  2186                           
  2187                           ;SPIlib.c: 72:           con = con | 0x10 ;
  2188  000DA4  5005               	movf	SPI_Init@con,w,c
  2189  000DA6  0910               	iorlw	16
  2190  000DA8  6E05               	movwf	SPI_Init@con,c
  2191  000DAA                     l3037:
  2192                           
  2193                           ;SPIlib.c: 74:      SSPCON1 = con ;
  2194  000DAA  C005  FFC6         	movff	SPI_Init@con,4038	;volatile
  2195                           
  2196                           ;SPIlib.c: 75:      SSPSTAT = stat ;
  2197  000DAE  C004  FFC7         	movff	SPI_Init@stat,4039	;volatile
  2198                           
  2199                           ;SPIlib.c: 76:      PIR1bits.SSPIF = 0 ;
  2200  000DB2  969E               	bcf	3998,3,c	;volatile
  2201                           
  2202                           ;SPIlib.c: 77:      INTCONbits.PEIE = 1 ;
  2203  000DB4  8CF2               	bsf	4082,6,c	;volatile
  2204                           
  2205                           ;SPIlib.c: 78:      INTCONbits.GIE = 1 ;
  2206  000DB6  8EF2               	bsf	4082,7,c	;volatile
  2207  000DB8  0012               	return		;funcret
  2208  000DBA                     __end_of_SPI_Init:
  2209                           	opt callstack 0
  2210                           
  2211 ;; *************** function _L6470_Init *****************
  2212 ;; Defined at:
  2213 ;;		line 62 in file "L6470.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  val             4   27[COMRAM] long 
  2218 ;;  i               2   31[COMRAM] int 
  2219 ;;  config          2   24[COMRAM] struct CONFIG_t
  2220 ;;  step_mode       1   26[COMRAM] struct STEP_MODE_t
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  4   20[COMRAM] unsigned long 
  2223 ;; Registers used:
  2224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2231 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2233 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2234 ;;Total ram usage:       13 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    3
  2237 ;; This function calls:
  2238 ;;		_CMD_Send
  2239 ;;		_L6470_GetRegister
  2240 ;;		_SPI_transfer
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text13
  2247  000498                     __ptext13:
  2248                           	opt callstack 0
  2249  000498                     _L6470_Init:
  2250                           	opt callstack 27
  2251                           
  2252                           ;L6470.c: 64:      union STEP_MODE_t step_mode ;;L6470.c: 65:      union CONFIG_t config
      +                           ;;L6470.c: 66:      long val ;;L6470.c: 67:      int i ;;L6470.c: 70:      for (i=0 ; i
      +                          <4 ; i++) {
  2253                           
  2254                           ;incstack = 0
  2255  000498  0E00               	movlw	0
  2256  00049A  6E21               	movwf	L6470_Init@i+1,c
  2257  00049C  0E00               	movlw	0
  2258  00049E  6E20               	movwf	L6470_Init@i,c
  2259  0004A0                     l424:
  2260                           
  2261                           ;L6470.c: 71:           PORTBbits.RB0 = 0 ;
  2262  0004A0  9081               	bcf	3969,0,c	;volatile
  2263                           
  2264                           ;L6470.c: 72:           SPI_transfer(0x00) ;
  2265  0004A2  0E00               	movlw	0
  2266  0004A4  EC90  F007         	call	_SPI_transfer
  2267                           
  2268                           ;L6470.c: 73:           PORTBbits.RB0 = 1 ;
  2269  0004A8  8081               	bsf	3969,0,c	;volatile
  2270                           
  2271                           ;L6470.c: 74:      }
  2272  0004AA  4A20               	infsnz	L6470_Init@i,f,c
  2273  0004AC  2A21               	incf	L6470_Init@i+1,f,c
  2274  0004AE  BE21               	btfsc	L6470_Init@i+1,7,c
  2275  0004B0  D7F7               	goto	l424
  2276  0004B2  5021               	movf	L6470_Init@i+1,w,c
  2277  0004B4  E104               	bnz	u1300
  2278  0004B6  0E04               	movlw	4
  2279  0004B8  5C20               	subwf	L6470_Init@i,w,c
  2280  0004BA  A0D8               	btfss	status,0,c
  2281  0004BC  D7F1               	goto	l424
  2282  0004BE                     u1300:
  2283                           
  2284                           ;L6470.c: 75:      PORTBbits.RB0 = 0 ;
  2285  0004BE  9081               	bcf	3969,0,c	;volatile
  2286                           
  2287                           ;L6470.c: 76:      SPI_transfer(0xC0) ;
  2288  0004C0  0EC0               	movlw	192
  2289  0004C2  EC90  F007         	call	_SPI_transfer
  2290                           
  2291                           ;L6470.c: 77:      PORTBbits.RB0 = 1 ;
  2292  0004C6  8081               	bsf	3969,0,c	;volatile
  2293                           
  2294                           ;L6470.c: 79:      CMD_Send(0x05,0x008A,2) ;
  2295  0004C8  0E8A               	movlw	138
  2296  0004CA  6E02               	movwf	CMD_Send@val,c
  2297  0004CC  0E00               	movlw	0
  2298  0004CE  6E03               	movwf	CMD_Send@val+1,c
  2299  0004D0  0E00               	movlw	0
  2300  0004D2  6E04               	movwf	CMD_Send@val+2,c
  2301  0004D4  0E00               	movlw	0
  2302  0004D6  6E05               	movwf	CMD_Send@val+3,c
  2303  0004D8  0E00               	movlw	0
  2304  0004DA  6E07               	movwf	CMD_Send@num+1,c
  2305  0004DC  0E02               	movlw	2
  2306  0004DE  6E06               	movwf	CMD_Send@num,c
  2307  0004E0  0E05               	movlw	5
  2308  0004E2  EC1F  F005         	call	_CMD_Send
  2309                           
  2310                           ;L6470.c: 80:      CMD_Send(0x06,0x008A,2) ;
  2311  0004E6  0E8A               	movlw	138
  2312  0004E8  6E02               	movwf	CMD_Send@val,c
  2313  0004EA  0E00               	movlw	0
  2314  0004EC  6E03               	movwf	CMD_Send@val+1,c
  2315  0004EE  0E00               	movlw	0
  2316  0004F0  6E04               	movwf	CMD_Send@val+2,c
  2317  0004F2  0E00               	movlw	0
  2318  0004F4  6E05               	movwf	CMD_Send@val+3,c
  2319  0004F6  0E00               	movlw	0
  2320  0004F8  6E07               	movwf	CMD_Send@num+1,c
  2321  0004FA  0E02               	movlw	2
  2322  0004FC  6E06               	movwf	CMD_Send@num,c
  2323  0004FE  0E06               	movlw	6
  2324  000500  EC1F  F005         	call	_CMD_Send
  2325                           
  2326                           ;L6470.c: 81:      CMD_Send(0x07,0x0020,2) ;
  2327  000504  0E20               	movlw	32
  2328  000506  6E02               	movwf	CMD_Send@val,c
  2329  000508  0E00               	movlw	0
  2330  00050A  6E03               	movwf	CMD_Send@val+1,c
  2331  00050C  0E00               	movlw	0
  2332  00050E  6E04               	movwf	CMD_Send@val+2,c
  2333  000510  0E00               	movlw	0
  2334  000512  6E05               	movwf	CMD_Send@val+3,c
  2335  000514  0E00               	movlw	0
  2336  000516  6E07               	movwf	CMD_Send@num+1,c
  2337  000518  0E02               	movlw	2
  2338  00051A  6E06               	movwf	CMD_Send@num,c
  2339  00051C  0E07               	movlw	7
  2340  00051E  EC1F  F005         	call	_CMD_Send
  2341                           
  2342                           ;L6470.c: 82:      CMD_Send(0x08,0x0001,2) ;
  2343  000522  0E01               	movlw	1
  2344  000524  6E02               	movwf	CMD_Send@val,c
  2345  000526  0E00               	movlw	0
  2346  000528  6E03               	movwf	CMD_Send@val+1,c
  2347  00052A  0E00               	movlw	0
  2348  00052C  6E04               	movwf	CMD_Send@val+2,c
  2349  00052E  0E00               	movlw	0
  2350  000530  6E05               	movwf	CMD_Send@val+3,c
  2351  000532  0E00               	movlw	0
  2352  000534  6E07               	movwf	CMD_Send@num+1,c
  2353  000536  0E02               	movlw	2
  2354  000538  6E06               	movwf	CMD_Send@num,c
  2355  00053A  0E08               	movlw	8
  2356  00053C  EC1F  F005         	call	_CMD_Send
  2357                           
  2358                           ;L6470.c: 83:      CMD_Send(0x09,0xFF,1) ;
  2359  000540  0EFF               	movlw	255
  2360  000542  6E02               	movwf	CMD_Send@val,c
  2361  000544  0E00               	movlw	0
  2362  000546  6E03               	movwf	CMD_Send@val+1,c
  2363  000548  0E00               	movlw	0
  2364  00054A  6E04               	movwf	CMD_Send@val+2,c
  2365  00054C  0E00               	movlw	0
  2366  00054E  6E05               	movwf	CMD_Send@val+3,c
  2367  000550  0E00               	movlw	0
  2368  000552  6E07               	movwf	CMD_Send@num+1,c
  2369  000554  0E01               	movlw	1
  2370  000556  6E06               	movwf	CMD_Send@num,c
  2371  000558  0E09               	movlw	9
  2372  00055A  EC1F  F005         	call	_CMD_Send
  2373                           
  2374                           ;L6470.c: 84:      CMD_Send(0x0A,0xF0,1) ;
  2375  00055E  0EF0               	movlw	240
  2376  000560  6E02               	movwf	CMD_Send@val,c
  2377  000562  0E00               	movlw	0
  2378  000564  6E03               	movwf	CMD_Send@val+1,c
  2379  000566  0E00               	movlw	0
  2380  000568  6E04               	movwf	CMD_Send@val+2,c
  2381  00056A  0E00               	movlw	0
  2382  00056C  6E05               	movwf	CMD_Send@val+3,c
  2383  00056E  0E00               	movlw	0
  2384  000570  6E07               	movwf	CMD_Send@num+1,c
  2385  000572  0E01               	movlw	1
  2386  000574  6E06               	movwf	CMD_Send@num,c
  2387  000576  0E0A               	movlw	10
  2388  000578  EC1F  F005         	call	_CMD_Send
  2389                           
  2390                           ;L6470.c: 85:      CMD_Send(0x0B,0xF0,1) ;
  2391  00057C  0EF0               	movlw	240
  2392  00057E  6E02               	movwf	CMD_Send@val,c
  2393  000580  0E00               	movlw	0
  2394  000582  6E03               	movwf	CMD_Send@val+1,c
  2395  000584  0E00               	movlw	0
  2396  000586  6E04               	movwf	CMD_Send@val+2,c
  2397  000588  0E00               	movlw	0
  2398  00058A  6E05               	movwf	CMD_Send@val+3,c
  2399  00058C  0E00               	movlw	0
  2400  00058E  6E07               	movwf	CMD_Send@num+1,c
  2401  000590  0E01               	movlw	1
  2402  000592  6E06               	movwf	CMD_Send@num,c
  2403  000594  0E0B               	movlw	11
  2404  000596  EC1F  F005         	call	_CMD_Send
  2405                           
  2406                           ;L6470.c: 86:      CMD_Send(0x0C,0xF0,1) ;
  2407  00059A  0EF0               	movlw	240
  2408  00059C  6E02               	movwf	CMD_Send@val,c
  2409  00059E  0E00               	movlw	0
  2410  0005A0  6E03               	movwf	CMD_Send@val+1,c
  2411  0005A2  0E00               	movlw	0
  2412  0005A4  6E04               	movwf	CMD_Send@val+2,c
  2413  0005A6  0E00               	movlw	0
  2414  0005A8  6E05               	movwf	CMD_Send@val+3,c
  2415  0005AA  0E00               	movlw	0
  2416  0005AC  6E07               	movwf	CMD_Send@num+1,c
  2417  0005AE  0E01               	movlw	1
  2418  0005B0  6E06               	movwf	CMD_Send@num,c
  2419  0005B2  0E0C               	movlw	12
  2420  0005B4  EC1F  F005         	call	_CMD_Send
  2421                           
  2422                           ;L6470.c: 87:      CMD_Send(0x13,0x0F,1) ;
  2423  0005B8  0E0F               	movlw	15
  2424  0005BA  6E02               	movwf	CMD_Send@val,c
  2425  0005BC  0E00               	movlw	0
  2426  0005BE  6E03               	movwf	CMD_Send@val+1,c
  2427  0005C0  0E00               	movlw	0
  2428  0005C2  6E04               	movwf	CMD_Send@val+2,c
  2429  0005C4  0E00               	movlw	0
  2430  0005C6  6E05               	movwf	CMD_Send@val+3,c
  2431  0005C8  0E00               	movlw	0
  2432  0005CA  6E07               	movwf	CMD_Send@num+1,c
  2433  0005CC  0E01               	movlw	1
  2434  0005CE  6E06               	movwf	CMD_Send@num,c
  2435  0005D0  0E13               	movlw	19
  2436  0005D2  EC1F  F005         	call	_CMD_Send
  2437                           
  2438                           ;L6470.c: 88:      CMD_Send(0x14,0x7F,1) ;
  2439  0005D6  0E7F               	movlw	127
  2440  0005D8  6E02               	movwf	CMD_Send@val,c
  2441  0005DA  0E00               	movlw	0
  2442  0005DC  6E03               	movwf	CMD_Send@val+1,c
  2443  0005DE  0E00               	movlw	0
  2444  0005E0  6E04               	movwf	CMD_Send@val+2,c
  2445  0005E2  0E00               	movlw	0
  2446  0005E4  6E05               	movwf	CMD_Send@val+3,c
  2447  0005E6  0E00               	movlw	0
  2448  0005E8  6E07               	movwf	CMD_Send@num+1,c
  2449  0005EA  0E01               	movlw	1
  2450  0005EC  6E06               	movwf	CMD_Send@num,c
  2451  0005EE  0E14               	movlw	20
  2452  0005F0  EC1F  F005         	call	_CMD_Send
  2453                           
  2454                           ;L6470.c: 90:      step_mode.DT = 0x07 ;
  2455  0005F4  0E07               	movlw	7
  2456  0005F6  6E1B               	movwf	L6470_Init@step_mode,c
  2457                           
  2458                           ;L6470.c: 91:      step_mode.STEP_SEL = 0 ;
  2459  0005F8  0EF8               	movlw	-8
  2460  0005FA  161B               	andwf	L6470_Init@step_mode,f,c
  2461                           
  2462                           ;L6470.c: 92:      step_mode.SYNC_EN = Busy = 0 ;
  2463  0005FC  0E00               	movlw	0
  2464  0005FE  6E40               	movwf	_Busy+1,c
  2465  000600  0E00               	movlw	0
  2466  000602  6E3F               	movwf	_Busy,c
  2467  000604  B03F               	btfsc	_Busy,0,c
  2468  000606  D002               	bra	u1315
  2469  000608  9E1B               	bcf	L6470_Init@step_mode,7,c
  2470  00060A  D001               	bra	u1316
  2471  00060C                     u1315:
  2472  00060C  8E1B               	bsf	L6470_Init@step_mode,7,c
  2473  00060E                     u1316:
  2474                           
  2475                           ;L6470.c: 93:      val = step_mode.DT ;
  2476  00060E  501B               	movf	L6470_Init@step_mode,w,c
  2477  000610  6E1C               	movwf	L6470_Init@val,c
  2478  000612  6A1D               	clrf	L6470_Init@val+1,c
  2479  000614  6A1E               	clrf	L6470_Init@val+2,c
  2480  000616  6A1F               	clrf	L6470_Init@val+3,c
  2481                           
  2482                           ;L6470.c: 94:      CMD_Send(0x16,val,1) ;
  2483  000618  C01C  F002         	movff	L6470_Init@val,CMD_Send@val
  2484  00061C  C01D  F003         	movff	L6470_Init@val+1,CMD_Send@val+1
  2485  000620  C01E  F004         	movff	L6470_Init@val+2,CMD_Send@val+2
  2486  000624  C01F  F005         	movff	L6470_Init@val+3,CMD_Send@val+3
  2487  000628  0E00               	movlw	0
  2488  00062A  6E07               	movwf	CMD_Send@num+1,c
  2489  00062C  0E01               	movlw	1
  2490  00062E  6E06               	movwf	CMD_Send@num,c
  2491  000630  0E16               	movlw	22
  2492  000632  EC1F  F005         	call	_CMD_Send
  2493                           
  2494                           ;L6470.c: 96:      config.DT = 0x2F88 ;
  2495  000636  0E2F               	movlw	47
  2496  000638  6E1A               	movwf	L6470_Init@config+1,c
  2497  00063A  0E88               	movlw	136
  2498  00063C  6E19               	movwf	L6470_Init@config,c
  2499                           
  2500                           ;L6470.c: 97:      config.OSC_SEL = 0 ;
  2501  00063E  0EF8               	movlw	-8
  2502  000640  1619               	andwf	L6470_Init@config,f,c
  2503                           
  2504                           ;L6470.c: 98:      config.EXT_CLK = 0 ;
  2505  000642  9619               	bcf	L6470_Init@config,3,c
  2506                           
  2507                           ;L6470.c: 99:      config.SW_MODE = 1 ;
  2508  000644  8819               	bsf	L6470_Init@config,4,c
  2509                           
  2510                           ;L6470.c: 100:      val = config.DT ;
  2511  000646  C019  F01C         	movff	L6470_Init@config,L6470_Init@val
  2512  00064A  C01A  F01D         	movff	L6470_Init@config+1,L6470_Init@val+1
  2513  00064E  6A1E               	clrf	L6470_Init@val+2,c
  2514  000650  6A1F               	clrf	L6470_Init@val+3,c
  2515                           
  2516                           ;L6470.c: 101:      CMD_Send(0x18,val,2) ;
  2517  000652  C01C  F002         	movff	L6470_Init@val,CMD_Send@val
  2518  000656  C01D  F003         	movff	L6470_Init@val+1,CMD_Send@val+1
  2519  00065A  C01E  F004         	movff	L6470_Init@val+2,CMD_Send@val+2
  2520  00065E  C01F  F005         	movff	L6470_Init@val+3,CMD_Send@val+3
  2521  000662  0E00               	movlw	0
  2522  000664  6E07               	movwf	CMD_Send@num+1,c
  2523  000666  0E02               	movlw	2
  2524  000668  6E06               	movwf	CMD_Send@num,c
  2525  00066A  0E18               	movlw	24
  2526  00066C  EC1F  F005         	call	_CMD_Send
  2527                           
  2528                           ;L6470.c: 102:      return L6470_GetRegister(0x19,2) ;
  2529  000670  0E00               	movlw	0
  2530  000672  6E03               	movwf	L6470_GetRegister@num+1,c
  2531  000674  0E02               	movlw	2
  2532  000676  6E02               	movwf	L6470_GetRegister@num,c
  2533  000678  0E19               	movlw	25
  2534  00067A  ECC0  F004         	call	_L6470_GetRegister
  2535  00067E  C002  F015         	movff	?_L6470_GetRegister,?_L6470_Init
  2536  000682  C003  F016         	movff	?_L6470_GetRegister+1,?_L6470_Init+1
  2537  000686  C004  F017         	movff	?_L6470_GetRegister+2,?_L6470_Init+2
  2538  00068A  C005  F018         	movff	?_L6470_GetRegister+3,?_L6470_Init+3
  2539  00068E  0012               	return		;funcret
  2540  000690                     __end_of_L6470_Init:
  2541                           	opt callstack 0
  2542                           
  2543 ;; *************** function _L6470_GetRegister *****************
  2544 ;; Defined at:
  2545 ;;		line 112 in file "L6470.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  regadrs         1    wreg     unsigned char 
  2548 ;;  num             2    1[COMRAM] int 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  regadrs         1   15[COMRAM] unsigned char 
  2551 ;;  ans             4   16[COMRAM] unsigned long 
  2552 ;;  dt              4    9[COMRAM] unsigned long 
  2553 ;;  i               2   13[COMRAM] int 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  4    1[COMRAM] unsigned long 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2564 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2565 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2566 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2567 ;;Total ram usage:       19 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    2
  2570 ;; This function calls:
  2571 ;;		_SPI_transfer
  2572 ;; This function is called by:
  2573 ;;		_L6470_Init
  2574 ;;		_L6470_ALARM
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text14
  2579  000980                     __ptext14:
  2580                           	opt callstack 0
  2581  000980                     _L6470_GetRegister:
  2582                           	opt callstack 27
  2583                           
  2584                           ;incstack = 0
  2585                           ;L6470_GetRegister@regadrs stored from wreg
  2586  000980  6E10               	movwf	L6470_GetRegister@regadrs,c
  2587                           
  2588                           ;L6470.c: 112: unsigned long L6470_GetRegister(char regadrs,int num);L6470.c: 113: {;L64
      +                          70.c: 114:      unsigned long ans , dt ;;L6470.c: 115:      int i ;;L6470.c: 117:      P
      +                          ORTBbits.RB0 = 0 ;
  2589  000982  9081               	bcf	3969,0,c	;volatile
  2590                           
  2591                           ;L6470.c: 118:      if (regadrs == 0x19) SPI_transfer(0xD0) ;
  2592  000984  0E19               	movlw	25
  2593  000986  1810               	xorwf	L6470_GetRegister@regadrs,w,c
  2594  000988  A4D8               	btfss	status,2,c
  2595  00098A  D004               	goto	l2877
  2596  00098C  0ED0               	movlw	208
  2597  00098E  EC90  F007         	call	_SPI_transfer
  2598  000992  D004               	goto	l2879
  2599  000994                     l2877:
  2600  000994  5010               	movf	L6470_GetRegister@regadrs,w,c
  2601  000996  0920               	iorlw	32
  2602  000998  EC90  F007         	call	_SPI_transfer
  2603  00099C                     l2879:
  2604                           
  2605                           ;L6470.c: 120:      PORTBbits.RB0 = 1 ;
  2606  00099C  8081               	bsf	3969,0,c	;volatile
  2607                           
  2608                           ;L6470.c: 121:      ans = dt = 0 ;
  2609  00099E  0E00               	movlw	0
  2610  0009A0  6E0A               	movwf	L6470_GetRegister@dt,c
  2611  0009A2  0E00               	movlw	0
  2612  0009A4  6E0B               	movwf	L6470_GetRegister@dt+1,c
  2613  0009A6  0E00               	movlw	0
  2614  0009A8  6E0C               	movwf	L6470_GetRegister@dt+2,c
  2615  0009AA  0E00               	movlw	0
  2616  0009AC  6E0D               	movwf	L6470_GetRegister@dt+3,c
  2617  0009AE  C00A  F011         	movff	L6470_GetRegister@dt,L6470_GetRegister@ans
  2618  0009B2  C00B  F012         	movff	L6470_GetRegister@dt+1,L6470_GetRegister@ans+1
  2619  0009B6  C00C  F013         	movff	L6470_GetRegister@dt+2,L6470_GetRegister@ans+2
  2620  0009BA  C00D  F014         	movff	L6470_GetRegister@dt+3,L6470_GetRegister@ans+3
  2621                           
  2622                           ;L6470.c: 122:      for (i=0 ; i<num ; i++) {
  2623  0009BE  0E00               	movlw	0
  2624  0009C0  6E0F               	movwf	L6470_GetRegister@i+1,c
  2625  0009C2  0E00               	movlw	0
  2626  0009C4  6E0E               	movwf	L6470_GetRegister@i,c
  2627  0009C6  D028               	goto	l2897
  2628  0009C8                     l2885:
  2629                           
  2630                           ;L6470.c: 123:           ans = ans << 8 ;
  2631  0009C8  C011  F007         	movff	L6470_GetRegister@ans,??_L6470_GetRegister+1
  2632  0009CC  C012  F008         	movff	L6470_GetRegister@ans+1,??_L6470_GetRegister+2
  2633  0009D0  C013  F009         	movff	L6470_GetRegister@ans+2,??_L6470_GetRegister+3
  2634  0009D4  6A06               	clrf	??_L6470_GetRegister& (0+255),c
  2635  0009D6  C006  F011         	movff	??_L6470_GetRegister,L6470_GetRegister@ans
  2636  0009DA  C007  F012         	movff	??_L6470_GetRegister+1,L6470_GetRegister@ans+1
  2637  0009DE  C008  F013         	movff	??_L6470_GetRegister+2,L6470_GetRegister@ans+2
  2638  0009E2  C009  F014         	movff	??_L6470_GetRegister+3,L6470_GetRegister@ans+3
  2639                           
  2640                           ;L6470.c: 124:           PORTBbits.RB0 = 0 ;
  2641  0009E6  9081               	bcf	3969,0,c	;volatile
  2642                           
  2643                           ;L6470.c: 125:           dt = SPI_transfer(0x00) ;
  2644  0009E8  0E00               	movlw	0
  2645  0009EA  EC90  F007         	call	_SPI_transfer
  2646  0009EE  6E06               	movwf	??_L6470_GetRegister& (0+255),c
  2647  0009F0  5006               	movf	??_L6470_GetRegister,w,c
  2648  0009F2  6E0A               	movwf	L6470_GetRegister@dt,c
  2649  0009F4  6A0B               	clrf	L6470_GetRegister@dt+1,c
  2650  0009F6  6A0C               	clrf	L6470_GetRegister@dt+2,c
  2651  0009F8  6A0D               	clrf	L6470_GetRegister@dt+3,c
  2652                           
  2653                           ;L6470.c: 126:           PORTBbits.RB0 = 1 ;
  2654  0009FA  8081               	bsf	3969,0,c	;volatile
  2655                           
  2656                           ;L6470.c: 127:           ans = ans | dt ;
  2657  0009FC  500A               	movf	L6470_GetRegister@dt,w,c
  2658  0009FE  1011               	iorwf	L6470_GetRegister@ans,w,c
  2659  000A00  6E11               	movwf	L6470_GetRegister@ans,c
  2660  000A02  500B               	movf	L6470_GetRegister@dt+1,w,c
  2661  000A04  1012               	iorwf	L6470_GetRegister@ans+1,w,c
  2662  000A06  6E12               	movwf	L6470_GetRegister@ans+1,c
  2663  000A08  500C               	movf	L6470_GetRegister@dt+2,w,c
  2664  000A0A  1013               	iorwf	L6470_GetRegister@ans+2,w,c
  2665  000A0C  6E13               	movwf	L6470_GetRegister@ans+2,c
  2666  000A0E  500D               	movf	L6470_GetRegister@dt+3,w,c
  2667  000A10  1014               	iorwf	L6470_GetRegister@ans+3,w,c
  2668  000A12  6E14               	movwf	L6470_GetRegister@ans+3,c
  2669                           
  2670                           ;L6470.c: 128:      }
  2671  000A14  4A0E               	infsnz	L6470_GetRegister@i,f,c
  2672  000A16  2A0F               	incf	L6470_GetRegister@i+1,f,c
  2673  000A18                     l2897:
  2674  000A18  5002               	movf	L6470_GetRegister@num,w,c
  2675  000A1A  5C0E               	subwf	L6470_GetRegister@i,w,c
  2676  000A1C  500F               	movf	L6470_GetRegister@i+1,w,c
  2677  000A1E  0A80               	xorlw	128
  2678  000A20  6E06               	movwf	??_L6470_GetRegister& (0+255),c
  2679  000A22  5003               	movf	L6470_GetRegister@num+1,w,c
  2680  000A24  0A80               	xorlw	128
  2681  000A26  5806               	subwfb	??_L6470_GetRegister& (0+255),w,c
  2682  000A28  A0D8               	btfss	status,0,c
  2683  000A2A  D7CE               	goto	l2885
  2684                           
  2685                           ;L6470.c: 129:      return ans ;
  2686  000A2C  C011  F002         	movff	L6470_GetRegister@ans,?_L6470_GetRegister
  2687  000A30  C012  F003         	movff	L6470_GetRegister@ans+1,?_L6470_GetRegister+1
  2688  000A34  C013  F004         	movff	L6470_GetRegister@ans+2,?_L6470_GetRegister+2
  2689  000A38  C014  F005         	movff	L6470_GetRegister@ans+3,?_L6470_GetRegister+3
  2690  000A3C  0012               	return		;funcret
  2691  000A3E                     __end_of_L6470_GetRegister:
  2692                           	opt callstack 0
  2693                           
  2694 ;; *************** function _CMD_Send *****************
  2695 ;; Defined at:
  2696 ;;		line 27 in file "L6470.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  cmd             1    wreg     unsigned char 
  2699 ;;  val             4    1[COMRAM] unsigned long 
  2700 ;;  num             2    5[COMRAM] int 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  cmd             1   15[COMRAM] unsigned char 
  2703 ;;  dt              4   11[COMRAM] unsigned char [4]
  2704 ;;  i               2   16[COMRAM] int 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2714 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2715 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2716 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2717 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;Total ram usage:       17 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    2
  2721 ;; This function calls:
  2722 ;;		_SPI_transfer
  2723 ;; This function is called by:
  2724 ;;		_L6470_Init
  2725 ;;		_L6470_Run
  2726 ;;		_L6470_Move
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           	psect	text15
  2731  000A3E                     __ptext15:
  2732                           	opt callstack 0
  2733  000A3E                     _CMD_Send:
  2734                           	opt callstack 25
  2735                           
  2736                           ;incstack = 0
  2737                           ;CMD_Send@cmd stored from wreg
  2738  000A3E  6E10               	movwf	CMD_Send@cmd,c
  2739                           
  2740                           ;L6470.c: 27: void CMD_Send(char cmd,unsigned long val,int num);L6470.c: 28: {;L6470.c: 
      +                          29:      unsigned char dt[4] ;;L6470.c: 30:      int i ;;L6470.c: 32:      for (i=0 ; i<
      +                          num ; i++) {
  2741  000A40  0E00               	movlw	0
  2742  000A42  6E12               	movwf	CMD_Send@i+1,c
  2743  000A44  0E00               	movlw	0
  2744  000A46  6E11               	movwf	CMD_Send@i,c
  2745  000A48  D021               	goto	l2693
  2746  000A4A                     l2687:
  2747                           
  2748                           ;L6470.c: 33:           dt[i] = val & 0xff ;
  2749  000A4A  0E0C               	movlw	low CMD_Send@dt
  2750  000A4C  2411               	addwf	CMD_Send@i,w,c
  2751  000A4E  6ED9               	movwf	fsr2l,c
  2752  000A50  0E00               	movlw	high CMD_Send@dt
  2753  000A52  2012               	addwfc	CMD_Send@i+1,w,c
  2754  000A54  6EDA               	movwf	fsr2h,c
  2755  000A56  C002  FFDF         	movff	CMD_Send@val,indf2
  2756                           
  2757                           ;L6470.c: 34:           val = val >> 8 ;
  2758  000A5A  C002  F008         	movff	CMD_Send@val,??_CMD_Send
  2759  000A5E  C003  F009         	movff	CMD_Send@val+1,??_CMD_Send+1
  2760  000A62  C004  F00A         	movff	CMD_Send@val+2,??_CMD_Send+2
  2761  000A66  C005  F00B         	movff	CMD_Send@val+3,??_CMD_Send+3
  2762  000A6A  C009  F008         	movff	??_CMD_Send+1,??_CMD_Send
  2763  000A6E  C00A  F009         	movff	??_CMD_Send+2,??_CMD_Send+1
  2764  000A72  C00B  F00A         	movff	??_CMD_Send+3,??_CMD_Send+2
  2765  000A76  6A0B               	clrf	??_CMD_Send+3,c
  2766  000A78  C008  F002         	movff	??_CMD_Send,CMD_Send@val
  2767  000A7C  C009  F003         	movff	??_CMD_Send+1,CMD_Send@val+1
  2768  000A80  C00A  F004         	movff	??_CMD_Send+2,CMD_Send@val+2
  2769  000A84  C00B  F005         	movff	??_CMD_Send+3,CMD_Send@val+3
  2770                           
  2771                           ;L6470.c: 35:      }
  2772  000A88  4A11               	infsnz	CMD_Send@i,f,c
  2773  000A8A  2A12               	incf	CMD_Send@i+1,f,c
  2774  000A8C                     l2693:
  2775  000A8C  5006               	movf	CMD_Send@num,w,c
  2776  000A8E  5C11               	subwf	CMD_Send@i,w,c
  2777  000A90  5012               	movf	CMD_Send@i+1,w,c
  2778  000A92  0A80               	xorlw	128
  2779  000A94  6E08               	movwf	??_CMD_Send& (0+255),c
  2780  000A96  5007               	movf	CMD_Send@num+1,w,c
  2781  000A98  0A80               	xorlw	128
  2782  000A9A  5808               	subwfb	??_CMD_Send& (0+255),w,c
  2783  000A9C  A0D8               	btfss	status,0,c
  2784  000A9E  D7D5               	goto	l2687
  2785                           
  2786                           ;L6470.c: 37:      PORTBbits.RB0 = 0 ;
  2787  000AA0  9081               	bcf	3969,0,c	;volatile
  2788                           
  2789                           ;L6470.c: 38:      SPI_transfer(cmd) ;
  2790  000AA2  5010               	movf	CMD_Send@cmd,w,c
  2791  000AA4  EC90  F007         	call	_SPI_transfer
  2792                           
  2793                           ;L6470.c: 39:      PORTBbits.RB0 = 1 ;
  2794  000AA8  8081               	bsf	3969,0,c	;volatile
  2795                           
  2796                           ;L6470.c: 40:      switch (num) {
  2797  000AAA  D010               	goto	l2713
  2798  000AAC                     l417:
  2799                           
  2800                           ;L6470.c: 42:                PORTBbits.RB0 = 0 ;
  2801  000AAC  9081               	bcf	3969,0,c	;volatile
  2802                           
  2803                           ;L6470.c: 43:                SPI_transfer(dt[2]) ;
  2804  000AAE  500E               	movf	CMD_Send@dt+2,w,c
  2805  000AB0  EC90  F007         	call	_SPI_transfer
  2806                           
  2807                           ;L6470.c: 44:                PORTBbits.RB0 = 1 ;
  2808  000AB4  8081               	bsf	3969,0,c	;volatile
  2809  000AB6                     l2703:
  2810                           
  2811                           ;L6470.c: 46:                PORTBbits.RB0 = 0 ;
  2812  000AB6  9081               	bcf	3969,0,c	;volatile
  2813                           
  2814                           ;L6470.c: 47:                SPI_transfer(dt[1]) ;
  2815  000AB8  500D               	movf	CMD_Send@dt+1,w,c
  2816  000ABA  EC90  F007         	call	_SPI_transfer
  2817                           
  2818                           ;L6470.c: 48:                PORTBbits.RB0 = 1 ;
  2819  000ABE  8081               	bsf	3969,0,c	;volatile
  2820  000AC0                     l2707:
  2821                           
  2822                           ;L6470.c: 50:                PORTBbits.RB0 = 0 ;
  2823  000AC0  9081               	bcf	3969,0,c	;volatile
  2824                           
  2825                           ;L6470.c: 51:                SPI_transfer(dt[0]) ;
  2826  000AC2  500C               	movf	CMD_Send@dt,w,c
  2827  000AC4  EC90  F007         	call	_SPI_transfer
  2828                           
  2829                           ;L6470.c: 52:                PORTBbits.RB0 = 1 ;
  2830  000AC8  8081               	bsf	3969,0,c	;volatile
  2831                           
  2832                           ;L6470.c: 53:                break ;
  2833  000ACA  0012               	return	
  2834  000ACC                     l2713:
  2835  000ACC  C006  F008         	movff	CMD_Send@num,??_CMD_Send
  2836  000AD0  C007  F009         	movff	CMD_Send@num+1,??_CMD_Send+1
  2837                           
  2838                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2839                           ; Switch size 1, requested type "simple"
  2840                           ; Number of cases is 1, Range of values is 0 to 0
  2841                           ; switch strategies available:
  2842                           ; Name         Instructions Cycles
  2843                           ; simple_byte            4     3 (average)
  2844                           ;	Chosen strategy is simple_byte
  2845  000AD4  5009               	movf	??_CMD_Send+1,w,c
  2846  000AD6  0A00               	xorlw	0	; case 0
  2847  000AD8  A4D8               	btfss	status,2,c
  2848  000ADA  0012               	return	
  2849                           
  2850                           ; Switch size 1, requested type "simple"
  2851                           ; Number of cases is 3, Range of values is 1 to 3
  2852                           ; switch strategies available:
  2853                           ; Name         Instructions Cycles
  2854                           ; simple_byte           10     6 (average)
  2855                           ;	Chosen strategy is simple_byte
  2856  000ADC  5008               	movf	??_CMD_Send,w,c
  2857  000ADE  0A01               	xorlw	1	; case 1
  2858  000AE0  B4D8               	btfsc	status,2,c
  2859  000AE2  D7EE               	goto	l2707
  2860  000AE4  0A03               	xorlw	3	; case 2
  2861  000AE6  B4D8               	btfsc	status,2,c
  2862  000AE8  D7E6               	goto	l2703
  2863  000AEA  0A01               	xorlw	1	; case 3
  2864  000AEC  A4D8               	btfss	status,2,c
  2865  000AEE  0012               	return	
  2866  000AF0  D7DD               	goto	l417
  2867  000AF2                     __end_of_CMD_Send:
  2868                           	opt callstack 0
  2869                           
  2870 ;; *************** function _SPI_transfer *****************
  2871 ;; Defined at:
  2872 ;;		line 119 in file "SPIlib.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;  dt              1    wreg     unsigned char 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;  dt              1    0[COMRAM] unsigned char 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      unsigned char 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2890 ;;Total ram usage:        1 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    1
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		_CMD_Send
  2897 ;;		_L6470_Init
  2898 ;;		_L6470_GetRegister
  2899 ;;		_L6470_Stop
  2900 ;;		_L6470_CMD
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text16
  2905  000F20                     __ptext16:
  2906                           	opt callstack 0
  2907  000F20                     _SPI_transfer:
  2908                           	opt callstack 26
  2909                           
  2910                           ;incstack = 0
  2911                           ;SPI_transfer@dt stored from wreg
  2912  000F20  6E01               	movwf	SPI_transfer@dt,c
  2913                           
  2914                           ;SPIlib.c: 119: unsigned char SPI_transfer(char dt);SPIlib.c: 120: {;SPIlib.c: 121:     
      +                           SSPBUF = dt ;
  2915  000F22  C001  FFC9         	movff	SPI_transfer@dt,4041	;volatile
  2916  000F26                     l792:
  2917  000F26  A69E               	btfss	3998,3,c	;volatile
  2918  000F28  D7FE               	goto	l792
  2919                           
  2920                           ;SPIlib.c: 123:      PIR1bits.SSPIF = 0 ;
  2921  000F2A  969E               	bcf	3998,3,c	;volatile
  2922                           
  2923                           ;SPIlib.c: 124:      return SSPBUF ;
  2924  000F2C  50C9               	movf	4041,w,c	;volatile
  2925  000F2E  0012               	return		;funcret
  2926  000F30                     __end_of_SPI_transfer:
  2927                           	opt callstack 0
  2928                           
  2929 ;; *************** function _ECAN_Initialize *****************
  2930 ;; Defined at:
  2931 ;;		line 62 in file "mcc_generated_files/ecan.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;		None
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;		None
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2947 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2948 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2949 ;;Total ram usage:        1 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_main
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           	psect	text17
  2960  000AF2                     __ptext17:
  2961                           	opt callstack 0
  2962  000AF2                     _ECAN_Initialize:
  2963                           	opt callstack 29
  2964                           
  2965                           ;mcc_generated_files/ecan.c: 64:     CANCON = 0x80;
  2966                           
  2967                           ;incstack = 0
  2968  000AF2  0E80               	movlw	128
  2969  000AF4  6E6F               	movwf	3951,c	;volatile
  2970  000AF6                     l2929:
  2971  000AF6  506E               	movf	3950,w,c	;volatile
  2972  000AF8  0BE0               	andlw	224
  2973  000AFA  0A80               	xorlw	128
  2974  000AFC  A4D8               	btfss	status,2,c
  2975  000AFE  D7FB               	goto	l2929
  2976                           
  2977                           ;mcc_generated_files/ecan.c: 70:     ECANCON = 0x00;
  2978  000B00  0E00               	movlw	0
  2979  000B02  6E72               	movwf	3954,c	;volatile
  2980                           
  2981                           ;mcc_generated_files/ecan.c: 75:     CIOCON = 0x20;
  2982  000B04  0E20               	movlw	32
  2983  000B06  6E70               	movwf	3952,c	;volatile
  2984                           
  2985                           ;mcc_generated_files/ecan.c: 86:     RXB0CONbits.RXM0 = 1;
  2986  000B08  8A60               	bsf	3936,5,c	;volatile
  2987                           
  2988                           ;mcc_generated_files/ecan.c: 87:     RXB0CONbits.RXM1 = 1;
  2989  000B0A  8C60               	bsf	3936,6,c	;volatile
  2990                           
  2991                           ;mcc_generated_files/ecan.c: 91:     RXM0EIDH = 0xFF;
  2992  000B0C  010E               	movlb	14	; () banked
  2993  000B0E  69FA               	setf	250,b	;volatile
  2994                           
  2995                           ; BSR set to: 14
  2996                           ;mcc_generated_files/ecan.c: 92:     RXM0EIDL = 0xFF;
  2997  000B10  69FB               	setf	251,b	;volatile
  2998                           
  2999                           ; BSR set to: 14
  3000                           ;mcc_generated_files/ecan.c: 93:     RXM0SIDH = 0xFF;
  3001  000B12  69F8               	setf	248,b	;volatile
  3002                           
  3003                           ;mcc_generated_files/ecan.c: 94:     RXM0SIDL = 0xE3;
  3004  000B14  0EE3               	movlw	227
  3005  000B16  6FF9               	movwf	249,b	;volatile
  3006                           
  3007                           ; BSR set to: 14
  3008                           ;mcc_generated_files/ecan.c: 95:     RXM1EIDH = 0xFF;
  3009  000B18  69FE               	setf	254,b	;volatile
  3010                           
  3011                           ; BSR set to: 14
  3012                           ;mcc_generated_files/ecan.c: 96:     RXM1EIDL = 0xFF;
  3013  000B1A  69FF               	setf	255,b	;volatile
  3014                           
  3015                           ; BSR set to: 14
  3016                           ;mcc_generated_files/ecan.c: 97:     RXM1SIDH = 0xFF;
  3017  000B1C  69FC               	setf	252,b	;volatile
  3018                           
  3019                           ;mcc_generated_files/ecan.c: 98:     RXM1SIDL = 0xE3;
  3020  000B1E  0EE3               	movlw	227
  3021  000B20  6FFD               	movwf	253,b	;volatile
  3022                           
  3023                           ;mcc_generated_files/ecan.c: 103:     RXF0EIDH = 0x00;
  3024  000B22  0E00               	movlw	0
  3025  000B24  6FE2               	movwf	226,b	;volatile
  3026                           
  3027                           ;mcc_generated_files/ecan.c: 104:     RXF0EIDL = 0x00;
  3028  000B26  0E00               	movlw	0
  3029  000B28  6FE3               	movwf	227,b	;volatile
  3030                           
  3031                           ;mcc_generated_files/ecan.c: 105:     RXF0SIDH = 0x24;
  3032  000B2A  0E24               	movlw	36
  3033  000B2C  6FE0               	movwf	224,b	;volatile
  3034                           
  3035                           ;mcc_generated_files/ecan.c: 106:     RXF0SIDL = 0x60;
  3036  000B2E  0E60               	movlw	96
  3037  000B30  6FE1               	movwf	225,b	;volatile
  3038                           
  3039                           ;mcc_generated_files/ecan.c: 107:     RXF1EIDH = 0x00;
  3040  000B32  0E00               	movlw	0
  3041  000B34  6FE6               	movwf	230,b	;volatile
  3042                           
  3043                           ;mcc_generated_files/ecan.c: 108:     RXF1EIDL = 0x00;
  3044  000B36  0E00               	movlw	0
  3045  000B38  6FE7               	movwf	231,b	;volatile
  3046                           
  3047                           ;mcc_generated_files/ecan.c: 109:     RXF1SIDH = 0x00;
  3048  000B3A  0E00               	movlw	0
  3049  000B3C  6FE4               	movwf	228,b	;volatile
  3050                           
  3051                           ;mcc_generated_files/ecan.c: 110:     RXF1SIDL = 0x00;
  3052  000B3E  0E00               	movlw	0
  3053  000B40  6FE5               	movwf	229,b	;volatile
  3054                           
  3055                           ;mcc_generated_files/ecan.c: 111:     RXF2EIDH = 0x00;
  3056  000B42  0E00               	movlw	0
  3057  000B44  6FEA               	movwf	234,b	;volatile
  3058                           
  3059                           ;mcc_generated_files/ecan.c: 112:     RXF2EIDL = 0x00;
  3060  000B46  0E00               	movlw	0
  3061  000B48  6FEB               	movwf	235,b	;volatile
  3062                           
  3063                           ;mcc_generated_files/ecan.c: 113:     RXF2SIDH = 0x00;
  3064  000B4A  0E00               	movlw	0
  3065  000B4C  6FE8               	movwf	232,b	;volatile
  3066                           
  3067                           ;mcc_generated_files/ecan.c: 114:     RXF2SIDL = 0x00;
  3068  000B4E  0E00               	movlw	0
  3069  000B50  6FE9               	movwf	233,b	;volatile
  3070                           
  3071                           ;mcc_generated_files/ecan.c: 115:     RXF3EIDH = 0x00;
  3072  000B52  0E00               	movlw	0
  3073  000B54  6FEE               	movwf	238,b	;volatile
  3074                           
  3075                           ;mcc_generated_files/ecan.c: 116:     RXF3EIDL = 0x00;
  3076  000B56  0E00               	movlw	0
  3077  000B58  6FEF               	movwf	239,b	;volatile
  3078                           
  3079                           ;mcc_generated_files/ecan.c: 117:     RXF3SIDH = 0x00;
  3080  000B5A  0E00               	movlw	0
  3081  000B5C  6FEC               	movwf	236,b	;volatile
  3082                           
  3083                           ;mcc_generated_files/ecan.c: 118:     RXF3SIDL = 0x00;
  3084  000B5E  0E00               	movlw	0
  3085  000B60  6FED               	movwf	237,b	;volatile
  3086                           
  3087                           ;mcc_generated_files/ecan.c: 119:     RXF4EIDH = 0x00;
  3088  000B62  0E00               	movlw	0
  3089  000B64  6FF2               	movwf	242,b	;volatile
  3090                           
  3091                           ;mcc_generated_files/ecan.c: 120:     RXF4EIDL = 0x00;
  3092  000B66  0E00               	movlw	0
  3093  000B68  6FF3               	movwf	243,b	;volatile
  3094                           
  3095                           ;mcc_generated_files/ecan.c: 121:     RXF4SIDH = 0x00;
  3096  000B6A  0E00               	movlw	0
  3097  000B6C  6FF0               	movwf	240,b	;volatile
  3098                           
  3099                           ;mcc_generated_files/ecan.c: 122:     RXF4SIDL = 0x00;
  3100  000B6E  0E00               	movlw	0
  3101  000B70  6FF1               	movwf	241,b	;volatile
  3102                           
  3103                           ;mcc_generated_files/ecan.c: 123:     RXF5EIDH = 0x00;
  3104  000B72  0E00               	movlw	0
  3105  000B74  6FF6               	movwf	246,b	;volatile
  3106                           
  3107                           ;mcc_generated_files/ecan.c: 124:     RXF5EIDL = 0x00;
  3108  000B76  0E00               	movlw	0
  3109  000B78  6FF7               	movwf	247,b	;volatile
  3110                           
  3111                           ;mcc_generated_files/ecan.c: 125:     RXF5SIDH = 0x00;
  3112  000B7A  0E00               	movlw	0
  3113  000B7C  6FF4               	movwf	244,b	;volatile
  3114                           
  3115                           ;mcc_generated_files/ecan.c: 126:     RXF5SIDL = 0x00;
  3116  000B7E  0E00               	movlw	0
  3117  000B80  6FF5               	movwf	245,b	;volatile
  3118                           
  3119                           ;mcc_generated_files/ecan.c: 141:     BRGCON1 = 0x01;
  3120  000B82  0E01               	movlw	1
  3121  000B84  6F43               	movwf	67,b	;volatile
  3122                           
  3123                           ;mcc_generated_files/ecan.c: 142:     BRGCON2 = 0x98;
  3124  000B86  0E98               	movlw	152
  3125  000B88  6F44               	movwf	68,b	;volatile
  3126                           
  3127                           ;mcc_generated_files/ecan.c: 143:     BRGCON3 = 0x01;
  3128  000B8A  0E01               	movlw	1
  3129  000B8C  6F45               	movwf	69,b	;volatile
  3130                           
  3131                           ;mcc_generated_files/ecan.c: 145:     CANCON = 0x00;
  3132  000B8E  0E00               	movlw	0
  3133  000B90  6E6F               	movwf	3951,c	;volatile
  3134  000B92                     l2949:
  3135  000B92  CF6E F001          	movff	3950,??_ECAN_Initialize	;volatile
  3136  000B96  0EE0               	movlw	224
  3137  000B98  1601               	andwf	??_ECAN_Initialize,f,c
  3138  000B9A  B4D8               	btfsc	status,2,c
  3139  000B9C  0012               	return	
  3140  000B9E  D7F9               	goto	l2949
  3141  000BA0                     __end_of_ECAN_Initialize:
  3142                           	opt callstack 0
  3143                           
  3144 ;; *************** function _CAN_receive *****************
  3145 ;; Defined at:
  3146 ;;		line 241 in file "mcc_generated_files/ecan.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  tempCanMsg      2   19[COMRAM] PTR struct .
  3149 ;;		 -> rxMessage(14), 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  returnValue     1   21[COMRAM] unsigned char 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      unsigned char 
  3154 ;; Registers used:
  3155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3165 ;;Total ram usage:        3 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    2
  3168 ;; This function calls:
  3169 ;;		_convertReg2ExtendedCANid
  3170 ;;		_convertReg2StandardCANid
  3171 ;; This function is called by:
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text18
  3177  000274                     __ptext18:
  3178                           	opt callstack 0
  3179  000274                     _CAN_receive:
  3180                           	opt callstack 28
  3181                           
  3182                           ;mcc_generated_files/ecan.c: 241: uint8_t CAN_receive(uCAN_MSG *tempCanMsg);mcc_generate
      +                          d_files/ecan.c: 242: {;mcc_generated_files/ecan.c: 243:     uint8_t returnValue = 0;
  3183                           
  3184                           ;incstack = 0
  3185  000274  0E00               	movlw	0
  3186  000276  6E16               	movwf	CAN_receive@returnValue,c
  3187                           
  3188                           ;mcc_generated_files/ecan.c: 246:     if (RXB0CONbits.RXFUL != 0)
  3189  000278  AE60               	btfss	3936,7,c	;volatile
  3190  00027A  D085               	goto	l256
  3191                           
  3192                           ;mcc_generated_files/ecan.c: 247:     {;mcc_generated_files/ecan.c: 248:         if ((RX
      +                          B0SIDL & 0x08) == 0x08)
  3193  00027C  A662               	btfss	3938,3,c	;volatile
  3194  00027E  D01E               	goto	l2961
  3195                           
  3196                           ;mcc_generated_files/ecan.c: 249:         {;mcc_generated_files/ecan.c: 251:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  3197  000280  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3198  000284  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3199  000288  0E02               	movlw	2
  3200  00028A  6EDF               	movwf	indf2,c
  3201                           
  3202                           ;mcc_generated_files/ecan.c: 252:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB0EIDH, RXB0EIDL, RXB0SIDH, RXB0SIDL);
  3203  00028C  CF64 F001          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  3204  000290  CF61 F002          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  3205  000294  CF62 F003          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  3206  000298  5063               	movf	3939,w,c	;volatile
  3207  00029A  EC48  F003         	call	_convertReg2ExtendedCANid
  3208  00029E  EE20 F001          	lfsr	2,1
  3209  0002A2  5014               	movf	CAN_receive@tempCanMsg,w,c
  3210  0002A4  26D9               	addwf	fsr2l,f,c
  3211  0002A6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3212  0002A8  22DA               	addwfc	fsr2h,f,c
  3213  0002AA  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  3214  0002AE  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  3215  0002B2  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  3216  0002B6  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  3217                           
  3218                           ;mcc_generated_files/ecan.c: 253:         }
  3219  0002BA  D019               	goto	l2965
  3220  0002BC                     l2961:
  3221                           
  3222                           ;mcc_generated_files/ecan.c: 255:         {;mcc_generated_files/ecan.c: 257:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  3223  0002BC  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3224  0002C0  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3225  0002C4  0E01               	movlw	1
  3226  0002C6  6EDF               	movwf	indf2,c
  3227                           
  3228                           ;mcc_generated_files/ecan.c: 258:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB0SIDH, RXB0SIDL);
  3229  0002C8  CF62 F001          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  3230  0002CC  5061               	movf	3937,w,c	;volatile
  3231  0002CE  EC52  F006         	call	_convertReg2StandardCANid
  3232  0002D2  EE20 F001          	lfsr	2,1
  3233  0002D6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3234  0002D8  26D9               	addwf	fsr2l,f,c
  3235  0002DA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3236  0002DC  22DA               	addwfc	fsr2h,f,c
  3237  0002DE  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  3238  0002E2  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  3239  0002E6  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  3240  0002EA  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  3241  0002EE                     l2965:
  3242                           
  3243                           ;mcc_generated_files/ecan.c: 261:         tempCanMsg->frame.dlc = RXB0DLC;
  3244  0002EE  EE20 F005          	lfsr	2,5
  3245  0002F2  5014               	movf	CAN_receive@tempCanMsg,w,c
  3246  0002F4  26D9               	addwf	fsr2l,f,c
  3247  0002F6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3248  0002F8  22DA               	addwfc	fsr2h,f,c
  3249  0002FA  CF65 FFDF          	movff	3941,indf2	;volatile
  3250                           
  3251                           ;mcc_generated_files/ecan.c: 262:         tempCanMsg->frame.data0 = RXB0D0;
  3252  0002FE  EE20 F006          	lfsr	2,6
  3253  000302  5014               	movf	CAN_receive@tempCanMsg,w,c
  3254  000304  26D9               	addwf	fsr2l,f,c
  3255  000306  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3256  000308  22DA               	addwfc	fsr2h,f,c
  3257  00030A  CF66 FFDF          	movff	3942,indf2	;volatile
  3258                           
  3259                           ;mcc_generated_files/ecan.c: 263:         tempCanMsg->frame.data1 = RXB0D1;
  3260  00030E  EE20 F007          	lfsr	2,7
  3261  000312  5014               	movf	CAN_receive@tempCanMsg,w,c
  3262  000314  26D9               	addwf	fsr2l,f,c
  3263  000316  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3264  000318  22DA               	addwfc	fsr2h,f,c
  3265  00031A  CF67 FFDF          	movff	3943,indf2	;volatile
  3266                           
  3267                           ;mcc_generated_files/ecan.c: 264:         tempCanMsg->frame.data2 = RXB0D2;
  3268  00031E  EE20 F008          	lfsr	2,8
  3269  000322  5014               	movf	CAN_receive@tempCanMsg,w,c
  3270  000324  26D9               	addwf	fsr2l,f,c
  3271  000326  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3272  000328  22DA               	addwfc	fsr2h,f,c
  3273  00032A  CF68 FFDF          	movff	3944,indf2	;volatile
  3274                           
  3275                           ;mcc_generated_files/ecan.c: 265:         tempCanMsg->frame.data3 = RXB0D3;
  3276  00032E  EE20 F009          	lfsr	2,9
  3277  000332  5014               	movf	CAN_receive@tempCanMsg,w,c
  3278  000334  26D9               	addwf	fsr2l,f,c
  3279  000336  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3280  000338  22DA               	addwfc	fsr2h,f,c
  3281  00033A  CF69 FFDF          	movff	3945,indf2	;volatile
  3282                           
  3283                           ;mcc_generated_files/ecan.c: 266:         tempCanMsg->frame.data4 = RXB0D4;
  3284  00033E  EE20 F00A          	lfsr	2,10
  3285  000342  5014               	movf	CAN_receive@tempCanMsg,w,c
  3286  000344  26D9               	addwf	fsr2l,f,c
  3287  000346  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3288  000348  22DA               	addwfc	fsr2h,f,c
  3289  00034A  CF6A FFDF          	movff	3946,indf2	;volatile
  3290                           
  3291                           ;mcc_generated_files/ecan.c: 267:         tempCanMsg->frame.data5 = RXB0D5;
  3292  00034E  EE20 F00B          	lfsr	2,11
  3293  000352  5014               	movf	CAN_receive@tempCanMsg,w,c
  3294  000354  26D9               	addwf	fsr2l,f,c
  3295  000356  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3296  000358  22DA               	addwfc	fsr2h,f,c
  3297  00035A  CF6B FFDF          	movff	3947,indf2	;volatile
  3298                           
  3299                           ;mcc_generated_files/ecan.c: 268:         tempCanMsg->frame.data6 = RXB0D6;
  3300  00035E  EE20 F00C          	lfsr	2,12
  3301  000362  5014               	movf	CAN_receive@tempCanMsg,w,c
  3302  000364  26D9               	addwf	fsr2l,f,c
  3303  000366  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3304  000368  22DA               	addwfc	fsr2h,f,c
  3305  00036A  CF6C FFDF          	movff	3948,indf2	;volatile
  3306                           
  3307                           ;mcc_generated_files/ecan.c: 269:         tempCanMsg->frame.data7 = RXB0D7;
  3308  00036E  EE20 F00D          	lfsr	2,13
  3309  000372  5014               	movf	CAN_receive@tempCanMsg,w,c
  3310  000374  26D9               	addwf	fsr2l,f,c
  3311  000376  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3312  000378  22DA               	addwfc	fsr2h,f,c
  3313  00037A  CF6D FFDF          	movff	3949,indf2	;volatile
  3314                           
  3315                           ;mcc_generated_files/ecan.c: 270:         RXB0CONbits.RXFUL = 0;
  3316  00037E  9E60               	bcf	3936,7,c	;volatile
  3317  000380                     l2985:
  3318                           
  3319                           ;mcc_generated_files/ecan.c: 271:         returnValue = 1;
  3320  000380  0E01               	movlw	1
  3321  000382  6E16               	movwf	CAN_receive@returnValue,c
  3322                           
  3323                           ;mcc_generated_files/ecan.c: 272:     }
  3324  000384  D087               	goto	l3019
  3325  000386                     l256:
  3326  000386  010F               	movlb	15	; () banked
  3327  000388  AF30               	btfss	48,7,b	;volatile
  3328  00038A  D084               	goto	l3019
  3329                           
  3330                           ; BSR set to: 15
  3331                           ;mcc_generated_files/ecan.c: 274:     {;mcc_generated_files/ecan.c: 275:         if ((RX
      +                          B1SIDL & 0x08) == 0x08)
  3332  00038C  A732               	btfss	50,3,b	;volatile
  3333  00038E  D01E               	goto	l2993
  3334                           
  3335                           ; BSR set to: 15
  3336                           ;mcc_generated_files/ecan.c: 276:         {;mcc_generated_files/ecan.c: 278:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  3337  000390  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3338  000394  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3339  000398  0E02               	movlw	2
  3340  00039A  6EDF               	movwf	indf2,c
  3341                           
  3342                           ; BSR set to: 15
  3343                           ;mcc_generated_files/ecan.c: 279:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB1EIDH, RXB1EIDL, RXB1SIDH, RXB1SIDL);
  3344  00039C  CF34 F001          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  3345  0003A0  CF31 F002          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  3346  0003A4  CF32 F003          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  3347  0003A8  5133               	movf	51,w,b	;volatile
  3348  0003AA  EC48  F003         	call	_convertReg2ExtendedCANid
  3349  0003AE  EE20 F001          	lfsr	2,1
  3350  0003B2  5014               	movf	CAN_receive@tempCanMsg,w,c
  3351  0003B4  26D9               	addwf	fsr2l,f,c
  3352  0003B6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3353  0003B8  22DA               	addwfc	fsr2h,f,c
  3354  0003BA  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  3355  0003BE  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  3356  0003C2  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  3357  0003C6  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  3358                           
  3359                           ;mcc_generated_files/ecan.c: 280:         }
  3360  0003CA  D019               	goto	l2997
  3361  0003CC                     l2993:
  3362                           
  3363                           ; BSR set to: 15
  3364                           ;mcc_generated_files/ecan.c: 282:         {;mcc_generated_files/ecan.c: 284:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  3365  0003CC  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3366  0003D0  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3367  0003D4  0E01               	movlw	1
  3368  0003D6  6EDF               	movwf	indf2,c
  3369                           
  3370                           ; BSR set to: 15
  3371                           ;mcc_generated_files/ecan.c: 285:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB1SIDH, RXB1SIDL);
  3372  0003D8  CF32 F001          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  3373  0003DC  5131               	movf	49,w,b	;volatile
  3374  0003DE  EC52  F006         	call	_convertReg2StandardCANid
  3375  0003E2  EE20 F001          	lfsr	2,1
  3376  0003E6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3377  0003E8  26D9               	addwf	fsr2l,f,c
  3378  0003EA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3379  0003EC  22DA               	addwfc	fsr2h,f,c
  3380  0003EE  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  3381  0003F2  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  3382  0003F6  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  3383  0003FA  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  3384  0003FE                     l2997:
  3385                           
  3386                           ;mcc_generated_files/ecan.c: 288:         tempCanMsg->frame.dlc = RXB1DLC;
  3387  0003FE  EE20 F005          	lfsr	2,5
  3388  000402  5014               	movf	CAN_receive@tempCanMsg,w,c
  3389  000404  26D9               	addwf	fsr2l,f,c
  3390  000406  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3391  000408  22DA               	addwfc	fsr2h,f,c
  3392  00040A  CF35 FFDF          	movff	3893,indf2	;volatile
  3393                           
  3394                           ;mcc_generated_files/ecan.c: 289:         tempCanMsg->frame.data0 = RXB1D0;
  3395  00040E  EE20 F006          	lfsr	2,6
  3396  000412  5014               	movf	CAN_receive@tempCanMsg,w,c
  3397  000414  26D9               	addwf	fsr2l,f,c
  3398  000416  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3399  000418  22DA               	addwfc	fsr2h,f,c
  3400  00041A  CF36 FFDF          	movff	3894,indf2	;volatile
  3401                           
  3402                           ;mcc_generated_files/ecan.c: 290:         tempCanMsg->frame.data1 = RXB1D1;
  3403  00041E  EE20 F007          	lfsr	2,7
  3404  000422  5014               	movf	CAN_receive@tempCanMsg,w,c
  3405  000424  26D9               	addwf	fsr2l,f,c
  3406  000426  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3407  000428  22DA               	addwfc	fsr2h,f,c
  3408  00042A  CF37 FFDF          	movff	3895,indf2	;volatile
  3409                           
  3410                           ;mcc_generated_files/ecan.c: 291:         tempCanMsg->frame.data2 = RXB1D2;
  3411  00042E  EE20 F008          	lfsr	2,8
  3412  000432  5014               	movf	CAN_receive@tempCanMsg,w,c
  3413  000434  26D9               	addwf	fsr2l,f,c
  3414  000436  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3415  000438  22DA               	addwfc	fsr2h,f,c
  3416  00043A  CF38 FFDF          	movff	3896,indf2	;volatile
  3417                           
  3418                           ;mcc_generated_files/ecan.c: 292:         tempCanMsg->frame.data3 = RXB1D3;
  3419  00043E  EE20 F009          	lfsr	2,9
  3420  000442  5014               	movf	CAN_receive@tempCanMsg,w,c
  3421  000444  26D9               	addwf	fsr2l,f,c
  3422  000446  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3423  000448  22DA               	addwfc	fsr2h,f,c
  3424  00044A  CF39 FFDF          	movff	3897,indf2	;volatile
  3425                           
  3426                           ;mcc_generated_files/ecan.c: 293:         tempCanMsg->frame.data4 = RXB1D4;
  3427  00044E  EE20 F00A          	lfsr	2,10
  3428  000452  5014               	movf	CAN_receive@tempCanMsg,w,c
  3429  000454  26D9               	addwf	fsr2l,f,c
  3430  000456  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3431  000458  22DA               	addwfc	fsr2h,f,c
  3432  00045A  CF3A FFDF          	movff	3898,indf2	;volatile
  3433                           
  3434                           ;mcc_generated_files/ecan.c: 294:         tempCanMsg->frame.data5 = RXB1D5;
  3435  00045E  EE20 F00B          	lfsr	2,11
  3436  000462  5014               	movf	CAN_receive@tempCanMsg,w,c
  3437  000464  26D9               	addwf	fsr2l,f,c
  3438  000466  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3439  000468  22DA               	addwfc	fsr2h,f,c
  3440  00046A  CF3B FFDF          	movff	3899,indf2	;volatile
  3441                           
  3442                           ;mcc_generated_files/ecan.c: 295:         tempCanMsg->frame.data6 = RXB1D6;
  3443  00046E  EE20 F00C          	lfsr	2,12
  3444  000472  5014               	movf	CAN_receive@tempCanMsg,w,c
  3445  000474  26D9               	addwf	fsr2l,f,c
  3446  000476  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3447  000478  22DA               	addwfc	fsr2h,f,c
  3448  00047A  CF3C FFDF          	movff	3900,indf2	;volatile
  3449                           
  3450                           ;mcc_generated_files/ecan.c: 296:         tempCanMsg->frame.data7 = RXB1D7;
  3451  00047E  EE20 F00D          	lfsr	2,13
  3452  000482  5014               	movf	CAN_receive@tempCanMsg,w,c
  3453  000484  26D9               	addwf	fsr2l,f,c
  3454  000486  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3455  000488  22DA               	addwfc	fsr2h,f,c
  3456  00048A  CF3D FFDF          	movff	3901,indf2	;volatile
  3457                           
  3458                           ;mcc_generated_files/ecan.c: 297:         RXB1CONbits.RXFUL = 0;
  3459  00048E  010F               	movlb	15	; () banked
  3460  000490  9F30               	bcf	48,7,b	;volatile
  3461  000492  D776               	goto	l2985
  3462  000494                     l3019:
  3463                           
  3464                           ;mcc_generated_files/ecan.c: 300:     return (returnValue);
  3465  000494  5016               	movf	CAN_receive@returnValue,w,c
  3466  000496  0012               	return		;funcret
  3467  000498                     __end_of_CAN_receive:
  3468                           	opt callstack 0
  3469                           
  3470 ;; *************** function _convertReg2StandardCANid *****************
  3471 ;; Defined at:
  3472 ;;		line 387 in file "mcc_generated_files/ecan.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  tempRXBn_SID    1    wreg     unsigned char 
  3475 ;;  tempRXBn_SID    1    0[COMRAM] unsigned char 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  tempRXBn_SID    1    6[COMRAM] unsigned char 
  3478 ;;  ConvertedID     4   11[COMRAM] unsigned long 
  3479 ;;  returnValue     4    7[COMRAM] unsigned long 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  4    0[COMRAM] unsigned long 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2, status,0
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3489 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3490 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3491 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3492 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3493 ;;Total ram usage:       15 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; Hardware stack levels required when called:    1
  3496 ;; This function calls:
  3497 ;;		Nothing
  3498 ;; This function is called by:
  3499 ;;		_CAN_receive
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text19
  3504  000CA4                     __ptext19:
  3505                           	opt callstack 0
  3506  000CA4                     _convertReg2StandardCANid:
  3507                           	opt callstack 28
  3508                           
  3509                           ;incstack = 0
  3510                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  3511  000CA4  6E07               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
  3512                           
  3513                           ;mcc_generated_files/ecan.c: 390:     uint32_t ConvertedID;;mcc_generated_files/ecan.c: 
      +                          394:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  3514  000CA6  5007               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
  3515  000CA8  6E05               	movwf	??_convertReg2StandardCANid& (0+255),c
  3516  000CAA  6A06               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
  3517  000CAC  90D8               	bcf	status,0,c
  3518  000CAE  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3519  000CB0  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3520  000CB2  90D8               	bcf	status,0,c
  3521  000CB4  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3522  000CB6  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3523  000CB8  90D8               	bcf	status,0,c
  3524  000CBA  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3525  000CBC  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3526  000CBE  C005  F00C         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  3527  000CC2  C006  F00D         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  3528  000CC6  0E00               	movlw	0
  3529  000CC8  BE0D               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
  3530  000CCA  0EFF               	movlw	-1
  3531  000CCC  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  3532  000CCE  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  3533                           
  3534                           ;mcc_generated_files/ecan.c: 395:     ConvertedID = ConvertedID + (uint32_t)(tempRXBn_SI
      +                          DL >> 5);
  3535  000CD0  C001  F005         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  3536  000CD4  0E05               	movlw	5
  3537  000CD6  6E06               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
  3538  000CD8                     u1165:
  3539  000CD8  90D8               	bcf	status,0,c
  3540  000CDA  3205               	rrcf	??_convertReg2StandardCANid,f,c
  3541  000CDC  2E06               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
  3542  000CDE  D7FC               	goto	u1165
  3543  000CE0  5005               	movf	??_convertReg2StandardCANid,w,c
  3544  000CE2  240C               	addwf	convertReg2StandardCANid@ConvertedID,w,c
  3545  000CE4  6E0C               	movwf	convertReg2StandardCANid@ConvertedID,c
  3546  000CE6  0E00               	movlw	0
  3547  000CE8  200D               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
  3548  000CEA  6E0D               	movwf	convertReg2StandardCANid@ConvertedID+1,c
  3549  000CEC  0E00               	movlw	0
  3550  000CEE  200E               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
  3551  000CF0  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  3552  000CF2  0E00               	movlw	0
  3553  000CF4  200F               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
  3554  000CF6  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  3555                           
  3556                           ;mcc_generated_files/ecan.c: 396:     returnValue = ConvertedID;
  3557  000CF8  C00C  F008         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  3558  000CFC  C00D  F009         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  3559  000D00  C00E  F00A         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  3560  000D04  C00F  F00B         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  3561                           
  3562                           ;mcc_generated_files/ecan.c: 397:     return (returnValue);
  3563  000D08  C008  F001         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  3564  000D0C  C009  F002         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  3565  000D10  C00A  F003         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  3566  000D14  C00B  F004         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  3567  000D18  0012               	return		;funcret
  3568  000D1A                     __end_of_convertReg2StandardCANid:
  3569                           	opt callstack 0
  3570                           
  3571 ;; *************** function _convertReg2ExtendedCANid *****************
  3572 ;; Defined at:
  3573 ;;		line 366 in file "mcc_generated_files/ecan.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  tempRXBn_EID    1    wreg     unsigned char 
  3576 ;;  tempRXBn_EID    1    0[COMRAM] unsigned char 
  3577 ;;  tempRXBn_SID    1    1[COMRAM] unsigned char 
  3578 ;;  tempRXBn_SID    1    2[COMRAM] unsigned char 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  tempRXBn_EID    1    8[COMRAM] unsigned char 
  3581 ;;  ConvertedID     4   15[COMRAM] unsigned long 
  3582 ;;  returnValue     4    9[COMRAM] unsigned long 
  3583 ;;  CAN_standard    1   14[COMRAM] unsigned char 
  3584 ;;  CAN_standard    1   13[COMRAM] unsigned char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  4    0[COMRAM] unsigned long 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3594 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3595 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3596 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3597 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3598 ;;Total ram usage:       19 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    1
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_CAN_receive
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text20
  3609  000690                     __ptext20:
  3610                           	opt callstack 0
  3611  000690                     _convertReg2ExtendedCANid:
  3612                           	opt callstack 28
  3613                           
  3614                           ;incstack = 0
  3615                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  3616  000690  6E09               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
  3617                           
  3618                           ;mcc_generated_files/ecan.c: 369:     uint32_t ConvertedID = 0;
  3619  000692  0E00               	movlw	0
  3620  000694  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3621  000696  0E00               	movlw	0
  3622  000698  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3623  00069A  0E00               	movlw	0
  3624  00069C  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3625  00069E  0E00               	movlw	0
  3626  0006A0  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3627                           
  3628                           ;mcc_generated_files/ecan.c: 370:     uint8_t CAN_standardLo_ID_lo2bits;;mcc_generated_f
      +                          iles/ecan.c: 371:     uint8_t CAN_standardLo_ID_hi3bits;;mcc_generated_files/ecan.c: 373
      +                          :     CAN_standardLo_ID_lo2bits = (uint8_t)(tempRXBn_SIDL & 0x03);
  3629  0006A2  5003               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  3630  0006A4  0B03               	andlw	3
  3631  0006A6  6E0E               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
  3632                           
  3633                           ;mcc_generated_files/ecan.c: 374:     CAN_standardLo_ID_hi3bits = (uint8_t)(tempRXBn_SID
      +                          L >> 5);
  3634  0006A8  3803               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  3635  0006AA  42E8               	rrncf	wreg,f,c
  3636  0006AC  0B07               	andlw	7
  3637  0006AE  6E0F               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
  3638                           
  3639                           ;mcc_generated_files/ecan.c: 375:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  3640  0006B0  5002               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
  3641  0006B2  6E05               	movwf	??_convertReg2ExtendedCANid& (0+255),c
  3642  0006B4  6A06               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
  3643  0006B6  90D8               	bcf	status,0,c
  3644  0006B8  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3645  0006BA  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3646  0006BC  90D8               	bcf	status,0,c
  3647  0006BE  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3648  0006C0  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3649  0006C2  90D8               	bcf	status,0,c
  3650  0006C4  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3651  0006C6  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3652  0006C8  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3653  0006CC  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3654  0006D0  0E00               	movlw	0
  3655  0006D2  BE11               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
  3656  0006D4  0EFF               	movlw	-1
  3657  0006D6  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3658  0006D8  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3659                           
  3660                           ;mcc_generated_files/ecan.c: 376:     ConvertedID = ConvertedID + CAN_standardLo_ID_hi3b
      +                          its;
  3661  0006DA  500F               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
  3662  0006DC  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3663  0006DE  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3664  0006E0  0E00               	movlw	0
  3665  0006E2  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3666  0006E4  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3667  0006E6  0E00               	movlw	0
  3668  0006E8  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3669  0006EA  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3670  0006EC  0E00               	movlw	0
  3671  0006EE  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3672  0006F0  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3673                           
  3674                           ;mcc_generated_files/ecan.c: 377:     ConvertedID = (ConvertedID << 2);
  3675  0006F2  C010  F005         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  3676  0006F6  C011  F006         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  3677  0006FA  C012  F007         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  3678  0006FE  C013  F008         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  3679  000702  0E02               	movlw	2
  3680  000704                     u1155:
  3681  000704  90D8               	bcf	status,0,c
  3682  000706  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3683  000708  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3684  00070A  3607               	rlcf	??_convertReg2ExtendedCANid+2,f,c
  3685  00070C  3608               	rlcf	??_convertReg2ExtendedCANid+3,f,c
  3686  00070E  2EE8               	decfsz	wreg,f,c
  3687  000710  D7F9               	goto	u1155
  3688  000712  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3689  000716  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3690  00071A  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3691  00071E  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3692                           
  3693                           ;mcc_generated_files/ecan.c: 378:     ConvertedID = ConvertedID + CAN_standardLo_ID_lo2b
      +                          its;
  3694  000722  500E               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
  3695  000724  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3696  000726  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3697  000728  0E00               	movlw	0
  3698  00072A  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3699  00072C  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3700  00072E  0E00               	movlw	0
  3701  000730  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3702  000732  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3703  000734  0E00               	movlw	0
  3704  000736  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3705  000738  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3706                           
  3707                           ;mcc_generated_files/ecan.c: 379:     ConvertedID = (ConvertedID << 8);
  3708  00073A  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  3709  00073E  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  3710  000742  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  3711  000746  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  3712  000748  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3713  00074C  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3714  000750  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3715  000754  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3716                           
  3717                           ;mcc_generated_files/ecan.c: 380:     ConvertedID = ConvertedID + tempRXBn_EIDH;
  3718  000758  5009               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
  3719  00075A  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3720  00075C  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3721  00075E  0E00               	movlw	0
  3722  000760  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3723  000762  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3724  000764  0E00               	movlw	0
  3725  000766  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3726  000768  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3727  00076A  0E00               	movlw	0
  3728  00076C  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3729  00076E  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3730                           
  3731                           ;mcc_generated_files/ecan.c: 381:     ConvertedID = (ConvertedID << 8);
  3732  000770  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  3733  000774  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  3734  000778  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  3735  00077C  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  3736  00077E  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3737  000782  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3738  000786  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3739  00078A  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3740                           
  3741                           ;mcc_generated_files/ecan.c: 382:     ConvertedID = ConvertedID + tempRXBn_EIDL;
  3742  00078E  5001               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
  3743  000790  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3744  000792  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3745  000794  0E00               	movlw	0
  3746  000796  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3747  000798  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3748  00079A  0E00               	movlw	0
  3749  00079C  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3750  00079E  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3751  0007A0  0E00               	movlw	0
  3752  0007A2  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3753  0007A4  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3754                           
  3755                           ;mcc_generated_files/ecan.c: 383:     returnValue = ConvertedID;
  3756  0007A6  C010  F00A         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  3757  0007AA  C011  F00B         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  3758  0007AE  C012  F00C         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  3759  0007B2  C013  F00D         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  3760                           
  3761                           ;mcc_generated_files/ecan.c: 384:     return (returnValue);
  3762  0007B6  C00A  F001         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  3763  0007BA  C00B  F002         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  3764  0007BE  C00C  F003         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  3765  0007C2  C00D  F004         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  3766  0007C6  0012               	return		;funcret
  3767  0007C8                     __end_of_convertReg2ExtendedCANid:
  3768                           	opt callstack 0
  3769                           
  3770 ;; *************** function _InterTimer *****************
  3771 ;; Defined at:
  3772 ;;		line 7 in file "servo.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;		None
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      void 
  3779 ;; Registers used:
  3780 ;;		wreg, status,2
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3790 ;;Total ram usage:        0 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		Interrupt level 2
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	intcode
  3800  000008                     __pintcode:
  3801                           	opt callstack 0
  3802  000008                     _InterTimer:
  3803                           	opt callstack 25
  3804                           
  3805                           ;incstack = 0
  3806  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3807                           
  3808                           ;servo.c: 8:     if(PIR1bits.TMR1IF == 1){
  3809  00000A  A09E               	btfss	3998,0,c	;volatile
  3810  00000C  D002               	goto	i2l856
  3811                           
  3812                           ;servo.c: 9:         PORTCbits.RC1 = 0;
  3813  00000E  9282               	bcf	3970,1,c	;volatile
  3814                           
  3815                           ;servo.c: 10:         PIR1bits.TMR1IF = 0;
  3816  000010  909E               	bcf	3998,0,c	;volatile
  3817  000012                     i2l856:
  3818                           
  3819                           ;servo.c: 12:     if(PIR2bits.TMR3IF == 1){
  3820  000012  A2A1               	btfss	4001,1,c	;volatile
  3821  000014  D00B               	goto	i2l858
  3822                           
  3823                           ;servo.c: 13:         PORTCbits.RC1 = 1;
  3824  000016  8282               	bsf	3970,1,c	;volatile
  3825                           
  3826                           ;servo.c: 14:         TMR3H = (55536 >> 8);
  3827  000018  0ED8               	movlw	216
  3828  00001A  6EB3               	movwf	4019,c	;volatile
  3829                           
  3830                           ;servo.c: 15:         TMR3L = (55536 & 0x00ff);
  3831  00001C  0EF0               	movlw	240
  3832  00001E  6EB2               	movwf	4018,c	;volatile
  3833                           
  3834                           ;servo.c: 16:         TMR1H = (T1time >> 8);
  3835  000020  5055               	movf	_T1time+1,w,c
  3836  000022  6ECF               	movwf	4047,c	;volatile
  3837                           
  3838                           ;servo.c: 17:         TMR1L = (T1time & 0x00ff);
  3839  000024  C054  FFCE         	movff	_T1time,4046	;volatile
  3840                           
  3841                           ;servo.c: 18:         PIR1bits.TMR1IF = 0;
  3842  000028  909E               	bcf	3998,0,c	;volatile
  3843                           
  3844                           ;servo.c: 19:         PIR2bits.TMR3IF = 0;
  3845  00002A  92A1               	bcf	4001,1,c	;volatile
  3846  00002C                     i2l858:
  3847  00002C  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3848  00002E  0011               	retfie		f
  3849  000030                     __end_of_InterTimer:
  3850                           	opt callstack 0
  3851  0000                     
  3852                           	psect	rparam
  3853  0000                     
  3854                           	psect	temp
  3855  000056                     btemp:
  3856                           	opt callstack 0
  3857  000056                     	ds	1
  3858  0000                     int$flags	set	btemp
  3859  0000                     wtemp8	set	btemp+1
  3860  0000                     ttemp5	set	btemp+1
  3861  0000                     ttemp6	set	btemp+4
  3862  0000                     ttemp7	set	btemp+8
  3863                           tosu	equ	0xFFF
  3864                           tosh	equ	0xFFE
  3865                           tosl	equ	0xFFD
  3866                           stkptr	equ	0xFFC
  3867                           pclatu	equ	0xFFB
  3868                           pclath	equ	0xFFA
  3869                           pcl	equ	0xFF9
  3870                           tblptru	equ	0xFF8
  3871                           tblptrh	equ	0xFF7
  3872                           tblptrl	equ	0xFF6
  3873                           tablat	equ	0xFF5
  3874                           prodh	equ	0xFF4
  3875                           prodl	equ	0xFF3
  3876                           indf0	equ	0xFEF
  3877                           postinc0	equ	0xFEE
  3878                           postdec0	equ	0xFED
  3879                           preinc0	equ	0xFEC
  3880                           plusw0	equ	0xFEB
  3881                           fsr0h	equ	0xFEA
  3882                           fsr0l	equ	0xFE9
  3883                           wreg	equ	0xFE8
  3884                           indf1	equ	0xFE7
  3885                           postinc1	equ	0xFE6
  3886                           postdec1	equ	0xFE5
  3887                           preinc1	equ	0xFE4
  3888                           plusw1	equ	0xFE3
  3889                           fsr1h	equ	0xFE2
  3890                           fsr1l	equ	0xFE1
  3891                           bsr	equ	0xFE0
  3892                           indf2	equ	0xFDF
  3893                           postinc2	equ	0xFDE
  3894                           postdec2	equ	0xFDD
  3895                           preinc2	equ	0xFDC
  3896                           plusw2	equ	0xFDB
  3897                           fsr2h	equ	0xFDA
  3898                           fsr2l	equ	0xFD9
  3899                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         41
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      89
    BANK0           160      0      14
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    L6470_change@dt	PTR unsigned char  size(2) Largest target is 8
		 -> data(COMRAM[8]), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> rxMessage(BANK0[14]), 


Critical Paths under _main in COMRAM

    _main->_can_recieve
    _can_recieve->_ServoOut
    _ServoOut->___aldiv
    ___aldiv->___lmul
    _L6470_command->_L6470_Move
    _L6470_command->_L6470_Run
    _L6470_Stop->_SPI_transfer
    _L6470_Run->_CMD_Send
    _L6470_Move->_CMD_Send
    _L6470_CMD->_SPI_transfer
    _L6470_Init->_L6470_GetRegister
    _L6470_GetRegister->_SPI_transfer
    _CMD_Send->_SPI_transfer
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _InterTimer in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterTimer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterTimer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterTimer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterTimer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterTimer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterTimer in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterTimer in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterTimer in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   18156
                                             46 COMRAM     6     6      0
                        _CAN_receive
                    _ECAN_Initialize
                          _L6470_CMD
                         _L6470_Init
                          _L6470_Run
                         _L6470_Stop
                           _SPI_Init
                           _ServoOut
                               _Wait
                        _can_recieve
 ---------------------------------------------------------------------------------
 (1) _can_recieve                                         14     0     14    7957
                                             32 COMRAM    14     0     14
                      _L6470_command
                           _ServoOut
 ---------------------------------------------------------------------------------
 (2) _ServoOut                                             6     4      2    1095
                                             26 COMRAM     6     4      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _L6470_command                                        2     2      0    6557
                                             23 COMRAM     2     2      0
                          _L6470_CMD
                         _L6470_Move
                          _L6470_Run
                         _L6470_Stop
                       _L6470_change
 ---------------------------------------------------------------------------------
 (3) _L6470_change                                        15    11      4     419
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (3) _L6470_Stop                                           6     4      2     448
                                              1 COMRAM     6     4      2
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _L6470_Run                                            5     1      4    2823
                                             18 COMRAM     5     1      4
                           _CMD_Send
                       _L6470_change (ARG)
 ---------------------------------------------------------------------------------
 (3) _L6470_Move                                           5     1      4    2519
                                             18 COMRAM     5     1      4
                           _CMD_Send
                       _L6470_change (ARG)
 ---------------------------------------------------------------------------------
 (3) _L6470_CMD                                            2     0      2     348
                                              1 COMRAM     2     0      2
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (1) _Wait                                                 5     3      2     426
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             6     3      3     377
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _L6470_Init                                          13     9      4    2921
                                             20 COMRAM    13     9      4
                           _CMD_Send
                  _L6470_GetRegister
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (2) _L6470_GetRegister                                   19    15      4     357
                                              1 COMRAM    19    15      4
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _CMD_Send                                            17    11      6    2399
                                              1 COMRAM    17    11      6
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _SPI_transfer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Initialize                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    1760
                                             19 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     266
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4     821
                                              0 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _ECAN_Initialize
   _L6470_CMD
     _SPI_transfer
   _L6470_Init
     _CMD_Send
       _SPI_transfer
     _L6470_GetRegister
       _SPI_transfer
     _SPI_transfer
   _L6470_Run
     _CMD_Send
       _SPI_transfer
     _L6470_change (ARG)
   _L6470_Stop
     _SPI_transfer
   _SPI_Init
   _ServoOut
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _Wait
   _can_recieve
     _L6470_command
       _L6470_CMD
         _SPI_transfer
       _L6470_Move
         _CMD_Send
           _SPI_transfer
         _L6470_change (ARG)
       _L6470_Run
         _CMD_Send
           _SPI_transfer
         _L6470_change (ARG)
       _L6470_Stop
         _SPI_transfer
       _L6470_change
     _ServoOut
       ___aldiv
         ___lmul (ARG)
       ___lmul

 _InterTimer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       E       5        8.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      59       1       94.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      67       6        0.0%
DATA                 0      0      67       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Jul 04 17:19:13 2019

                                      _SSPSTATbits 000FC7                                    SPI_Init@divider 0001  
                                 L6470_CMD@command 0002                           __size_of_ECAN_Initialize 00AE  
                                      __CFG_BORV$3 000000                                       __CFG_CP0$OFF 000000  
                                     __CFG_CP1$OFF 000000                                       __CFG_CP2$OFF 000000  
                                     __CFG_CP3$OFF 000000                                                l256 0386  
                                              l424 04A0                                                l417 0AAC  
                                              l380 014C                                                l385 0172  
                                              l386 019C                                                l397 0EFA  
                                              l792 0F26                                                l768 0D94  
                                     __CFG_CPB$OFF 000000                                       __CFG_CPD$OFF 000000  
                                              u990 0EBC                                L6470_Init@step_mode 001B  
                                              prod 000FF3                                                wreg 000FE8  
                       ??_convertReg2StandardCANid 0005                              __size_of_SPI_transfer 0010  
                                             l3113 0EE8                                               l3019 0494  
                                             l3037 0DAA                                               l3205 0190  
                                             l3127 0DFE                                               l3161 00BC  
                                             l3163 00D2                                               l2703 0AB6  
                                             l3191 013E                                               l3175 00FE  
                                             l2713 0ACC                                               l3185 0116  
                                             l2707 0AC0                                               l2811 0958  
                                             l2901 07CA                                               l3197 0156  
                                             l2719 0EB0                                               l2911 084A  
                                             l2903 07D6                                               l2815 096E  
                                             l2807 094A                                               l2729 0E58  
                                             l2913 0860                                               l2905 0802  
                                             l2921 087E                                               l2763 0C7E  
                                             l2907 082E                                               l2771 0D3E  
                                             l2693 0A8C                                               l2749 0E80  
                                             l2757 0C44                                               l2909 083C  
                                             l2687 0A4A                                               l2783 08D0  
                                             l2767 0D2A                                               l2961 02BC  
                                             l2929 0AF6                                               l2795 090A  
                                             l2965 02EE                                               l2949 0B92  
                                             l2885 09C8                                               l2877 0994  
                                             l2797 0916                                               l2789 08E8  
                                             l2879 099C                                               l2993 03CC  
                                             l2985 0380                                               l2897 0A18  
                                             l2997 03FE                                               u1010 0E64  
                                             u1030 0F14                                               u1120 091A  
                                             u1050 0E8C                                               u1300 04BE  
                                             u1155 0704                                               u1315 060C  
                                             u1316 060E                                               u1165 0CD8  
                                             u1270 0D8E                                               u1431 01BA  
                                             u1290 0DA4                                               u1527 0EEE  
                                             _WPUB 000F5B                                               _Busy 003F  
                                             _Wait 0EDE                                               _data 0044  
                                             _main 0034                                               fsr2h 000FDA  
                                             indf2 000FDF                                               fsr1l 000FE1  
                                             fsr2l 000FD9                                               btemp 0056  
                                             prodl 000FF3                                               start 0030  
                                    __CFG_IESO$OFF 000000                                      __CFG_MCLRE$ON 000000  
                                     ___param_bank 000000                                   __end_of_CMD_Send 0AF2  
                                __end_of_L6470_CMD 0F20                                  __end_of_L6470_Run 0EDE  
                             __size_of_can_recieve 0048                                              ?_Wait 0001  
                                  __end_of___aldiv 0980                                              ?_main 0001  
                                            _T1CON 000FCD                                              _T3CON 000FB1  
                                            i2l856 0012                                              i2l858 002C  
                                     _SPI_transfer 0F20                                              _TMR1H 000FCF  
                                            _TMR3H 000FB3                                              _TMR1L 000FCE  
                                            _TMR3L 000FB2                                              _PORTA 000F80  
                                            _PORTB 000F81                                              _PORTC 000F82  
                                            _TRISA 000F92                                              _TRISB 000F93  
                                            _TRISC 000F94                                      __CFG_WRT0$OFF 000000  
                                    __CFG_WRT1$OFF 000000                                      __CFG_WRT2$OFF 000000  
                              ___lmul@multiplicand 0005                                      __CFG_WRT3$OFF 000000  
                               L6470_GetRegister@i 000E                                              Wait@i 0004  
                                   __CFG_EBTR0$OFF 000000                                     __CFG_FCMEN$OFF 000000  
                                   __CFG_EBTR1$OFF 000000                              CAN_receive@tempCanMsg 0014  
                                   __CFG_EBTR2$OFF 000000                                     __CFG_EBTR3$OFF 000000  
                                    __CFG_WRTB$OFF 000000                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                                     __CFG_EBTRB$OFF 000000  
                                 __end_of_SPI_Init 0DBA                                              tablat 000FF5  
                                            plusw0 000FEB                                              plusw2 000FDB  
                                            ttemp5 0057                                              ttemp6 005A  
                                            ttemp7 005E                convertReg2ExtendedCANid@ConvertedID 0010  
                                            status 000FD8                                              wtemp8 0057  
                                     ??_L6470_Init 0019                                       ??_L6470_Move 0017  
                                     ??_L6470_Stop 0004                                       SPI_Init@mode 0006  
                                     SPI_Init@stat 0004                                    __initialization 0E02  
                             __size_of_CAN_receive 0224                                       __end_of_Wait 0F08  
                                     __end_of_main 0274                                             ??_Wait 0003  
                                           ??_main 002F                                         _InterTimer 0008  
                                    __activetblptr 000002                                     __CFG_RETEN$OFF 000000  
                                 __end_of_ServoOut 0C2A                                 __end_of_L6470_Init 0690  
                               __end_of_L6470_Move 0EAE                                  ??_ECAN_Initialize 0001  
                               __end_of_L6470_Stop 0E7C                                             _CANCON 000F6F  
                                           _ANCON0 000F5D                                             _ANCON1 000F5C  
                                           _CIOCON 000F70                                    __CFG_BBSIZ$BB2K 000000  
                                           _OSCCON 000FD3                                             _RXB0D0 000F66  
                                           _RXB0D1 000F67                                             _RXB0D2 000F68  
                                           _RXB0D3 000F69                                             _RXB0D4 000F6A  
                                           _RXB1D0 000F36                                             _RXB0D5 000F6B  
                                           _RXB1D1 000F37                                             _RXB0D6 000F6C  
                                           _RXB1D2 000F38                                             _RXB0D7 000F6D  
                                           _RXB1D3 000F39                                             _RXB1D4 000F3A  
                                           _RXB1D5 000F3B                                             _RXB1D6 000F3C  
                                           _RXB1D7 000F3D                                             _TXB0D0 000F26  
                                           _TXB0D1 000F27                                             _TXB0D2 000F28  
                                           _TXB0D3 000F29                                             _TXB0D4 000F2A  
                                           _TXB1D0 000F16                                             _TXB0D5 000F2B  
                                           _TXB1D1 000F17                                             _TXB0D6 000F2C  
                                           _TXB1D2 000F18                                             _TXB0D7 000F2D  
                                           _TXB1D3 000F19                                             _TXB1D4 000F1A  
                                           _TXB2D0 000F06                                             _TXB1D5 000F1B  
                                           _TXB2D1 000F07                                             _TXB1D6 000F1C  
                                           _TXB2D2 000F08                                             _TXB1D7 000F1D  
                                           _TXB2D3 000F09                                             _TXB2D4 000F0A  
                                           _TXB2D5 000F0B                                             _TXB2D6 000F0C  
                                           _TXB2D7 000F0D                                             _SSPADD 000FC8  
                                           _SSPBUF 000FC9                                             _T1time 0054  
                              L6470_GetRegister@dt 000A                                     __CFG_XINST$OFF 000000  
                                           ___lmul 0D1A                                          ??___aldiv 0015  
                                   __CFG_STVREN$ON 000000                                             clear_0 0E28  
                                           clear_1 0E34                                       __pdataCOMRAM 004C  
                 __end_of_convertReg2StandardCANid 0D1A                                             tblptrh 000FF7  
                                           tblptrl 000FF6                                             tblptru 000FF8  
                                        CMD_Send@i 0011                                          ?_CMD_Send 0002  
                                       __accesstop 0060                            __end_of__initialization 0E3A  
                         _convertReg2ExtendedCANid 0690                             CAN_receive@returnValue 0016  
                                    ___rparam_used 000001                                     __pcstackCOMRAM 0001  
                                   SPI_transfer@dt 0001                                          ?_SPI_Init 0001  
                         L6470_GetRegister@regadrs 0010                                        ?_InterTimer 0001  
            convertReg2StandardCANid@tempRXBn_SIDH 0007              convertReg2StandardCANid@tempRXBn_SIDL 0001  
                                       ??_CMD_Send 0008                                         __pbssBANK0 0060  
                                  __CFG_PLLCFG$OFF 000000                                         __pnvCOMRAM 0054  
                                        ?_ServoOut 001B                                            ?___lmul 0001  
                            __end_of_L6470_command 08B4                                            _ECANCON 000F72  
                                   ___lmul@product 0009                                            _CANSTAT 000F6E  
                                       ??_SPI_Init 0004                                            _BRGCON1 000E43  
                                          _BRGCON2 000E44                                            _BRGCON3 000E45  
                                        _L6470_CMD 0F08                                   __CFG_CANMX$PORTB 000000  
                                        _L6470_Run 0EAE                                  _L6470_GetRegister 0980  
                                          _RXB0DLC 000F65                                            _RXB1DLC 000F35  
                                          _TXB0DLC 000F25                                            _TXB1DLC 000F15  
                                          _TXB2DLC 000F05                                 ?_L6470_GetRegister 0002  
                                          _SSPCON1 000FC6                                            _SSPSTAT 000FC7  
                              ??_L6470_GetRegister 0006                                __size_of_InterTimer 0028  
                             L6470_GetRegister@ans 0011                               L6470_GetRegister@num 0002  
                                  __CFG_PWRTEN$OFF 000000                                            Wait@num 0001  
                                          __Hparam 0000                                            __Lparam 0000  
                __size_of_convertReg2StandardCANid 0076                          ?_convertReg2StandardCANid 0001  
                                       ??_ServoOut 001D                                      ??_can_recieve 002F  
                                          ___aldiv 08B4                                    __size_of___lmul 0056  
                                  _ECAN_Initialize 0AF2                                            __pcinit 0E02  
                                          __ramtop 0F00                                            __ptext0 0034  
                                          __ptext1 0DBA                                            __ptext2 0BA0  
                                          __ptext3 0D1A                                            __ptext4 08B4  
                                          __ptext5 07C8                                            __ptext6 0C2A  
                                          __ptext7 0E48                                            __ptext8 0EAE  
                                          __ptext9 0E7C                          __end_of_L6470_GetRegister 0A3E  
                                        _T1CONbits 000FCD                                         ?_L6470_CMD 0002  
                                        _T3CONbits 000FB1                                         ?_L6470_Run 0013  
                                 ___aldiv@dividend 000D                                  __CFG_MSSPMSK$MSK7 000000  
                                    ?_L6470_change 0001                               end_of_initialization 0E3A  
                                    __Lmediumconst 0000                                      ??_CAN_receive 0016  
                                      L6470_Init@i 0020                                         CMD_Send@dt 000C  
                                 ___aldiv@quotient 0017                                            postdec1 000FE5  
                                          postdec2 000FDD                                            postinc0 000FEE  
                                          postinc2 000FDE                                         _servo_Flag 0043  
                                        _PORTAbits 000F80                                          _PORTBbits 000F81  
                                        _PORTCbits 000F82                                __end_of_can_recieve 0E02  
                                 __CFG_FOSC$INTIO2 000000                                     ??_L6470_change 0005  
                                  L6470_change@val 000C                                    L6470_change@num 0003  
                       ??_convertReg2ExtendedCANid 0005                                  __size_of_CMD_Send 00B4  
                             can_recieve@rxMessage 0021                            __end_of_ECAN_Initialize 0BA0  
                              __end_of_CAN_receive 0498                                     __end_of___lmul 0D70  
                                    __pidataCOMRAM 0F30                                       ??_InterTimer 0001  
                       __size_of_L6470_GetRegister 00BE                                        ??_L6470_CMD 0004  
                                __size_of_SPI_Init 004A                                        ??_L6470_Run 0017  
                              start_initialization 0E02                                        SPI_Init@con 0005  
                                      SPI_Init@sdo 0002                convertReg2StandardCANid@returnValue 0008  
                               __end_of_InterTimer 0030                                           ??___lmul 0009  
                                      _can_recieve 0DBA                                  __size_of_ServoOut 008A  
                                 L6470_Init@config 0019                                      ?_SPI_transfer 0001  
                                      __pbssCOMRAM 0031                                        _CAN_receive 0274  
                                 ?_ECAN_Initialize 0001                               __end_of_L6470_change 0CA4  
                                    ServoOut@angle 001B                                          __pintcode 0008  
                                    ServoOut@value 001D                                           ?___aldiv 000D  
                                   L6470_Move@step 0013                                     ??_SPI_transfer 0001  
                                      _COMSTATbits 000F71                                     L6470_Run@speed 0013  
                 __end_of_convertReg2ExtendedCANid 07C8                             __size_of_L6470_command 00EC  
                                         _CMD_Send 0A3E                                     L6470_Stop@mode 0002  
                                  ___aldiv@divisor 0011                                    ___aldiv@counter 0015  
                                       _L6470_Init 0498                                         _L6470_Move 0E7C  
                                       _L6470_Stop 0E48                                           _PIE1bits 000F9D  
                                         _PIE2bits 000FA0                                           _PIE5bits 000F76  
                                         _PIR1bits 000F9E                                           _PIR2bits 000FA1  
                                         _PIR5bits 000F77                                          _rxMessage 0060  
                                         _RXB0EIDH 000F63                                           _RXB0EIDL 000F64  
                                         _RXB1EIDH 000F33                                           _RXB1EIDL 000F34  
                                         _RXB0SIDH 000F61                                           _RXB0SIDL 000F62  
                                         _RXB1SIDH 000F31                                           _RXF0EIDH 000EE2  
                                         _RXB1SIDL 000F32                                           _RXF0EIDL 000EE3  
                                         _RXF1EIDH 000EE6                                           _RXF1EIDL 000EE7  
                                         _RXF2EIDH 000EEA                                           _RXF2EIDL 000EEB  
                                         _RXF3EIDH 000EEE                                           _RXF3EIDL 000EEF  
                                         _RXF4EIDH 000EF2                                           _RXF4EIDL 000EF3  
                                         _RXF5EIDH 000EF6                                           _RXF5EIDL 000EF7  
                                         _RXF0SIDH 000EE0                                           _RXF0SIDL 000EE1  
                                         _TXB0EIDH 000F23                                           _RXF1SIDH 000EE4  
                                         _TXB0EIDL 000F24                                           _RXF1SIDL 000EE5  
                                         _TXB1EIDH 000F13                                           _RXF2SIDH 000EE8  
                                         _TXB1EIDL 000F14                                           _RXF2SIDL 000EE9  
                                         _TXB2EIDH 000F03                                           _RXF3SIDH 000EEC  
                                         _TXB2EIDL 000F04                                           _RXF3SIDL 000EED  
                                         _RXF4SIDH 000EF0                                           _RXF4SIDL 000EF1  
                                         _RXF5SIDH 000EF4                                           _RXF5SIDL 000EF5  
                                         _RXM0EIDH 000EFA                                           _RXM0EIDL 000EFB  
                                         _TXB0SIDH 000F21                                           _RXM1EIDH 000EFE  
                                         _TXB0SIDL 000F22                                           _RXM1EIDL 000EFF  
                                         _TXB1SIDH 000F11                                           _TXB1SIDL 000F12  
                                         _TXB2SIDH 000F01                                           _TXB2SIDL 000F02  
                                        _txMessage 0031                                           _RXM0SIDH 000EF8  
                                         _RXM0SIDL 000EF9                                           _RXM1SIDH 000EFC  
                                         _RXM1SIDL 000EFD                                     L6470_change@dt 0001  
                                         _SPI_Init 0D70                                   __CFG_SOSCSEL$DIG 000000  
                                ___lmul@multiplier 0001                                        _INTCON2bits 000FF1  
                                        copy_data0 0E16                           _convertReg2StandardCANid 0CA4  
            convertReg2ExtendedCANid@tempRXBn_EIDH 0009              convertReg2ExtendedCANid@tempRXBn_EIDL 0001  
            convertReg2ExtendedCANid@tempRXBn_SIDH 0002              convertReg2ExtendedCANid@tempRXBn_SIDL 0003  
                                         __Hrparam 0000                                           __Lrparam 0000  
                               __CFG_BOREN$SBORDIS 000000                                           _ServoOut 0BA0  
                                    _L6470_command 07C8                                   L6470_Stop@F12231 004C  
                                 __size_of___aldiv 00CC  convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 000F  
convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 000E                                      L6470_Init@val 001C  
                                         __ptext10 0F08                                           __ptext11 0EDE  
                                         __ptext20 0690                                           __ptext12 0D70  
                                         __ptext13 0498                                           __ptext14 0980  
                                         __ptext15 0A3E                                           __ptext16 0F20  
                                         __ptext17 0AF2                                           __ptext18 0274  
                                         __ptext19 0CA4                                      L6470_Move@dir 0017  
                                    _arm_mode_flag 0041                convertReg2StandardCANid@ConvertedID 000C  
                                    __size_of_Wait 002A                              __size_of_L6470_change 007A  
                                    __size_of_main 0240                                        ?_L6470_Init 0015  
                                      ?_L6470_Move 0013                               __end_of_SPI_transfer 0F30  
                                    L6470_Stop@cmd 0004                                        ?_L6470_Stop 0002  
              convertReg2ExtendedCANid@returnValue 000A                  __size_of_convertReg2ExtendedCANid 0138  
                        ?_convertReg2ExtendedCANid 0001                                     ?_L6470_command 0001  
                                     ?_can_recieve 0021                                           int$flags 0056  
                                    L6470_change@i 000A                                __CFG_INTOSCSEL$HIGH 000000  
                                      _RXB0CONbits 000F60                                        _RXB1CONbits 000F30  
                               __CFG_WDTEN$SWDTDIS 000000                                         _INTCONbits 000FF2  
                                     _L6470_change 0C2A                                           intlevel2 0000  
                                     L6470_Run@dir 0017                                        _TXB0CONbits 000F20  
                                     ?_CAN_receive 0014                                        _TXB1CONbits 000F10  
                                      _TXB2CONbits 000F00                                        CMD_Send@cmd 0010  
                                      CMD_Send@val 0002                                        CMD_Send@num 0006  
                               __CFG_WDTPS$1048576 000000                                __size_of_L6470_Init 01F8  
                              __size_of_L6470_Move 0032                                __size_of_L6470_Stop 0034  
                                      _servo_Angle 0050                                       ___aldiv@sign 0016  
                               __size_of_L6470_CMD 0018                                 __size_of_L6470_Run 0030  
                              __CFG_BORPWR$ZPBORMV 000000                                    ??_L6470_command 0018  
