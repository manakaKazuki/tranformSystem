

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 17 23:51:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           ; Version 2.05
    39                           ; Generated 20/12/2018 GMT
    40                           ; 
    41                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F26K80 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  000F56                     __pidataCOMRAM:
    75                           	opt callstack 0
    76                           
    77                           ;initializer for L6470_Stop@F12231
    78  000F56  B0                 	db	176
    79  000F57  B8                 	db	184
    80  000F58  A0                 	db	160
    81  000F59  A8                 	db	168
    82                           
    83                           ;initializer for _servo_Angle
    84  000F5A  003C               	dw	60
    85  000F5C  0078               	dw	120
    86                           
    87                           	psect	nvCOMRAM
    88  000058                     __pnvCOMRAM:
    89                           	opt callstack 0
    90  000058                     _T1time:
    91                           	opt callstack 0
    92  000058                     	ds	2
    93  0000                     _BRGCON3	set	3653
    94  0000                     _BRGCON2	set	3652
    95  0000                     _BRGCON1	set	3651
    96  0000                     _RXF5SIDL	set	3829
    97  0000                     _RXF5SIDH	set	3828
    98  0000                     _RXF5EIDL	set	3831
    99  0000                     _RXF5EIDH	set	3830
   100  0000                     _RXF4SIDL	set	3825
   101  0000                     _RXF4SIDH	set	3824
   102  0000                     _RXF4EIDL	set	3827
   103  0000                     _RXF4EIDH	set	3826
   104  0000                     _RXF3SIDL	set	3821
   105  0000                     _RXF3SIDH	set	3820
   106  0000                     _RXF3EIDL	set	3823
   107  0000                     _RXF3EIDH	set	3822
   108  0000                     _RXF2SIDL	set	3817
   109  0000                     _RXF2SIDH	set	3816
   110  0000                     _RXF2EIDL	set	3819
   111  0000                     _RXF2EIDH	set	3818
   112  0000                     _RXF1SIDL	set	3813
   113  0000                     _RXF1SIDH	set	3812
   114  0000                     _RXF1EIDL	set	3815
   115  0000                     _RXF1EIDH	set	3814
   116  0000                     _RXF0SIDL	set	3809
   117  0000                     _RXF0SIDH	set	3808
   118  0000                     _RXF0EIDL	set	3811
   119  0000                     _RXF0EIDH	set	3810
   120  0000                     _RXM1SIDL	set	3837
   121  0000                     _RXM1SIDH	set	3836
   122  0000                     _RXM1EIDL	set	3839
   123  0000                     _RXM1EIDH	set	3838
   124  0000                     _RXM0SIDL	set	3833
   125  0000                     _RXM0SIDH	set	3832
   126  0000                     _RXM0EIDL	set	3835
   127  0000                     _RXM0EIDH	set	3834
   128  0000                     _ANCON1	set	3932
   129  0000                     _ANCON0	set	3933
   130  0000                     _WPUB	set	3931
   131  0000                     _RXB1D7	set	3901
   132  0000                     _RXB1D6	set	3900
   133  0000                     _RXB1D5	set	3899
   134  0000                     _RXB1D4	set	3898
   135  0000                     _RXB1D3	set	3897
   136  0000                     _RXB1D2	set	3896
   137  0000                     _RXB1D1	set	3895
   138  0000                     _RXB1D0	set	3894
   139  0000                     _RXB1DLC	set	3893
   140  0000                     _RXB1SIDH	set	3889
   141  0000                     _RXB1EIDL	set	3892
   142  0000                     _RXB1EIDH	set	3891
   143  0000                     _RXB1SIDL	set	3890
   144  0000                     _RXB1CONbits	set	3888
   145  0000                     _TXB2D7	set	3853
   146  0000                     _TXB2D6	set	3852
   147  0000                     _TXB2D5	set	3851
   148  0000                     _TXB2D4	set	3850
   149  0000                     _TXB2D3	set	3849
   150  0000                     _TXB2D2	set	3848
   151  0000                     _TXB2D1	set	3847
   152  0000                     _TXB2D0	set	3846
   153  0000                     _TXB2DLC	set	3845
   154  0000                     _TXB2SIDL	set	3842
   155  0000                     _TXB2SIDH	set	3841
   156  0000                     _TXB2EIDL	set	3844
   157  0000                     _TXB2EIDH	set	3843
   158  0000                     _TXB2CONbits	set	3840
   159  0000                     _TXB1D7	set	3869
   160  0000                     _TXB1D6	set	3868
   161  0000                     _TXB1D5	set	3867
   162  0000                     _TXB1D4	set	3866
   163  0000                     _TXB1D3	set	3865
   164  0000                     _TXB1D2	set	3864
   165  0000                     _TXB1D1	set	3863
   166  0000                     _TXB1D0	set	3862
   167  0000                     _TXB1DLC	set	3861
   168  0000                     _TXB1SIDL	set	3858
   169  0000                     _TXB1SIDH	set	3857
   170  0000                     _TXB1EIDL	set	3860
   171  0000                     _TXB1EIDH	set	3859
   172  0000                     _TXB1CONbits	set	3856
   173  0000                     _TXB0D7	set	3885
   174  0000                     _TXB0D6	set	3884
   175  0000                     _TXB0D5	set	3883
   176  0000                     _TXB0D4	set	3882
   177  0000                     _TXB0D3	set	3881
   178  0000                     _TXB0D2	set	3880
   179  0000                     _TXB0D1	set	3879
   180  0000                     _TXB0D0	set	3878
   181  0000                     _TXB0DLC	set	3877
   182  0000                     _TXB0SIDL	set	3874
   183  0000                     _TXB0SIDH	set	3873
   184  0000                     _TXB0EIDL	set	3876
   185  0000                     _TXB0EIDH	set	3875
   186  0000                     _TXB0CONbits	set	3872
   187  0000                     _TMR1L	set	4046
   188  0000                     _TMR1H	set	4047
   189  0000                     _TMR3L	set	4018
   190  0000                     _TMR3H	set	4019
   191  0000                     _SSPADD	set	4040
   192  0000                     _SSPSTAT	set	4039
   193  0000                     _SSPCON1	set	4038
   194  0000                     _SSPSTATbits	set	4039
   195  0000                     _SSPBUF	set	4041
   196  0000                     _PORTAbits	set	3968
   197  0000                     _PORTCbits	set	3970
   198  0000                     _PORTBbits	set	3969
   199  0000                     _T3CONbits	set	4017
   200  0000                     _T1CONbits	set	4045
   201  0000                     _INTCONbits	set	4082
   202  0000                     _PIE2bits	set	4000
   203  0000                     _PIR2bits	set	4001
   204  0000                     _PIE1bits	set	3997
   205  0000                     _PIR1bits	set	3998
   206  0000                     _T3CON	set	4017
   207  0000                     _T1CON	set	4045
   208  0000                     _PORTC	set	3970
   209  0000                     _PORTB	set	3969
   210  0000                     _PORTA	set	3968
   211  0000                     _TRISC	set	3988
   212  0000                     _TRISB	set	3987
   213  0000                     _TRISA	set	3986
   214  0000                     _INTCON2bits	set	4081
   215  0000                     _OSCCON	set	4051
   216  0000                     _COMSTATbits	set	3953
   217  0000                     _RXB0D7	set	3949
   218  0000                     _RXB0D6	set	3948
   219  0000                     _RXB0D5	set	3947
   220  0000                     _RXB0D4	set	3946
   221  0000                     _RXB0D3	set	3945
   222  0000                     _RXB0D2	set	3944
   223  0000                     _RXB0D1	set	3943
   224  0000                     _RXB0D0	set	3942
   225  0000                     _RXB0DLC	set	3941
   226  0000                     _RXB0SIDH	set	3937
   227  0000                     _RXB0EIDL	set	3940
   228  0000                     _RXB0EIDH	set	3939
   229  0000                     _RXB0SIDL	set	3938
   230  0000                     _PIE5bits	set	3958
   231  0000                     _PIR5bits	set	3959
   232  0000                     _RXB0CONbits	set	3936
   233  0000                     _CIOCON	set	3952
   234  0000                     _ECANCON	set	3954
   235  0000                     _CANSTAT	set	3950
   236  0000                     _CANCON	set	3951
   237                           
   238                           ; #config settings
   239  0000                     
   240                           	psect	cinit
   241  000E28                     __pcinit:
   242                           	opt callstack 0
   243  000E28                     start_initialization:
   244                           	opt callstack 0
   245  000E28                     __initialization:
   246                           	opt callstack 0
   247                           
   248                           ; Initialize objects allocated to COMRAM (8 bytes)
   249                           ; load TBLPTR registers with __pidataCOMRAM
   250  000E28  0E56               	movlw	low __pidataCOMRAM
   251  000E2A  6EF6               	movwf	tblptrl,c
   252  000E2C  0E0F               	movlw	high __pidataCOMRAM
   253  000E2E  6EF7               	movwf	tblptrh,c
   254  000E30  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   255  000E32  6EF8               	movwf	tblptru,c
   256  000E34  EE00  F050         	lfsr	0,__pdataCOMRAM
   257  000E38  EE10 F008          	lfsr	1,8
   258  000E3C                     copy_data0:
   259  000E3C  0009               	tblrd		*+
   260  000E3E  CFF5 FFEE          	movff	tablat,postinc0
   261  000E42  50E5               	movf	postdec1,w,c
   262  000E44  50E1               	movf	fsr1l,w,c
   263  000E46  E1FA               	bnz	copy_data0
   264                           
   265                           ; Clear objects allocated to BANK0 (14 bytes)
   266  000E48  EE00  F060         	lfsr	0,__pbssBANK0
   267  000E4C  0E0E               	movlw	14
   268  000E4E                     clear_0:
   269  000E4E  6AEE               	clrf	postinc0,c
   270  000E50  06E8               	decf	wreg,f,c
   271  000E52  E1FD               	bnz	clear_0
   272                           
   273                           ; Clear objects allocated to COMRAM (31 bytes)
   274  000E54  EE00  F031         	lfsr	0,__pbssCOMRAM
   275  000E58  0E1F               	movlw	31
   276  000E5A                     clear_1:
   277  000E5A  6AEE               	clrf	postinc0,c
   278  000E5C  06E8               	decf	wreg,f,c
   279  000E5E  E1FD               	bnz	clear_1
   280  000E60                     end_of_initialization:
   281                           	opt callstack 0
   282  000E60                     __end_of__initialization:
   283                           	opt callstack 0
   284  000E60  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   285  000E62  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   286  000E64  0E00               	movlw	low (__Lmediumconst shr (0+16))
   287  000E66  6EF8               	movwf	tblptru,c
   288  000E68  0100               	movlb	0
   289  000E6A  EF1A  F000         	goto	_main	;jump to C main() function
   290                           
   291                           	psect	bssCOMRAM
   292  000031                     __pbssCOMRAM:
   293                           	opt callstack 0
   294  000031                     _txMessage:
   295                           	opt callstack 0
   296  000031                     	ds	14
   297  00003F                     _pos:
   298                           	opt callstack 0
   299  00003F                     	ds	4
   300  000043                     _Busy:
   301                           	opt callstack 0
   302  000043                     	ds	2
   303  000045                     _arm_mode_flag:
   304                           	opt callstack 0
   305  000045                     	ds	2
   306  000047                     _servo_Flag:
   307                           	opt callstack 0
   308  000047                     	ds	1
   309  000048                     _data:
   310                           	opt callstack 0
   311  000048                     	ds	8
   312                           
   313                           	psect	dataCOMRAM
   314  000050                     __pdataCOMRAM:
   315                           	opt callstack 0
   316  000050                     L6470_Stop@F12231:
   317                           	opt callstack 0
   318  000050                     	ds	4
   319  000054                     _servo_Angle:
   320                           	opt callstack 0
   321  000054                     	ds	4
   322                           
   323                           	psect	bssBANK0
   324  000060                     __pbssBANK0:
   325                           	opt callstack 0
   326  000060                     _rxMessage:
   327                           	opt callstack 0
   328  000060                     	ds	14
   329                           
   330                           	psect	cstackCOMRAM
   331  000001                     __pcstackCOMRAM:
   332                           	opt callstack 0
   333  000001                     ??_ECAN_Initialize:
   334  000001                     ?_convertReg2ExtendedCANid:
   335                           	opt callstack 0
   336  000001                     ?_convertReg2StandardCANid:
   337                           	opt callstack 0
   338  000001                     ?_L6470_change:
   339                           	opt callstack 0
   340  000001                     ?___lmul:
   341                           	opt callstack 0
   342  000001                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   343                           	opt callstack 0
   344  000001                     convertReg2StandardCANid@tempRXBn_SIDL:
   345                           	opt callstack 0
   346  000001                     SPI_Init@divider:
   347                           	opt callstack 0
   348  000001                     SPI_transfer@dt:
   349                           	opt callstack 0
   350  000001                     Wait@num:
   351                           	opt callstack 0
   352  000001                     L6470_change@dt:
   353                           	opt callstack 0
   354  000001                     ___lmul@multiplier:
   355                           	opt callstack 0
   356                           
   357                           ; 4 bytes @ 0x0
   358  000001                     	ds	1
   359  000002                     ?_L6470_GetRegister:
   360                           	opt callstack 0
   361  000002                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   362                           	opt callstack 0
   363  000002                     L6470_GetRegister@num:
   364                           	opt callstack 0
   365  000002                     L6470_Stop@mode:
   366                           	opt callstack 0
   367  000002                     L6470_CMD@command:
   368                           	opt callstack 0
   369  000002                     SPI_Init@sdo:
   370                           	opt callstack 0
   371  000002                     CMD_Send@val:
   372                           	opt callstack 0
   373                           
   374                           ; 4 bytes @ 0x1
   375  000002                     	ds	1
   376  000003                     ??_Wait:
   377  000003                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   378                           	opt callstack 0
   379  000003                     L6470_change@num:
   380                           	opt callstack 0
   381                           
   382                           ; 2 bytes @ 0x2
   383  000003                     	ds	1
   384  000004                     SPI_Init@stat:
   385                           	opt callstack 0
   386  000004                     Wait@i:
   387                           	opt callstack 0
   388  000004                     L6470_Stop@cmd:
   389                           	opt callstack 0
   390                           
   391                           ; 4 bytes @ 0x3
   392  000004                     	ds	1
   393  000005                     ??_convertReg2ExtendedCANid:
   394  000005                     ??_convertReg2StandardCANid:
   395  000005                     ??_L6470_change:
   396  000005                     SPI_Init@con:
   397                           	opt callstack 0
   398  000005                     ___lmul@multiplicand:
   399                           	opt callstack 0
   400                           
   401                           ; 4 bytes @ 0x4
   402  000005                     	ds	1
   403  000006                     ??_L6470_GetRegister:
   404  000006                     SPI_Init@mode:
   405                           	opt callstack 0
   406  000006                     CMD_Send@num:
   407                           	opt callstack 0
   408                           
   409                           ; 2 bytes @ 0x5
   410  000006                     	ds	1
   411  000007                     convertReg2StandardCANid@tempRXBn_SIDH:
   412                           	opt callstack 0
   413                           
   414                           ; 1 bytes @ 0x6
   415  000007                     	ds	1
   416  000008                     ??_CMD_Send:
   417  000008                     convertReg2StandardCANid@returnValue:
   418                           	opt callstack 0
   419                           
   420                           ; 4 bytes @ 0x7
   421  000008                     	ds	1
   422  000009                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   423                           	opt callstack 0
   424  000009                     ___lmul@product:
   425                           	opt callstack 0
   426                           
   427                           ; 4 bytes @ 0x8
   428  000009                     	ds	1
   429  00000A                     L6470_change@i:
   430                           	opt callstack 0
   431  00000A                     convertReg2ExtendedCANid@returnValue:
   432                           	opt callstack 0
   433  00000A                     L6470_GetRegister@dt:
   434                           	opt callstack 0
   435                           
   436                           ; 4 bytes @ 0x9
   437  00000A                     	ds	2
   438  00000C                     convertReg2StandardCANid@ConvertedID:
   439                           	opt callstack 0
   440  00000C                     CMD_Send@dt:
   441                           	opt callstack 0
   442  00000C                     L6470_change@val:
   443                           	opt callstack 0
   444                           
   445                           ; 4 bytes @ 0xB
   446  00000C                     	ds	1
   447  00000D                     ?___aldiv:
   448                           	opt callstack 0
   449  00000D                     ___aldiv@dividend:
   450                           	opt callstack 0
   451                           
   452                           ; 4 bytes @ 0xC
   453  00000D                     	ds	1
   454  00000E                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   455                           	opt callstack 0
   456  00000E                     L6470_GetRegister@i:
   457                           	opt callstack 0
   458                           
   459                           ; 2 bytes @ 0xD
   460  00000E                     	ds	1
   461  00000F                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   462                           	opt callstack 0
   463                           
   464                           ; 1 bytes @ 0xE
   465  00000F                     	ds	1
   466  000010                     CMD_Send@cmd:
   467                           	opt callstack 0
   468  000010                     L6470_GetRegister@regadrs:
   469                           	opt callstack 0
   470  000010                     convertReg2ExtendedCANid@ConvertedID:
   471                           	opt callstack 0
   472                           
   473                           ; 4 bytes @ 0xF
   474  000010                     	ds	1
   475  000011                     CMD_Send@i:
   476                           	opt callstack 0
   477  000011                     L6470_GetRegister@ans:
   478                           	opt callstack 0
   479  000011                     ___aldiv@divisor:
   480                           	opt callstack 0
   481                           
   482                           ; 4 bytes @ 0x10
   483  000011                     	ds	2
   484  000013                     L6470_Run@speed:
   485                           	opt callstack 0
   486  000013                     L6470_Move@step:
   487                           	opt callstack 0
   488                           
   489                           ; 4 bytes @ 0x12
   490  000013                     	ds	1
   491  000014                     CAN_receive@tempCanMsg:
   492                           	opt callstack 0
   493                           
   494                           ; 2 bytes @ 0x13
   495  000014                     	ds	1
   496  000015                     ?_L6470_Init:
   497                           	opt callstack 0
   498  000015                     ___aldiv@counter:
   499                           	opt callstack 0
   500                           
   501                           ; 1 bytes @ 0x14
   502  000015                     	ds	1
   503  000016                     CAN_receive@returnValue:
   504                           	opt callstack 0
   505  000016                     ___aldiv@sign:
   506                           	opt callstack 0
   507                           
   508                           ; 1 bytes @ 0x15
   509  000016                     	ds	1
   510  000017                     L6470_Run@dir:
   511                           	opt callstack 0
   512  000017                     L6470_Move@dir:
   513                           	opt callstack 0
   514  000017                     ___aldiv@quotient:
   515                           	opt callstack 0
   516                           
   517                           ; 4 bytes @ 0x16
   518  000017                     	ds	1
   519  000018                     ??_L6470_command:
   520                           
   521                           ; 1 bytes @ 0x17
   522  000018                     	ds	1
   523  000019                     L6470_Init@config:
   524                           	opt callstack 0
   525                           
   526                           ; 2 bytes @ 0x18
   527  000019                     	ds	2
   528  00001B                     L6470_Init@step_mode:
   529                           	opt callstack 0
   530  00001B                     ServoOut@angle:
   531                           	opt callstack 0
   532                           
   533                           ; 2 bytes @ 0x1A
   534  00001B                     	ds	1
   535  00001C                     L6470_Init@val:
   536                           	opt callstack 0
   537                           
   538                           ; 4 bytes @ 0x1B
   539  00001C                     	ds	1
   540  00001D                     ServoOut@value:
   541                           	opt callstack 0
   542                           
   543                           ; 4 bytes @ 0x1C
   544  00001D                     	ds	3
   545  000020                     L6470_Init@i:
   546                           	opt callstack 0
   547                           
   548                           ; 2 bytes @ 0x1F
   549  000020                     	ds	1
   550  000021                     can_recieve@rxMessage:
   551                           	opt callstack 0
   552                           
   553                           ; 14 bytes @ 0x20
   554  000021                     	ds	14
   555  00002F                     ??_main:
   556                           
   557                           ; 1 bytes @ 0x2E
   558  00002F                     	ds	2
   559                           
   560 ;;
   561 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   562 ;;
   563 ;; *************** function _main *****************
   564 ;; Defined at:
   565 ;;		line 109 in file "main.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;  ans             4    0        unsigned long 
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   580 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   581 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   582 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   583 ;;Total ram usage:        6 bytes
   584 ;; Hardware stack levels required when called:    6
   585 ;; This function calls:
   586 ;;		_CAN_receive
   587 ;;		_ECAN_Initialize
   588 ;;		_L6470_CMD
   589 ;;		_L6470_Init
   590 ;;		_L6470_Run
   591 ;;		_L6470_Stop
   592 ;;		_SPI_Init
   593 ;;		_ServoOut
   594 ;;		_Wait
   595 ;;		_can_recieve
   596 ;; This function is called by:
   597 ;;		Startup code after reset
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text0
   602  000034                     __ptext0:
   603                           	opt callstack 0
   604  000034                     _main:
   605                           	opt callstack 25
   606                           
   607                           ;main.c: 111:     unsigned long ans ;;main.c: 113:     OSCCON = 0b01110010;
   608                           
   609                           ;incstack = 0
   610  000034  0E72               	movlw	114
   611  000036  6ED3               	movwf	4051,c	;volatile
   612                           
   613                           ;main.c: 114:     INTCON2bits.RBPU = 0;
   614  000038  9EF1               	bcf	4081,7,c	;volatile
   615                           
   616                           ;main.c: 115:     WPUB = 0b00100010;
   617  00003A  0E22               	movlw	34
   618  00003C  010F               	movlb	15	; () banked
   619  00003E  6F5B               	movwf	91,b	;volatile
   620                           
   621                           ;main.c: 116:     ANCON0 = 0b00000000;
   622  000040  0E00               	movlw	0
   623  000042  6F5D               	movwf	93,b	;volatile
   624                           
   625                           ;main.c: 117:     ANCON1 = 0b00000000;
   626  000044  0E00               	movlw	0
   627  000046  6F5C               	movwf	92,b	;volatile
   628                           
   629                           ;main.c: 118:     TRISA = 0b11000000;
   630  000048  0EC0               	movlw	192
   631  00004A  6E92               	movwf	3986,c	;volatile
   632                           
   633                           ;main.c: 119:     TRISB = 0b00101010;
   634  00004C  0E2A               	movlw	42
   635  00004E  6E93               	movwf	3987,c	;volatile
   636                           
   637                           ;main.c: 120:     TRISC = 0b00010001;
   638  000050  0E11               	movlw	17
   639  000052  6E94               	movwf	3988,c	;volatile
   640                           
   641                           ;main.c: 121:     PORTA = 0b00000000;
   642  000054  0E00               	movlw	0
   643  000056  6E80               	movwf	3968,c	;volatile
   644                           
   645                           ;main.c: 122:     PORTB = 0b00000001;
   646  000058  0E01               	movlw	1
   647  00005A  6E81               	movwf	3969,c	;volatile
   648                           
   649                           ;main.c: 123:     PORTC = 0b00000000;
   650  00005C  0E00               	movlw	0
   651  00005E  6E82               	movwf	3970,c	;volatile
   652                           
   653                           ;main.c: 125:     T1CON = 0b00110000;
   654  000060  0E30               	movlw	48
   655  000062  6ECD               	movwf	4045,c	;volatile
   656                           
   657                           ;main.c: 126:     T3CON = 0b00110000;
   658  000064  0E30               	movlw	48
   659  000066  6EB1               	movwf	4017,c	;volatile
   660                           
   661                           ; BSR set to: 15
   662                           ;main.c: 127:     PIR1bits.TMR1IF = 0;
   663  000068  909E               	bcf	3998,0,c	;volatile
   664                           
   665                           ; BSR set to: 15
   666                           ;main.c: 128:     PIE1bits.TMR1IE = 1;
   667  00006A  809D               	bsf	3997,0,c	;volatile
   668                           
   669                           ; BSR set to: 15
   670                           ;main.c: 129:     PIR2bits.TMR3IF = 0;
   671  00006C  92A1               	bcf	4001,1,c	;volatile
   672                           
   673                           ; BSR set to: 15
   674                           ;main.c: 130:     PIE2bits.TMR3IE = 1;
   675  00006E  82A0               	bsf	4000,1,c	;volatile
   676                           
   677                           ; BSR set to: 15
   678                           ;main.c: 131:     INTCONbits.PEIE = 1;
   679  000070  8CF2               	bsf	4082,6,c	;volatile
   680                           
   681                           ; BSR set to: 15
   682                           ;main.c: 132:     INTCONbits.GIE = 1;
   683  000072  8EF2               	bsf	4082,7,c	;volatile
   684                           
   685                           ; BSR set to: 15
   686                           ;main.c: 135:     ServoOut(servo_Angle[servo_Flag]);
   687  000074  5047               	movf	_servo_Flag,w,c
   688  000076  0D02               	mullw	2
   689  000078  0E54               	movlw	low _servo_Angle
   690  00007A  24F3               	addwf	prodl,w,c
   691  00007C  6ED9               	movwf	fsr2l,c
   692  00007E  0E00               	movlw	high _servo_Angle
   693  000080  20F4               	addwfc	prodh,w,c
   694  000082  6EDA               	movwf	fsr2h,c
   695  000084  CFDE F01B          	movff	postinc2,ServoOut@angle
   696  000088  CFDD F01C          	movff	postdec2,ServoOut@angle+1
   697  00008C  ECE3  F005         	call	_ServoOut	;wreg free
   698                           
   699                           ;main.c: 136:     T1CONbits.TMR1ON = 1;
   700  000090  80CD               	bsf	4045,0,c	;volatile
   701                           
   702                           ;main.c: 137:     T3CONbits.TMR3ON = 1;
   703  000092  80B1               	bsf	4017,0,c	;volatile
   704                           
   705                           ;main.c: 141:     ECAN_Initialize() ;
   706  000094  EC8C  F005         	call	_ECAN_Initialize	;wreg free
   707                           
   708                           ;main.c: 144:     SPI_Init(3,0x1,0) ;
   709  000098  0E01               	movlw	1
   710  00009A  6E01               	movwf	SPI_Init@divider,c
   711  00009C  0E00               	movlw	0
   712  00009E  6E03               	movwf	SPI_Init@sdo+1,c
   713  0000A0  0E00               	movlw	0
   714  0000A2  6E02               	movwf	SPI_Init@sdo,c
   715  0000A4  0E03               	movlw	3
   716  0000A6  ECCB  F006         	call	_SPI_Init
   717  0000AA  EC4C  F002         	call	_L6470_Init	;wreg free
   718                           
   719                           ;main.c: 148:     Wait(300) ;
   720  0000AE  0E01               	movlw	1
   721  0000B0  6E02               	movwf	Wait@num+1,c
   722  0000B2  0E2C               	movlw	44
   723  0000B4  6E01               	movwf	Wait@num,c
   724  0000B6  EC82  F007         	call	_Wait	;wreg free
   725                           
   726                           ;main.c: 150:     while(PORTBbits.RB5){
   727  0000BA  D00B               	goto	l3172
   728  0000BC                     l3170:
   729                           
   730                           ;main.c: 151:         L6470_Run(0,30000);
   731  0000BC  0E30               	movlw	48
   732  0000BE  6E13               	movwf	L6470_Run@speed,c
   733  0000C0  0E75               	movlw	117
   734  0000C2  6E14               	movwf	L6470_Run@speed+1,c
   735  0000C4  0E00               	movlw	0
   736  0000C6  6E15               	movwf	L6470_Run@speed+2,c
   737  0000C8  0E00               	movlw	0
   738  0000CA  6E16               	movwf	L6470_Run@speed+3,c
   739  0000CC  0E00               	movlw	0
   740  0000CE  EC6A  F007         	call	_L6470_Run
   741  0000D2                     l3172:
   742                           
   743                           ;main.c: 150:     while(PORTBbits.RB5){
   744  0000D2  BA81               	btfsc	3969,5,c	;volatile
   745  0000D4  D7F3               	goto	l3170
   746                           
   747                           ;main.c: 153:     L6470_Stop(1);
   748  0000D6  0E00               	movlw	0
   749  0000D8  6E03               	movwf	L6470_Stop@mode+1,c
   750  0000DA  0E01               	movlw	1
   751  0000DC  6E02               	movwf	L6470_Stop@mode,c
   752  0000DE  EC37  F007         	call	_L6470_Stop	;wreg free
   753                           
   754                           ;main.c: 154:     L6470_CMD(0xD8);
   755  0000E2  0E00               	movlw	0
   756  0000E4  6E03               	movwf	L6470_CMD@command+1,c
   757  0000E6  0ED8               	movlw	216
   758  0000E8  6E02               	movwf	L6470_CMD@command,c
   759  0000EA  EC97  F007         	call	_L6470_CMD	;wreg free
   760                           
   761                           ;main.c: 157:     PORTCbits.RC2 = 1;
   762  0000EE  8482               	bsf	3970,2,c	;volatile
   763                           
   764                           ;main.c: 158:     Wait(100);
   765  0000F0  0E00               	movlw	0
   766  0000F2  6E02               	movwf	Wait@num+1,c
   767  0000F4  0E64               	movlw	100
   768  0000F6  6E01               	movwf	Wait@num,c
   769  0000F8  EC82  F007         	call	_Wait	;wreg free
   770                           
   771                           ;main.c: 159:     PORTCbits.RC2 = 0;
   772  0000FC  9482               	bcf	3970,2,c	;volatile
   773  0000FE                     l3184:
   774                           
   775                           ;main.c: 162:         if(PORTAbits.RA6 == 0){
   776  0000FE  BC80               	btfsc	3968,6,c	;volatile
   777  000100  D025               	goto	l380
   778                           
   779                           ;main.c: 163:             if(arm_mode_flag == 1){
   780  000102  0445               	decf	_arm_mode_flag,w,c
   781  000104  1046               	iorwf	_arm_mode_flag+1,w,c
   782  000106  A4D8               	btfss	status,2,c
   783  000108  D01A               	goto	l3200
   784                           
   785                           ;main.c: 164:                 PORTCbits.RC2 = 1;
   786  00010A  8482               	bsf	3970,2,c	;volatile
   787                           
   788                           ;main.c: 165:                 if(servo_Flag == 1){
   789  00010C  0447               	decf	_servo_Flag,w,c
   790  00010E  A4D8               	btfss	status,2,c
   791  000110  D002               	goto	l3194
   792                           
   793                           ;main.c: 166:                     servo_Flag = 0;
   794  000112  0E00               	movlw	0
   795  000114  D001               	goto	L1
   796  000116                     l3194:
   797                           
   798                           ;main.c: 168:                     servo_Flag = 1;
   799  000116  0E01               	movlw	1
   800  000118                     L1:
   801  000118  6E47               	movwf	_servo_Flag,c
   802                           
   803                           ;main.c: 170:                 ServoOut(servo_Angle[servo_Flag]);
   804  00011A  5047               	movf	_servo_Flag,w,c
   805  00011C  0D02               	mullw	2
   806  00011E  0E54               	movlw	low _servo_Angle
   807  000120  24F3               	addwf	prodl,w,c
   808  000122  6ED9               	movwf	fsr2l,c
   809  000124  0E00               	movlw	high _servo_Angle
   810  000126  20F4               	addwfc	prodh,w,c
   811  000128  6EDA               	movwf	fsr2h,c
   812  00012A  CFDE F01B          	movff	postinc2,ServoOut@angle
   813  00012E  CFDD F01C          	movff	postdec2,ServoOut@angle+1
   814  000132  ECE3  F005         	call	_ServoOut	;wreg free
   815                           
   816                           ;main.c: 171:                 arm_mode_flag = 0;
   817  000136  0E00               	movlw	0
   818  000138  6E46               	movwf	_arm_mode_flag+1,c
   819  00013A  0E00               	movlw	0
   820  00013C  6E45               	movwf	_arm_mode_flag,c
   821  00013E                     l3200:
   822                           
   823                           ;main.c: 173:             Wait(1);
   824  00013E  0E00               	movlw	0
   825  000140  6E02               	movwf	Wait@num+1,c
   826  000142  0E01               	movlw	1
   827  000144  6E01               	movwf	Wait@num,c
   828  000146  EC82  F007         	call	_Wait	;wreg free
   829                           
   830                           ;main.c: 174:         }else{
   831  00014A  D005               	goto	l3206
   832  00014C                     l380:
   833                           
   834                           ;main.c: 175:             PORTCbits.RC2 = 0;
   835  00014C  9482               	bcf	3970,2,c	;volatile
   836                           
   837                           ;main.c: 176:             arm_mode_flag = 1;
   838  00014E  0E00               	movlw	0
   839  000150  6E46               	movwf	_arm_mode_flag+1,c
   840  000152  0E01               	movlw	1
   841  000154  D7F3               	goto	L2
   842  000156                     l3206:
   843                           
   844                           ;main.c: 180:         if(PORTAbits.RA7 == 0){
   845  000156  BE80               	btfsc	3968,7,c	;volatile
   846  000158  D00C               	goto	l385
   847                           
   848                           ;main.c: 181:             L6470_Run(1,30000);
   849  00015A  0E30               	movlw	48
   850  00015C  6E13               	movwf	L6470_Run@speed,c
   851  00015E  0E75               	movlw	117
   852  000160  6E14               	movwf	L6470_Run@speed+1,c
   853  000162  0E00               	movlw	0
   854  000164  6E15               	movwf	L6470_Run@speed+2,c
   855  000166  0E00               	movlw	0
   856  000168  6E16               	movwf	L6470_Run@speed+3,c
   857  00016A  0E01               	movlw	1
   858  00016C  EC6A  F007         	call	_L6470_Run
   859                           
   860                           ;main.c: 182:         }else if(PORTCbits.RC0 == 0){
   861  000170  D015               	goto	l386
   862  000172                     l385:
   863  000172  A082               	btfss	3970,0,c	;volatile
   864                           
   865                           ;main.c: 183:             if(PORTBbits.RB5){
   866  000174  AA81               	btfss	3969,5,c	;volatile
   867  000176  D00C               	goto	l3214
   868                           
   869                           ;main.c: 184:                 L6470_Run(0,30000);
   870  000178  0E30               	movlw	48
   871  00017A  6E13               	movwf	L6470_Run@speed,c
   872  00017C  0E75               	movlw	117
   873  00017E  6E14               	movwf	L6470_Run@speed+1,c
   874  000180  0E00               	movlw	0
   875  000182  6E15               	movwf	L6470_Run@speed+2,c
   876  000184  0E00               	movlw	0
   877  000186  6E16               	movwf	L6470_Run@speed+3,c
   878  000188  0E00               	movlw	0
   879  00018A  EC6A  F007         	call	_L6470_Run
   880                           
   881                           ;main.c: 185:             }else{
   882  00018E  D006               	goto	l386
   883  000190                     l3214:
   884                           
   885                           ;main.c: 186:                 L6470_Stop(1);
   886  000190  0E00               	movlw	0
   887  000192  6E03               	movwf	L6470_Stop@mode+1,c
   888  000194  0E01               	movlw	1
   889  000196  6E02               	movwf	L6470_Stop@mode,c
   890  000198  EC37  F007         	call	_L6470_Stop	;wreg free
   891  00019C                     l386:
   892                           
   893                           ;main.c: 192:         if (CAN_receive(&rxMessage)) {
   894  00019C  0E60               	movlw	low _rxMessage
   895  00019E  6E14               	movwf	CAN_receive@tempCanMsg,c
   896  0001A0  0E00               	movlw	high _rxMessage
   897  0001A2  6E15               	movwf	CAN_receive@tempCanMsg+1,c
   898  0001A4  EC3A  F001         	call	_CAN_receive	;wreg free
   899  0001A8  0900               	iorlw	0
   900  0001AA  B4D8               	btfsc	status,2,c
   901  0001AC  D7A8               	goto	l3184
   902                           
   903                           ;main.c: 194:             PORTCbits.RC2 = 1;
   904  0001AE  8482               	bsf	3970,2,c	;volatile
   905                           
   906                           ;main.c: 195:             data = can_recieve(rxMessage);
   907  0001B0  EE20  F060         	lfsr	2,_rxMessage
   908  0001B4  EE00  F021         	lfsr	0,can_recieve@rxMessage
   909  0001B8  0E0D               	movlw	13
   910  0001BA                     u1431:
   911  0001BA  CFDB FFEB          	movff	plusw2,plusw0
   912  0001BE  06E8               	decf	wreg,f,c
   913  0001C0  E2FC               	bc	u1431
   914  0001C2  ECF0  F006         	call	_can_recieve	;wreg free
   915  0001C6  6E2F               	movwf	??_main& (0+255),c
   916  0001C8  6A30               	clrf	(??_main+1)& (0+255),c
   917  0001CA  C02F  F048         	movff	??_main,_data
   918  0001CE  C030  F049         	movff	??_main+1,_data+1
   919                           
   920                           ;main.c: 196:             txMessage.frame.idType = 1 ;
   921  0001D2  0E01               	movlw	1
   922  0001D4  6E31               	movwf	_txMessage,c
   923                           
   924                           ;main.c: 197:             txMessage.frame.id = 0x001 ;
   925  0001D6  0E01               	movlw	1
   926  0001D8  6E32               	movwf	_txMessage+1,c
   927  0001DA  0E00               	movlw	0
   928  0001DC  6E33               	movwf	_txMessage+2,c
   929  0001DE  0E00               	movlw	0
   930  0001E0  6E34               	movwf	_txMessage+3,c
   931  0001E2  0E00               	movlw	0
   932  0001E4  6E35               	movwf	_txMessage+4,c
   933                           
   934                           ;main.c: 198:             txMessage.frame.dlc = 8 ;
   935  0001E6  0E08               	movlw	8
   936  0001E8  6E36               	movwf	_txMessage+5,c
   937                           
   938                           ;main.c: 199:             txMessage.frame.data0 = data[0];
   939  0001EA  C048  FFD9         	movff	_data,fsr2l
   940  0001EE  C049  FFDA         	movff	_data+1,fsr2h
   941  0001F2  50DF               	movf	indf2,w,c
   942  0001F4  6E37               	movwf	_txMessage+6,c
   943                           
   944                           ;main.c: 200:             txMessage.frame.data1 = data[1];
   945  0001F6  EE20 F002          	lfsr	2,2
   946  0001FA  5048               	movf	_data,w,c
   947  0001FC  26D9               	addwf	fsr2l,f,c
   948  0001FE  5049               	movf	_data+1,w,c
   949  000200  22DA               	addwfc	fsr2h,f,c
   950  000202  50DF               	movf	indf2,w,c
   951  000204  6E38               	movwf	_txMessage+7,c
   952                           
   953                           ;main.c: 201:             txMessage.frame.data2 = data[2];
   954  000206  EE20 F004          	lfsr	2,4
   955  00020A  5048               	movf	_data,w,c
   956  00020C  26D9               	addwf	fsr2l,f,c
   957  00020E  5049               	movf	_data+1,w,c
   958  000210  22DA               	addwfc	fsr2h,f,c
   959  000212  50DF               	movf	indf2,w,c
   960  000214  6E39               	movwf	_txMessage+8,c
   961                           
   962                           ;main.c: 202:             txMessage.frame.data3 = data[3];
   963  000216  EE20 F006          	lfsr	2,6
   964  00021A  5048               	movf	_data,w,c
   965  00021C  26D9               	addwf	fsr2l,f,c
   966  00021E  5049               	movf	_data+1,w,c
   967  000220  22DA               	addwfc	fsr2h,f,c
   968  000222  50DF               	movf	indf2,w,c
   969  000224  6E3A               	movwf	_txMessage+9,c
   970                           
   971                           ;main.c: 203:             txMessage.frame.data4 = data[4];
   972  000226  EE20 F008          	lfsr	2,8
   973  00022A  5048               	movf	_data,w,c
   974  00022C  26D9               	addwf	fsr2l,f,c
   975  00022E  5049               	movf	_data+1,w,c
   976  000230  22DA               	addwfc	fsr2h,f,c
   977  000232  50DF               	movf	indf2,w,c
   978  000234  6E3B               	movwf	_txMessage+10,c
   979                           
   980                           ;main.c: 204:             txMessage.frame.data5 = data[5];
   981  000236  EE20 F00A          	lfsr	2,10
   982  00023A  5048               	movf	_data,w,c
   983  00023C  26D9               	addwf	fsr2l,f,c
   984  00023E  5049               	movf	_data+1,w,c
   985  000240  22DA               	addwfc	fsr2h,f,c
   986  000242  50DF               	movf	indf2,w,c
   987  000244  6E3C               	movwf	_txMessage+11,c
   988                           
   989                           ;main.c: 205:             txMessage.frame.data6 = data[6];
   990  000246  EE20 F00C          	lfsr	2,12
   991  00024A  5048               	movf	_data,w,c
   992  00024C  26D9               	addwf	fsr2l,f,c
   993  00024E  5049               	movf	_data+1,w,c
   994  000250  22DA               	addwfc	fsr2h,f,c
   995  000252  50DF               	movf	indf2,w,c
   996  000254  6E3D               	movwf	_txMessage+12,c
   997                           
   998                           ;main.c: 206:             txMessage.frame.data7 = data[7];
   999  000256  EE20 F00E          	lfsr	2,14
  1000  00025A  5048               	movf	_data,w,c
  1001  00025C  26D9               	addwf	fsr2l,f,c
  1002  00025E  5049               	movf	_data+1,w,c
  1003  000260  22DA               	addwfc	fsr2h,f,c
  1004  000262  50DF               	movf	indf2,w,c
  1005  000264  6E3E               	movwf	_txMessage+13,c
  1006                           
  1007                           ;main.c: 208:             Wait(50);
  1008  000266  0E00               	movlw	0
  1009  000268  6E02               	movwf	Wait@num+1,c
  1010  00026A  0E32               	movlw	50
  1011  00026C  6E01               	movwf	Wait@num,c
  1012  00026E  EC82  F007         	call	_Wait	;wreg free
  1013  000272  D745               	goto	l3184
  1014  000274                     __end_of_main:
  1015                           	opt callstack 0
  1016                           
  1017 ;; *************** function _can_recieve *****************
  1018 ;; Defined at:
  1019 ;;		line 61 in file "can_command.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  rxMessage      14   32[COMRAM] struct .
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      unsigned char 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1033 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1036 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1037 ;;Total ram usage:       14 bytes
  1038 ;; Hardware stack levels used:    1
  1039 ;; Hardware stack levels required when called:    5
  1040 ;; This function calls:
  1041 ;;		_L6470_command
  1042 ;;		_ServoOut
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text1
  1049  000DE0                     __ptext1:
  1050                           	opt callstack 0
  1051  000DE0                     _can_recieve:
  1052                           	opt callstack 25
  1053                           
  1054                           ;can_command.c: 65:      if (rxMessage.frame.idType == 1) {
  1055                           
  1056                           ;incstack = 0
  1057  000DE0  0421               	decf	can_recieve@rxMessage,w,c
  1058  000DE2  A4D8               	btfss	status,2,c
  1059  000DE4  D01F               	goto	l3136
  1060                           
  1061                           ;can_command.c: 68:          if(rxMessage.frame.id == 0x102){
  1062  000DE6  0E02               	movlw	2
  1063  000DE8  1822               	xorwf	can_recieve@rxMessage+1,w,c
  1064  000DEA  E11C               	bnz	l3136
  1065  000DEC  0423               	decf	can_recieve@rxMessage+2,w,c
  1066  000DEE  1024               	iorwf	can_recieve@rxMessage+3,w,c
  1067  000DF0  1025               	iorwf	can_recieve@rxMessage+4,w,c
  1068  000DF2  A4D8               	btfss	status,2,c
  1069  000DF4  D017               	goto	l3136
  1070                           
  1071                           ;can_command.c: 69:             data[0] = rxMessage.frame.data0 ;
  1072  000DF6  C027  F048         	movff	can_recieve@rxMessage+6,_data
  1073                           
  1074                           ;can_command.c: 70:             data[1] = rxMessage.frame.data1 ;
  1075  000DFA  C028  F049         	movff	can_recieve@rxMessage+7,_data+1
  1076                           
  1077                           ;can_command.c: 71:             data[2] = rxMessage.frame.data2 ;
  1078  000DFE  C029  F04A         	movff	can_recieve@rxMessage+8,_data+2
  1079                           
  1080                           ;can_command.c: 72:             data[3] = rxMessage.frame.data3 ;
  1081  000E02  C02A  F04B         	movff	can_recieve@rxMessage+9,_data+3
  1082                           
  1083                           ;can_command.c: 73:             data[4] = rxMessage.frame.data4 ;
  1084  000E06  C02B  F04C         	movff	can_recieve@rxMessage+10,_data+4
  1085                           
  1086                           ;can_command.c: 74:             data[5] = rxMessage.frame.data5 ;
  1087  000E0A  C02C  F04D         	movff	can_recieve@rxMessage+11,_data+5
  1088                           
  1089                           ;can_command.c: 75:             data[6] = rxMessage.frame.data6 ;
  1090  000E0E  C02D  F04E         	movff	can_recieve@rxMessage+12,_data+6
  1091                           
  1092                           ;can_command.c: 76:             data[7] = rxMessage.frame.data7 ;
  1093  000E12  C02E  F04F         	movff	can_recieve@rxMessage+13,_data+7
  1094                           
  1095                           ;can_command.c: 77:             ServoOut(data[1]);
  1096  000E16  C049  F01B         	movff	_data+1,ServoOut@angle
  1097  000E1A  6A1C               	clrf	ServoOut@angle+1,c
  1098  000E1C  ECE3  F005         	call	_ServoOut	;wreg free
  1099                           
  1100                           ;can_command.c: 78:             L6470_command();
  1101  000E20  ECE4  F003         	call	_L6470_command	;wreg free
  1102  000E24                     l3136:
  1103                           
  1104                           ;can_command.c: 81:      return data;
  1105  000E24  0E48               	movlw	_data& (0+255)
  1106  000E26  0012               	return		;funcret
  1107  000E28                     __end_of_can_recieve:
  1108                           	opt callstack 0
  1109                           
  1110 ;; *************** function _ServoOut *****************
  1111 ;; Defined at:
  1112 ;;		line 24 in file "servo.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  angle           2   26[COMRAM] int 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  value           4   28[COMRAM] long 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1127 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1129 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1130 ;;Total ram usage:        6 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    2
  1133 ;; This function calls:
  1134 ;;		___aldiv
  1135 ;;		___lmul
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;;		_can_recieve
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text2
  1143  000BC6                     __ptext2:
  1144                           	opt callstack 0
  1145  000BC6                     _ServoOut:
  1146                           	opt callstack 27
  1147                           
  1148                           ;servo.c: 25:     long value;;servo.c: 27:     PIR1bits.TMR1IF = 0;
  1149                           
  1150                           ;incstack = 0
  1151  000BC6  909E               	bcf	3998,0,c	;volatile
  1152                           
  1153                           ;servo.c: 28:     PIR2bits.TMR3IF = 0;
  1154  000BC8  92A1               	bcf	4001,1,c	;volatile
  1155                           
  1156                           ;servo.c: 30:     value = (long)(angle) * 1000 / 180 + 250;
  1157  000BCA  C01B  F001         	movff	ServoOut@angle,___lmul@multiplier
  1158  000BCE  C01C  F002         	movff	ServoOut@angle+1,___lmul@multiplier+1
  1159  000BD2  0E00               	movlw	0
  1160  000BD4  BE02               	btfsc	___lmul@multiplier+1,7,c
  1161  000BD6  0EFF               	movlw	-1
  1162  000BD8  6E03               	movwf	___lmul@multiplier+2,c
  1163  000BDA  6E04               	movwf	___lmul@multiplier+3,c
  1164  000BDC  0EE8               	movlw	232
  1165  000BDE  6E05               	movwf	___lmul@multiplicand,c
  1166  000BE0  0E03               	movlw	3
  1167  000BE2  6E06               	movwf	___lmul@multiplicand+1,c
  1168  000BE4  0E00               	movlw	0
  1169  000BE6  6E07               	movwf	___lmul@multiplicand+2,c
  1170  000BE8  0E00               	movlw	0
  1171  000BEA  6E08               	movwf	___lmul@multiplicand+3,c
  1172  000BEC  ECA0  F006         	call	___lmul	;wreg free
  1173  000BF0  C001  F00D         	movff	?___lmul,___aldiv@dividend
  1174  000BF4  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  1175  000BF8  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  1176  000BFC  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  1177  000C00  0EB4               	movlw	180
  1178  000C02  6E11               	movwf	___aldiv@divisor,c
  1179  000C04  0E00               	movlw	0
  1180  000C06  6E12               	movwf	___aldiv@divisor+1,c
  1181  000C08  0E00               	movlw	0
  1182  000C0A  6E13               	movwf	___aldiv@divisor+2,c
  1183  000C0C  0E00               	movlw	0
  1184  000C0E  6E14               	movwf	___aldiv@divisor+3,c
  1185  000C10  EC6D  F004         	call	___aldiv	;wreg free
  1186  000C14  0EFA               	movlw	250
  1187  000C16  240D               	addwf	?___aldiv,w,c
  1188  000C18  6E1D               	movwf	ServoOut@value,c
  1189  000C1A  0E00               	movlw	0
  1190  000C1C  200E               	addwfc	?___aldiv+1,w,c
  1191  000C1E  6E1E               	movwf	ServoOut@value+1,c
  1192  000C20  0E00               	movlw	0
  1193  000C22  200F               	addwfc	?___aldiv+2,w,c
  1194  000C24  6E1F               	movwf	ServoOut@value+2,c
  1195  000C26  0E00               	movlw	0
  1196  000C28  2010               	addwfc	?___aldiv+3,w,c
  1197  000C2A  6E20               	movwf	ServoOut@value+3,c
  1198                           
  1199                           ;servo.c: 31:     T1time = 65536 - value;
  1200  000C2C  501D               	movf	ServoOut@value,w,c
  1201  000C2E  0800               	sublw	0
  1202  000C30  6E58               	movwf	_T1time,c
  1203  000C32  501E               	movf	ServoOut@value+1,w,c
  1204  000C34  A0D8               	btfss	status,0,c
  1205  000C36  2AE8               	incf	wreg,f,c
  1206  000C38  0800               	sublw	0
  1207  000C3A  6E59               	movwf	_T1time+1,c
  1208                           
  1209                           ;servo.c: 33:     TMR1H = (T1time >> 8);
  1210  000C3C  5059               	movf	_T1time+1,w,c
  1211  000C3E  6ECF               	movwf	4047,c	;volatile
  1212                           
  1213                           ;servo.c: 34:     TMR1L = (T1time & 0x00ff);
  1214  000C40  C058  FFCE         	movff	_T1time,4046	;volatile
  1215                           
  1216                           ;servo.c: 35:     TMR3H = (55536>>8);
  1217  000C44  0ED8               	movlw	216
  1218  000C46  6EB3               	movwf	4019,c	;volatile
  1219                           
  1220                           ;servo.c: 36:     TMR3L = (55536 & 0x00ff);
  1221  000C48  0EF0               	movlw	240
  1222  000C4A  6EB2               	movwf	4018,c	;volatile
  1223                           
  1224                           ;servo.c: 38:     PORTCbits.RC1 = 1;
  1225  000C4C  8282               	bsf	3970,1,c	;volatile
  1226  000C4E  0012               	return		;funcret
  1227  000C50                     __end_of_ServoOut:
  1228                           	opt callstack 0
  1229                           
  1230 ;; *************** function ___lmul *****************
  1231 ;; Defined at:
  1232 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;  multiplier      4    0[COMRAM] unsigned long 
  1235 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;  product         4    8[COMRAM] unsigned long 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  4    0[COMRAM] unsigned long 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2, status,0
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1247 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1248 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1250 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1251 ;;Total ram usage:       12 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    1
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_ServoOut
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text3
  1262  000D40                     __ptext3:
  1263                           	opt callstack 0
  1264  000D40                     ___lmul:
  1265                           	opt callstack 27
  1266                           
  1267                           ;incstack = 0
  1268  000D40  0E00               	movlw	0
  1269  000D42  6E09               	movwf	___lmul@product,c
  1270  000D44  0E00               	movlw	0
  1271  000D46  6E0A               	movwf	___lmul@product+1,c
  1272  000D48  0E00               	movlw	0
  1273  000D4A  6E0B               	movwf	___lmul@product+2,c
  1274  000D4C  0E00               	movlw	0
  1275  000D4E  6E0C               	movwf	___lmul@product+3,c
  1276  000D50                     l2802:
  1277  000D50  A001               	btfss	___lmul@multiplier,0,c
  1278  000D52  D008               	goto	l2806
  1279  000D54  5005               	movf	___lmul@multiplicand,w,c
  1280  000D56  2609               	addwf	___lmul@product,f,c
  1281  000D58  5006               	movf	___lmul@multiplicand+1,w,c
  1282  000D5A  220A               	addwfc	___lmul@product+1,f,c
  1283  000D5C  5007               	movf	___lmul@multiplicand+2,w,c
  1284  000D5E  220B               	addwfc	___lmul@product+2,f,c
  1285  000D60  5008               	movf	___lmul@multiplicand+3,w,c
  1286  000D62  220C               	addwfc	___lmul@product+3,f,c
  1287  000D64                     l2806:
  1288  000D64  90D8               	bcf	status,0,c
  1289  000D66  3605               	rlcf	___lmul@multiplicand,f,c
  1290  000D68  3606               	rlcf	___lmul@multiplicand+1,f,c
  1291  000D6A  3607               	rlcf	___lmul@multiplicand+2,f,c
  1292  000D6C  3608               	rlcf	___lmul@multiplicand+3,f,c
  1293  000D6E  90D8               	bcf	status,0,c
  1294  000D70  3204               	rrcf	___lmul@multiplier+3,f,c
  1295  000D72  3203               	rrcf	___lmul@multiplier+2,f,c
  1296  000D74  3202               	rrcf	___lmul@multiplier+1,f,c
  1297  000D76  3201               	rrcf	___lmul@multiplier,f,c
  1298  000D78  5001               	movf	___lmul@multiplier,w,c
  1299  000D7A  1002               	iorwf	___lmul@multiplier+1,w,c
  1300  000D7C  1003               	iorwf	___lmul@multiplier+2,w,c
  1301  000D7E  1004               	iorwf	___lmul@multiplier+3,w,c
  1302  000D80  A4D8               	btfss	status,2,c
  1303  000D82  D7E6               	goto	l2802
  1304  000D84  C009  F001         	movff	___lmul@product,?___lmul
  1305  000D88  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1306  000D8C  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1307  000D90  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1308  000D94  0012               	return		;funcret
  1309  000D96                     __end_of___lmul:
  1310                           	opt callstack 0
  1311                           
  1312 ;; *************** function ___aldiv *****************
  1313 ;; Defined at:
  1314 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  dividend        4   12[COMRAM] long 
  1317 ;;  divisor         4   16[COMRAM] long 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  quotient        4   22[COMRAM] long 
  1320 ;;  sign            1   21[COMRAM] unsigned char 
  1321 ;;  counter         1   20[COMRAM] unsigned char 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  4   12[COMRAM] long 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1331 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1332 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1334 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1335 ;;Total ram usage:       14 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; Hardware stack levels required when called:    1
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_ServoOut
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	text4
  1346  0008DA                     __ptext4:
  1347                           	opt callstack 0
  1348  0008DA                     ___aldiv:
  1349                           	opt callstack 27
  1350                           
  1351                           ;incstack = 0
  1352  0008DA  0E00               	movlw	0
  1353  0008DC  6E16               	movwf	___aldiv@sign,c
  1354  0008DE  AE14               	btfss	___aldiv@divisor+3,7,c
  1355  0008E0  D00A               	goto	l2818
  1356  0008E2  1E14               	comf	___aldiv@divisor+3,f,c
  1357  0008E4  1E13               	comf	___aldiv@divisor+2,f,c
  1358  0008E6  1E12               	comf	___aldiv@divisor+1,f,c
  1359  0008E8  6C11               	negf	___aldiv@divisor,c
  1360  0008EA  0E00               	movlw	0
  1361  0008EC  2212               	addwfc	___aldiv@divisor+1,f,c
  1362  0008EE  2213               	addwfc	___aldiv@divisor+2,f,c
  1363  0008F0  2214               	addwfc	___aldiv@divisor+3,f,c
  1364  0008F2  0E01               	movlw	1
  1365  0008F4  6E16               	movwf	___aldiv@sign,c
  1366  0008F6                     l2818:
  1367  0008F6  AE10               	btfss	___aldiv@dividend+3,7,c
  1368  0008F8  D00A               	goto	l2824
  1369  0008FA  1E10               	comf	___aldiv@dividend+3,f,c
  1370  0008FC  1E0F               	comf	___aldiv@dividend+2,f,c
  1371  0008FE  1E0E               	comf	___aldiv@dividend+1,f,c
  1372  000900  6C0D               	negf	___aldiv@dividend,c
  1373  000902  0E00               	movlw	0
  1374  000904  220E               	addwfc	___aldiv@dividend+1,f,c
  1375  000906  220F               	addwfc	___aldiv@dividend+2,f,c
  1376  000908  2210               	addwfc	___aldiv@dividend+3,f,c
  1377  00090A  0E01               	movlw	1
  1378  00090C  1A16               	xorwf	___aldiv@sign,f,c
  1379  00090E                     l2824:
  1380  00090E  0E00               	movlw	0
  1381  000910  6E17               	movwf	___aldiv@quotient,c
  1382  000912  0E00               	movlw	0
  1383  000914  6E18               	movwf	___aldiv@quotient+1,c
  1384  000916  0E00               	movlw	0
  1385  000918  6E19               	movwf	___aldiv@quotient+2,c
  1386  00091A  0E00               	movlw	0
  1387  00091C  6E1A               	movwf	___aldiv@quotient+3,c
  1388  00091E  5011               	movf	___aldiv@divisor,w,c
  1389  000920  1012               	iorwf	___aldiv@divisor+1,w,c
  1390  000922  1013               	iorwf	___aldiv@divisor+2,w,c
  1391  000924  1014               	iorwf	___aldiv@divisor+3,w,c
  1392  000926  B4D8               	btfsc	status,2,c
  1393  000928  D02A               	goto	l2846
  1394  00092A  0E01               	movlw	1
  1395  00092C  6E15               	movwf	___aldiv@counter,c
  1396  00092E  D006               	goto	l2832
  1397  000930                     l2830:
  1398  000930  90D8               	bcf	status,0,c
  1399  000932  3611               	rlcf	___aldiv@divisor,f,c
  1400  000934  3612               	rlcf	___aldiv@divisor+1,f,c
  1401  000936  3613               	rlcf	___aldiv@divisor+2,f,c
  1402  000938  3614               	rlcf	___aldiv@divisor+3,f,c
  1403  00093A  2A15               	incf	___aldiv@counter,f,c
  1404  00093C                     l2832:
  1405  00093C  AE14               	btfss	___aldiv@divisor+3,7,c
  1406  00093E  D7F8               	goto	l2830
  1407  000940                     u1140:
  1408  000940  90D8               	bcf	status,0,c
  1409  000942  3617               	rlcf	___aldiv@quotient,f,c
  1410  000944  3618               	rlcf	___aldiv@quotient+1,f,c
  1411  000946  3619               	rlcf	___aldiv@quotient+2,f,c
  1412  000948  361A               	rlcf	___aldiv@quotient+3,f,c
  1413  00094A  5011               	movf	___aldiv@divisor,w,c
  1414  00094C  5C0D               	subwf	___aldiv@dividend,w,c
  1415  00094E  5012               	movf	___aldiv@divisor+1,w,c
  1416  000950  580E               	subwfb	___aldiv@dividend+1,w,c
  1417  000952  5013               	movf	___aldiv@divisor+2,w,c
  1418  000954  580F               	subwfb	___aldiv@dividend+2,w,c
  1419  000956  5014               	movf	___aldiv@divisor+3,w,c
  1420  000958  5810               	subwfb	___aldiv@dividend+3,w,c
  1421  00095A  A0D8               	btfss	status,0,c
  1422  00095C  D009               	goto	l2842
  1423  00095E  5011               	movf	___aldiv@divisor,w,c
  1424  000960  5E0D               	subwf	___aldiv@dividend,f,c
  1425  000962  5012               	movf	___aldiv@divisor+1,w,c
  1426  000964  5A0E               	subwfb	___aldiv@dividend+1,f,c
  1427  000966  5013               	movf	___aldiv@divisor+2,w,c
  1428  000968  5A0F               	subwfb	___aldiv@dividend+2,f,c
  1429  00096A  5014               	movf	___aldiv@divisor+3,w,c
  1430  00096C  5A10               	subwfb	___aldiv@dividend+3,f,c
  1431  00096E  8017               	bsf	___aldiv@quotient,0,c
  1432  000970                     l2842:
  1433  000970  90D8               	bcf	status,0,c
  1434  000972  3214               	rrcf	___aldiv@divisor+3,f,c
  1435  000974  3213               	rrcf	___aldiv@divisor+2,f,c
  1436  000976  3212               	rrcf	___aldiv@divisor+1,f,c
  1437  000978  3211               	rrcf	___aldiv@divisor,f,c
  1438  00097A  2E15               	decfsz	___aldiv@counter,f,c
  1439  00097C  D7E1               	goto	u1140
  1440  00097E                     l2846:
  1441  00097E  5016               	movf	___aldiv@sign,w,c
  1442  000980  B4D8               	btfsc	status,2,c
  1443  000982  D008               	goto	l2850
  1444  000984  1E1A               	comf	___aldiv@quotient+3,f,c
  1445  000986  1E19               	comf	___aldiv@quotient+2,f,c
  1446  000988  1E18               	comf	___aldiv@quotient+1,f,c
  1447  00098A  6C17               	negf	___aldiv@quotient,c
  1448  00098C  0E00               	movlw	0
  1449  00098E  2218               	addwfc	___aldiv@quotient+1,f,c
  1450  000990  2219               	addwfc	___aldiv@quotient+2,f,c
  1451  000992  221A               	addwfc	___aldiv@quotient+3,f,c
  1452  000994                     l2850:
  1453  000994  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  1454  000998  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  1455  00099C  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  1456  0009A0  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  1457  0009A4  0012               	return		;funcret
  1458  0009A6                     __end_of___aldiv:
  1459                           	opt callstack 0
  1460                           
  1461 ;; *************** function _L6470_command *****************
  1462 ;; Defined at:
  1463 ;;		line 28 in file "can_command.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1479 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1480 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1481 ;;Total ram usage:        2 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    4
  1484 ;; This function calls:
  1485 ;;		_L6470_CMD
  1486 ;;		_L6470_GetRegister
  1487 ;;		_L6470_Move
  1488 ;;		_L6470_Run
  1489 ;;		_L6470_Stop
  1490 ;;		_L6470_change
  1491 ;; This function is called by:
  1492 ;;		_can_recieve
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text5
  1497  0007C8                     __ptext5:
  1498                           	opt callstack 0
  1499  0007C8                     _L6470_command:
  1500                           	opt callstack 25
  1501                           
  1502                           ;can_command.c: 29:     switch(data[2]){
  1503                           
  1504                           ;incstack = 0
  1505  0007C8  D06A               	goto	l2930
  1506  0007CA                     l2908:
  1507                           
  1508                           ;can_command.c: 31:             L6470_Stop(data[7]);
  1509  0007CA  C04F  F002         	movff	_data+7,L6470_Stop@mode
  1510  0007CE  6A03               	clrf	L6470_Stop@mode+1,c
  1511  0007D0  EC37  F007         	call	_L6470_Stop	;wreg free
  1512                           
  1513                           ;can_command.c: 32:             break;
  1514  0007D4  0012               	return	
  1515  0007D6                     l2910:
  1516                           
  1517                           ;can_command.c: 34:             L6470_Run(data[3],L6470_change(&data[4],3));
  1518  0007D6  0E4C               	movlw	low (_data+4)
  1519  0007D8  6E01               	movwf	L6470_change@dt,c
  1520  0007DA  0E00               	movlw	high (_data+4)
  1521  0007DC  6E02               	movwf	L6470_change@dt+1,c
  1522  0007DE  0E00               	movlw	0
  1523  0007E0  6E04               	movwf	L6470_change@num+1,c
  1524  0007E2  0E03               	movlw	3
  1525  0007E4  6E03               	movwf	L6470_change@num,c
  1526  0007E6  EC28  F006         	call	_L6470_change	;wreg free
  1527  0007EA  C001  F013         	movff	?_L6470_change,L6470_Run@speed
  1528  0007EE  C002  F014         	movff	?_L6470_change+1,L6470_Run@speed+1
  1529  0007F2  C003  F015         	movff	?_L6470_change+2,L6470_Run@speed+2
  1530  0007F6  C004  F016         	movff	?_L6470_change+3,L6470_Run@speed+3
  1531  0007FA  504B               	movf	_data+3,w,c
  1532  0007FC  EC6A  F007         	call	_L6470_Run
  1533                           
  1534                           ;can_command.c: 35:             break;
  1535  000800  0012               	return	
  1536  000802                     l2912:
  1537                           
  1538                           ;can_command.c: 37:             L6470_Move(data[3],L6470_change(&data[4],3));
  1539  000802  0E4C               	movlw	low (_data+4)
  1540  000804  6E01               	movwf	L6470_change@dt,c
  1541  000806  0E00               	movlw	high (_data+4)
  1542  000808  6E02               	movwf	L6470_change@dt+1,c
  1543  00080A  0E00               	movlw	0
  1544  00080C  6E04               	movwf	L6470_change@num+1,c
  1545  00080E  0E03               	movlw	3
  1546  000810  6E03               	movwf	L6470_change@num,c
  1547  000812  EC28  F006         	call	_L6470_change	;wreg free
  1548  000816  C001  F013         	movff	?_L6470_change,L6470_Move@step
  1549  00081A  C002  F014         	movff	?_L6470_change+1,L6470_Move@step+1
  1550  00081E  C003  F015         	movff	?_L6470_change+2,L6470_Move@step+2
  1551  000822  C004  F016         	movff	?_L6470_change+3,L6470_Move@step+3
  1552  000826  504B               	movf	_data+3,w,c
  1553  000828  EC51  F007         	call	_L6470_Move
  1554                           
  1555                           ;can_command.c: 38:             break;
  1556  00082C  0012               	return	
  1557  00082E                     l2914:
  1558                           
  1559                           ;can_command.c: 40:             L6470_CMD(0x70);
  1560  00082E  0E00               	movlw	0
  1561  000830  6E03               	movwf	L6470_CMD@command+1,c
  1562  000832  0E70               	movlw	112
  1563  000834  6E02               	movwf	L6470_CMD@command,c
  1564  000836  EC97  F007         	call	_L6470_CMD	;wreg free
  1565                           
  1566                           ;can_command.c: 41:             break;
  1567  00083A  0012               	return	
  1568  00083C                     l2916:
  1569                           
  1570                           ;can_command.c: 43:             L6470_CMD(0xC0);
  1571  00083C  0E00               	movlw	0
  1572  00083E  6E03               	movwf	L6470_CMD@command+1,c
  1573  000840  0EC0               	movlw	192
  1574  000842  6E02               	movwf	L6470_CMD@command,c
  1575  000844  EC97  F007         	call	_L6470_CMD	;wreg free
  1576                           
  1577                           ;can_command.c: 44:             break;
  1578  000848  0012               	return	
  1579  00084A                     l2918:
  1580                           
  1581                           ;can_command.c: 47:                 L6470_Run(0,30000);
  1582  00084A  0E30               	movlw	48
  1583  00084C  6E13               	movwf	L6470_Run@speed,c
  1584  00084E  0E75               	movlw	117
  1585  000850  6E14               	movwf	L6470_Run@speed+1,c
  1586  000852  0E00               	movlw	0
  1587  000854  6E15               	movwf	L6470_Run@speed+2,c
  1588  000856  0E00               	movlw	0
  1589  000858  6E16               	movwf	L6470_Run@speed+3,c
  1590  00085A  0E00               	movlw	0
  1591  00085C  EC6A  F007         	call	_L6470_Run
  1592  000860                     l2920:
  1593                           
  1594                           ;can_command.c: 46:             while(PORTBbits.RB5){
  1595  000860  BA81               	btfsc	3969,5,c	;volatile
  1596  000862  D7F3               	goto	l2918
  1597                           
  1598                           ;can_command.c: 49:             L6470_Stop(1);
  1599  000864  0E00               	movlw	0
  1600  000866  6E03               	movwf	L6470_Stop@mode+1,c
  1601  000868  0E01               	movlw	1
  1602  00086A  6E02               	movwf	L6470_Stop@mode,c
  1603  00086C  EC37  F007         	call	_L6470_Stop	;wreg free
  1604                           
  1605                           ;can_command.c: 50:             L6470_CMD(0xD8);
  1606  000870  0E00               	movlw	0
  1607  000872  6E03               	movwf	L6470_CMD@command+1,c
  1608  000874  0ED8               	movlw	216
  1609  000876  6E02               	movwf	L6470_CMD@command,c
  1610  000878  EC97  F007         	call	_L6470_CMD	;wreg free
  1611                           
  1612                           ;can_command.c: 51:             break;
  1613  00087C  0012               	return	
  1614  00087E                     l2926:
  1615                           
  1616                           ;can_command.c: 53:             pos = L6470_GetRegister(0x01,3);
  1617  00087E  0E00               	movlw	0
  1618  000880  6E03               	movwf	L6470_GetRegister@num+1,c
  1619  000882  0E03               	movlw	3
  1620  000884  6E02               	movwf	L6470_GetRegister@num,c
  1621  000886  0E01               	movlw	1
  1622  000888  ECD3  F004         	call	_L6470_GetRegister
  1623  00088C  C002  F03F         	movff	?_L6470_GetRegister,_pos
  1624  000890  C003  F040         	movff	?_L6470_GetRegister+1,_pos+1
  1625  000894  C004  F041         	movff	?_L6470_GetRegister+2,_pos+2
  1626  000898  C005  F042         	movff	?_L6470_GetRegister+3,_pos+3
  1627                           
  1628                           ;can_command.c: 54:             break;
  1629  00089C  0012               	return	
  1630  00089E                     l2930:
  1631  00089E  504A               	movf	_data+2,w,c
  1632  0008A0  6E18               	movwf	??_L6470_command& (0+255),c
  1633  0008A2  6A19               	clrf	(??_L6470_command+1)& (0+255),c
  1634                           
  1635                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1636                           ; Switch size 1, requested type "simple"
  1637                           ; Number of cases is 1, Range of values is 0 to 0
  1638                           ; switch strategies available:
  1639                           ; Name         Instructions Cycles
  1640                           ; simple_byte            4     3 (average)
  1641                           ;	Chosen strategy is simple_byte
  1642  0008A4  5019               	movf	??_L6470_command+1,w,c
  1643  0008A6  0A00               	xorlw	0	; case 0
  1644  0008A8  A4D8               	btfss	status,2,c
  1645  0008AA  0012               	return	
  1646                           
  1647                           ; Switch size 1, requested type "simple"
  1648                           ; Number of cases is 7, Range of values is 0 to 6
  1649                           ; switch strategies available:
  1650                           ; Name         Instructions Cycles
  1651                           ; simple_byte           22    12 (average)
  1652                           ;	Chosen strategy is simple_byte
  1653  0008AC  5018               	movf	??_L6470_command,w,c
  1654  0008AE  0A00               	xorlw	0	; case 0
  1655  0008B0  B4D8               	btfsc	status,2,c
  1656  0008B2  D78B               	goto	l2908
  1657  0008B4  0A01               	xorlw	1	; case 1
  1658  0008B6  B4D8               	btfsc	status,2,c
  1659  0008B8  D78E               	goto	l2910
  1660  0008BA  0A03               	xorlw	3	; case 2
  1661  0008BC  B4D8               	btfsc	status,2,c
  1662  0008BE  D7A1               	goto	l2912
  1663  0008C0  0A01               	xorlw	1	; case 3
  1664  0008C2  B4D8               	btfsc	status,2,c
  1665  0008C4  D7B4               	goto	l2914
  1666  0008C6  0A07               	xorlw	7	; case 4
  1667  0008C8  B4D8               	btfsc	status,2,c
  1668  0008CA  D7B8               	goto	l2916
  1669  0008CC  0A01               	xorlw	1	; case 5
  1670  0008CE  B4D8               	btfsc	status,2,c
  1671  0008D0  D7C7               	goto	l2920
  1672  0008D2  0A03               	xorlw	3	; case 6
  1673  0008D4  A4D8               	btfss	status,2,c
  1674  0008D6  0012               	return	
  1675  0008D8  D7D2               	goto	l2926
  1676  0008DA                     __end_of_L6470_command:
  1677                           	opt callstack 0
  1678                           
  1679 ;; *************** function _L6470_change *****************
  1680 ;; Defined at:
  1681 ;;		line 18 in file "can_command.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  dt              2    0[COMRAM] PTR unsigned char 
  1684 ;;		 -> data(8), 
  1685 ;;  num             2    2[COMRAM] int 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  val             4   11[COMRAM] unsigned long 
  1688 ;;  i               2    9[COMRAM] int 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  4    0[COMRAM] unsigned long 
  1691 ;; Registers used:
  1692 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1699 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1700 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1701 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1702 ;;Total ram usage:       15 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; Hardware stack levels required when called:    1
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_L6470_command
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text6
  1713  000C50                     __ptext6:
  1714                           	opt callstack 0
  1715  000C50                     _L6470_change:
  1716                           	opt callstack 27
  1717                           
  1718                           ;can_command.c: 19:     int i;;can_command.c: 20:     unsigned long val = 0;
  1719                           
  1720                           ;incstack = 0
  1721  000C50  0E00               	movlw	0
  1722  000C52  6E0C               	movwf	L6470_change@val,c
  1723  000C54  0E00               	movlw	0
  1724  000C56  6E0D               	movwf	L6470_change@val+1,c
  1725  000C58  0E00               	movlw	0
  1726  000C5A  6E0E               	movwf	L6470_change@val+2,c
  1727  000C5C  0E00               	movlw	0
  1728  000C5E  6E0F               	movwf	L6470_change@val+3,c
  1729                           
  1730                           ;can_command.c: 21:     for(i=0; i<num; i++){
  1731  000C60  0E00               	movlw	0
  1732  000C62  6E0B               	movwf	L6470_change@i+1,c
  1733  000C64  0E00               	movlw	0
  1734  000C66  6E0A               	movwf	L6470_change@i,c
  1735  000C68  D01D               	goto	l2798
  1736  000C6A                     l2792:
  1737                           
  1738                           ;can_command.c: 22:         val = (val << 8) + *dt;
  1739  000C6A  C001  FFD9         	movff	L6470_change@dt,fsr2l
  1740  000C6E  C002  FFDA         	movff	L6470_change@dt+1,fsr2h
  1741  000C72  50DF               	movf	indf2,w,c
  1742  000C74  6E05               	movwf	??_L6470_change& (0+255),c
  1743  000C76  5005               	movf	??_L6470_change,w,c
  1744  000C78  C00C  F007         	movff	L6470_change@val,??_L6470_change+2
  1745  000C7C  C00D  F008         	movff	L6470_change@val+1,??_L6470_change+3
  1746  000C80  C00E  F009         	movff	L6470_change@val+2,??_L6470_change+4
  1747  000C84  6A06               	clrf	(??_L6470_change+1)& (0+255),c
  1748  000C86  2406               	addwf	??_L6470_change+1,w,c
  1749  000C88  6E0C               	movwf	L6470_change@val,c
  1750  000C8A  0E00               	movlw	0
  1751  000C8C  2007               	addwfc	??_L6470_change+2,w,c
  1752  000C8E  6E0D               	movwf	L6470_change@val+1,c
  1753  000C90  0E00               	movlw	0
  1754  000C92  2008               	addwfc	??_L6470_change+3,w,c
  1755  000C94  6E0E               	movwf	L6470_change@val+2,c
  1756  000C96  0E00               	movlw	0
  1757  000C98  2009               	addwfc	??_L6470_change+4,w,c
  1758  000C9A  6E0F               	movwf	L6470_change@val+3,c
  1759                           
  1760                           ;can_command.c: 23:         ++dt;
  1761  000C9C  4A01               	infsnz	L6470_change@dt,f,c
  1762  000C9E  2A02               	incf	L6470_change@dt+1,f,c
  1763                           
  1764                           ;can_command.c: 24:     }
  1765  000CA0  4A0A               	infsnz	L6470_change@i,f,c
  1766  000CA2  2A0B               	incf	L6470_change@i+1,f,c
  1767  000CA4                     l2798:
  1768  000CA4  5003               	movf	L6470_change@num,w,c
  1769  000CA6  5C0A               	subwf	L6470_change@i,w,c
  1770  000CA8  500B               	movf	L6470_change@i+1,w,c
  1771  000CAA  0A80               	xorlw	128
  1772  000CAC  6E05               	movwf	??_L6470_change& (0+255),c
  1773  000CAE  5004               	movf	L6470_change@num+1,w,c
  1774  000CB0  0A80               	xorlw	128
  1775  000CB2  5805               	subwfb	??_L6470_change& (0+255),w,c
  1776  000CB4  A0D8               	btfss	status,0,c
  1777  000CB6  D7D9               	goto	l2792
  1778                           
  1779                           ;can_command.c: 25:     return val;
  1780  000CB8  C00C  F001         	movff	L6470_change@val,?_L6470_change
  1781  000CBC  C00D  F002         	movff	L6470_change@val+1,?_L6470_change+1
  1782  000CC0  C00E  F003         	movff	L6470_change@val+2,?_L6470_change+2
  1783  000CC4  C00F  F004         	movff	L6470_change@val+3,?_L6470_change+3
  1784  000CC8  0012               	return		;funcret
  1785  000CCA                     __end_of_L6470_change:
  1786                           	opt callstack 0
  1787                           
  1788 ;; *************** function _L6470_Stop *****************
  1789 ;; Defined at:
  1790 ;;		line 205 in file "L6470.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  mode            2    1[COMRAM] int 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  cmd             4    3[COMRAM] unsigned char [4]
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1805 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1807 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1808 ;;Total ram usage:        6 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    2
  1811 ;; This function calls:
  1812 ;;		_SPI_transfer
  1813 ;; This function is called by:
  1814 ;;		_main
  1815 ;;		_L6470_command
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text7
  1820  000E6E                     __ptext7:
  1821                           	opt callstack 0
  1822  000E6E                     _L6470_Stop:
  1823                           	opt callstack 26
  1824                           
  1825                           ;L6470.c: 205: void L6470_Stop(int mode);L6470.c: 206: {;L6470.c: 207:      unsigned cha
      +                          r cmd[4] = {0xB0,0xB8,0xA0,0xA8} ;
  1826                           
  1827                           ;incstack = 0
  1828  000E6E  C050  F004         	movff	L6470_Stop@F12231,L6470_Stop@cmd
  1829  000E72  C051  F005         	movff	L6470_Stop@F12231+1,L6470_Stop@cmd+1
  1830  000E76  C052  F006         	movff	L6470_Stop@F12231+2,L6470_Stop@cmd+2
  1831  000E7A  C053  F007         	movff	L6470_Stop@F12231+3,L6470_Stop@cmd+3
  1832  000E7E                     l2736:
  1833  000E7E  5043               	movf	_Busy,w,c
  1834  000E80  1044               	iorwf	_Busy+1,w,c
  1835  000E82  A4D8               	btfss	status,2,c
  1836  000E84  D002               	goto	u1010
  1837  000E86  A281               	btfss	3969,1,c	;volatile
  1838  000E88  D7FA               	goto	l2736
  1839  000E8A                     u1010:
  1840                           
  1841                           ;L6470.c: 210:      PORTBbits.RB0 = 0 ;
  1842  000E8A  9081               	bcf	3969,0,c	;volatile
  1843                           
  1844                           ;L6470.c: 211:      SPI_transfer(cmd[mode]) ;
  1845  000E8C  0E04               	movlw	low L6470_Stop@cmd
  1846  000E8E  2402               	addwf	L6470_Stop@mode,w,c
  1847  000E90  6ED9               	movwf	fsr2l,c
  1848  000E92  0E00               	movlw	high L6470_Stop@cmd
  1849  000E94  2003               	addwfc	L6470_Stop@mode+1,w,c
  1850  000E96  6EDA               	movwf	fsr2h,c
  1851  000E98  50DF               	movf	indf2,w,c
  1852  000E9A  ECA3  F007         	call	_SPI_transfer
  1853                           
  1854                           ;L6470.c: 212:      PORTBbits.RB0 = 1 ;
  1855  000E9E  8081               	bsf	3969,0,c	;volatile
  1856  000EA0  0012               	return		;funcret
  1857  000EA2                     __end_of_L6470_Stop:
  1858                           	opt callstack 0
  1859                           
  1860 ;; *************** function _L6470_Run *****************
  1861 ;; Defined at:
  1862 ;;		line 174 in file "L6470.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  dir             1    wreg     unsigned char 
  1865 ;;  speed           4   18[COMRAM] unsigned long 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  dir             1   22[COMRAM] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1880 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1881 ;;Total ram usage:        5 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    3
  1884 ;; This function calls:
  1885 ;;		_CMD_Send
  1886 ;; This function is called by:
  1887 ;;		_main
  1888 ;;		_L6470_command
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text8
  1893  000ED4                     __ptext8:
  1894                           	opt callstack 0
  1895  000ED4                     _L6470_Run:
  1896                           	opt callstack 25
  1897                           
  1898                           ;incstack = 0
  1899                           ;L6470_Run@dir stored from wreg
  1900  000ED4  6E17               	movwf	L6470_Run@dir,c
  1901  000ED6                     
  1902                           ;L6470.c: 174: void L6470_Run(char dir,unsigned long speed);L6470.c: 175: {;L6470.c: 176
      +                          :      while( (Busy==0) && (PORTBbits.RB1==0) ) ;
  1903  000ED6  5043               	movf	_Busy,w,c
  1904  000ED8  1044               	iorwf	_Busy+1,w,c
  1905  000EDA  A4D8               	btfss	status,2,c
  1906  000EDC  D002               	goto	u990
  1907  000EDE  A281               	btfss	3969,1,c	;volatile
  1908  000EE0  D7FA               	goto	l2726
  1909  000EE2                     u990:
  1910                           
  1911                           ;L6470.c: 177:      CMD_Send(0x50|dir,speed,3) ;
  1912  000EE2  C013  F002         	movff	L6470_Run@speed,CMD_Send@val
  1913  000EE6  C014  F003         	movff	L6470_Run@speed+1,CMD_Send@val+1
  1914  000EEA  C015  F004         	movff	L6470_Run@speed+2,CMD_Send@val+2
  1915  000EEE  C016  F005         	movff	L6470_Run@speed+3,CMD_Send@val+3
  1916  000EF2  0E00               	movlw	0
  1917  000EF4  6E07               	movwf	CMD_Send@num+1,c
  1918  000EF6  0E03               	movlw	3
  1919  000EF8  6E06               	movwf	CMD_Send@num,c
  1920  000EFA  5017               	movf	L6470_Run@dir,w,c
  1921  000EFC  0950               	iorlw	80
  1922  000EFE  EC32  F005         	call	_CMD_Send
  1923  000F02  0012               	return		;funcret
  1924  000F04                     __end_of_L6470_Run:
  1925                           	opt callstack 0
  1926                           
  1927 ;; *************** function _L6470_Move *****************
  1928 ;; Defined at:
  1929 ;;		line 188 in file "L6470.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  dir             1    wreg     unsigned char 
  1932 ;;  step            4   18[COMRAM] unsigned long 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  dir             1   22[COMRAM] unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1947 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1948 ;;Total ram usage:        5 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    3
  1951 ;; This function calls:
  1952 ;;		_CMD_Send
  1953 ;; This function is called by:
  1954 ;;		_L6470_command
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text9
  1959  000EA2                     __ptext9:
  1960                           	opt callstack 0
  1961  000EA2                     _L6470_Move:
  1962                           	opt callstack 25
  1963                           
  1964                           ;incstack = 0
  1965                           ;L6470_Move@dir stored from wreg
  1966  000EA2  6E17               	movwf	L6470_Move@dir,c
  1967                           
  1968                           ;L6470.c: 188: void L6470_Move(char dir,unsigned long step);L6470.c: 189: {;L6470.c: 190
      +                          :     PORTCbits.RC2 = 1;
  1969  000EA4  8482               	bsf	3970,2,c	;volatile
  1970  000EA6                     l2784:
  1971  000EA6  5043               	movf	_Busy,w,c
  1972  000EA8  1044               	iorwf	_Busy+1,w,c
  1973  000EAA  A4D8               	btfss	status,2,c
  1974  000EAC  D002               	goto	u1070
  1975  000EAE  A281               	btfss	3969,1,c	;volatile
  1976  000EB0  D7FA               	goto	l2784
  1977  000EB2                     u1070:
  1978                           
  1979                           ;L6470.c: 192:      CMD_Send(0x40|dir,step,3) ;
  1980  000EB2  C013  F002         	movff	L6470_Move@step,CMD_Send@val
  1981  000EB6  C014  F003         	movff	L6470_Move@step+1,CMD_Send@val+1
  1982  000EBA  C015  F004         	movff	L6470_Move@step+2,CMD_Send@val+2
  1983  000EBE  C016  F005         	movff	L6470_Move@step+3,CMD_Send@val+3
  1984  000EC2  0E00               	movlw	0
  1985  000EC4  6E07               	movwf	CMD_Send@num+1,c
  1986  000EC6  0E03               	movlw	3
  1987  000EC8  6E06               	movwf	CMD_Send@num,c
  1988  000ECA  5017               	movf	L6470_Move@dir,w,c
  1989  000ECC  0940               	iorlw	64
  1990  000ECE  EC32  F005         	call	_CMD_Send
  1991  000ED2  0012               	return		;funcret
  1992  000ED4                     __end_of_L6470_Move:
  1993                           	opt callstack 0
  1994                           
  1995 ;; *************** function _L6470_CMD *****************
  1996 ;; Defined at:
  1997 ;;		line 215 in file "L6470.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  command         2    1[COMRAM] int 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2014 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2015 ;;Total ram usage:        2 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    2
  2018 ;; This function calls:
  2019 ;;		_SPI_transfer
  2020 ;; This function is called by:
  2021 ;;		_main
  2022 ;;		_L6470_command
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text10
  2027  000F2E                     __ptext10:
  2028                           	opt callstack 0
  2029  000F2E                     _L6470_CMD:
  2030                           	opt callstack 26
  2031                           
  2032                           ;L6470.c: 216:     while( (Busy==0) && (PORTBbits.RB1==0) ) ;
  2033                           
  2034                           ;incstack = 0
  2035  000F2E  5043               	movf	_Busy,w,c
  2036  000F30  1044               	iorwf	_Busy+1,w,c
  2037  000F32  A4D8               	btfss	status,2,c
  2038  000F34  D002               	goto	u1030
  2039  000F36  A281               	btfss	3969,1,c	;volatile
  2040  000F38  D7FA               	goto	_L6470_CMD
  2041  000F3A                     u1030:
  2042                           
  2043                           ;L6470.c: 217:      PORTBbits.RB0 = 0 ;
  2044  000F3A  9081               	bcf	3969,0,c	;volatile
  2045                           
  2046                           ;L6470.c: 218:      SPI_transfer(command) ;
  2047  000F3C  5002               	movf	L6470_CMD@command,w,c
  2048  000F3E  ECA3  F007         	call	_SPI_transfer
  2049                           
  2050                           ;L6470.c: 219:      PORTBbits.RB0 = 1 ;
  2051  000F42  8081               	bsf	3969,0,c	;volatile
  2052  000F44  0012               	return		;funcret
  2053  000F46                     __end_of_L6470_CMD:
  2054                           	opt callstack 0
  2055                           
  2056 ;; *************** function _Wait *****************
  2057 ;; Defined at:
  2058 ;;		line 215 in file "main.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  num             2    0[COMRAM] unsigned int 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  i               2    3[COMRAM] int 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg, status,2, status,0
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2073 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2075 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2076 ;;Total ram usage:        5 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    1
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		_main
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text11
  2087  000F04                     __ptext11:
  2088                           	opt callstack 0
  2089  000F04                     _Wait:
  2090                           	opt callstack 29
  2091                           
  2092                           ;main.c: 215: void Wait(unsigned int num);main.c: 216: {;main.c: 217:      int i ;;main.
      +                          c: 220:      for (i=0 ; i<num ; i++) {
  2093                           
  2094                           ;incstack = 0
  2095  000F04  0E00               	movlw	0
  2096  000F06  6E05               	movwf	Wait@i+1,c
  2097  000F08  0E00               	movlw	0
  2098  000F0A  6E04               	movwf	Wait@i,c
  2099  000F0C  D009               	goto	l397
  2100  000F0E                     l3122:
  2101                           
  2102                           ;main.c: 221:           _delay((unsigned long)((10)*(16000000/4000.0))) ;
  2103  000F0E  0E34               	movlw	52
  2104  000F10  6E03               	movwf	??_Wait& (0+255),c
  2105  000F12  0EF2               	movlw	242
  2106  000F14                     u1527:
  2107  000F14  2EE8               	decfsz	wreg,f,c
  2108  000F16  D7FE               	bra	u1527
  2109  000F18  2E03               	decfsz	??_Wait& (0+255),f,c
  2110  000F1A  D7FC               	bra	u1527
  2111                           
  2112                           ;main.c: 222:      }
  2113  000F1C  4A04               	infsnz	Wait@i,f,c
  2114  000F1E  2A05               	incf	Wait@i+1,f,c
  2115  000F20                     l397:
  2116  000F20  5001               	movf	Wait@num,w,c
  2117  000F22  5C04               	subwf	Wait@i,w,c
  2118  000F24  5002               	movf	Wait@num+1,w,c
  2119  000F26  5805               	subwfb	Wait@i+1,w,c
  2120  000F28  B0D8               	btfsc	status,0,c
  2121  000F2A  0012               	return	
  2122  000F2C  D7F0               	goto	l3122
  2123  000F2E                     __end_of_Wait:
  2124                           	opt callstack 0
  2125                           
  2126 ;; *************** function _SPI_Init *****************
  2127 ;; Defined at:
  2128 ;;		line 36 in file "SPIlib.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  mode            1    wreg     unsigned char 
  2131 ;;  divider         1    0[COMRAM] unsigned char 
  2132 ;;  sdo             2    1[COMRAM] int 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  mode            1    5[COMRAM] unsigned char 
  2135 ;;  con             1    4[COMRAM] unsigned char 
  2136 ;;  stat            1    3[COMRAM] unsigned char 
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, status,2, status,0
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2146 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2147 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2149 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2150 ;;Total ram usage:        6 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; Hardware stack levels required when called:    1
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		_main
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text12
  2161  000D96                     __ptext12:
  2162                           	opt callstack 0
  2163  000D96                     _SPI_Init:
  2164                           	opt callstack 29
  2165                           
  2166                           ;incstack = 0
  2167                           ;SPI_Init@mode stored from wreg
  2168  000D96  6E06               	movwf	SPI_Init@mode,c
  2169                           
  2170                           ;SPIlib.c: 36: void SPI_Init(char mode,char divider,int sdo);SPIlib.c: 37: {;SPIlib.c: 3
      +                          8:      char con , stat ;;SPIlib.c: 65:      con = 0b00100000 ;
  2171  000D98  0E20               	movlw	32
  2172  000D9A  6E05               	movwf	SPI_Init@con,c
  2173                           
  2174                           ;SPIlib.c: 66:      stat = 0b00000000 ;
  2175  000D9C  0E00               	movlw	0
  2176  000D9E  6E04               	movwf	SPI_Init@stat,c
  2177                           
  2178                           ;SPIlib.c: 67:      con = con | divider ;
  2179  000DA0  5005               	movf	SPI_Init@con,w,c
  2180  000DA2  1001               	iorwf	SPI_Init@divider,w,c
  2181  000DA4  6E05               	movwf	SPI_Init@con,c
  2182                           
  2183                           ;SPIlib.c: 68:      if (mode == 0 || mode == 2) {
  2184  000DA6  5006               	movf	SPI_Init@mode,w,c
  2185  000DA8  B4D8               	btfsc	status,2,c
  2186  000DAA  D004               	goto	u1270
  2187  000DAC  0E02               	movlw	2
  2188  000DAE  1806               	xorwf	SPI_Init@mode,w,c
  2189  000DB0  A4D8               	btfss	status,2,c
  2190  000DB2  D003               	goto	l768
  2191  000DB4                     u1270:
  2192                           
  2193                           ;SPIlib.c: 69:           stat = stat | 0x40 ;
  2194  000DB4  5004               	movf	SPI_Init@stat,w,c
  2195  000DB6  0940               	iorlw	64
  2196  000DB8  6E04               	movwf	SPI_Init@stat,c
  2197  000DBA                     l768:
  2198                           
  2199                           ;SPIlib.c: 71:      if (mode == 2 || mode == 3) {
  2200  000DBA  0E02               	movlw	2
  2201  000DBC  1806               	xorwf	SPI_Init@mode,w,c
  2202  000DBE  B4D8               	btfsc	status,2,c
  2203  000DC0  D004               	goto	u1290
  2204  000DC2  0E03               	movlw	3
  2205  000DC4  1806               	xorwf	SPI_Init@mode,w,c
  2206  000DC6  A4D8               	btfss	status,2,c
  2207  000DC8  D003               	goto	l3046
  2208  000DCA                     u1290:
  2209                           
  2210                           ;SPIlib.c: 72:           con = con | 0x10 ;
  2211  000DCA  5005               	movf	SPI_Init@con,w,c
  2212  000DCC  0910               	iorlw	16
  2213  000DCE  6E05               	movwf	SPI_Init@con,c
  2214  000DD0                     l3046:
  2215                           
  2216                           ;SPIlib.c: 74:      SSPCON1 = con ;
  2217  000DD0  C005  FFC6         	movff	SPI_Init@con,4038	;volatile
  2218                           
  2219                           ;SPIlib.c: 75:      SSPSTAT = stat ;
  2220  000DD4  C004  FFC7         	movff	SPI_Init@stat,4039	;volatile
  2221                           
  2222                           ;SPIlib.c: 76:      PIR1bits.SSPIF = 0 ;
  2223  000DD8  969E               	bcf	3998,3,c	;volatile
  2224                           
  2225                           ;SPIlib.c: 77:      INTCONbits.PEIE = 1 ;
  2226  000DDA  8CF2               	bsf	4082,6,c	;volatile
  2227                           
  2228                           ;SPIlib.c: 78:      INTCONbits.GIE = 1 ;
  2229  000DDC  8EF2               	bsf	4082,7,c	;volatile
  2230  000DDE  0012               	return		;funcret
  2231  000DE0                     __end_of_SPI_Init:
  2232                           	opt callstack 0
  2233                           
  2234 ;; *************** function _L6470_Init *****************
  2235 ;; Defined at:
  2236 ;;		line 62 in file "L6470.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;		None
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  val             4   27[COMRAM] long 
  2241 ;;  i               2   31[COMRAM] int 
  2242 ;;  config          2   24[COMRAM] struct CONFIG_t
  2243 ;;  step_mode       1   26[COMRAM] struct STEP_MODE_t
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  4   20[COMRAM] unsigned long 
  2246 ;; Registers used:
  2247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2253 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2254 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2256 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2257 ;;Total ram usage:       13 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:    3
  2260 ;; This function calls:
  2261 ;;		_CMD_Send
  2262 ;;		_L6470_GetRegister
  2263 ;;		_SPI_transfer
  2264 ;; This function is called by:
  2265 ;;		_main
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text13
  2270  000498                     __ptext13:
  2271                           	opt callstack 0
  2272  000498                     _L6470_Init:
  2273                           	opt callstack 27
  2274                           
  2275                           ;L6470.c: 64:      union STEP_MODE_t step_mode ;;L6470.c: 65:      union CONFIG_t config
      +                           ;;L6470.c: 66:      long val ;;L6470.c: 67:      int i ;;L6470.c: 70:      for (i=0 ; i
      +                          <4 ; i++) {
  2276                           
  2277                           ;incstack = 0
  2278  000498  0E00               	movlw	0
  2279  00049A  6E21               	movwf	L6470_Init@i+1,c
  2280  00049C  0E00               	movlw	0
  2281  00049E  6E20               	movwf	L6470_Init@i,c
  2282  0004A0                     l424:
  2283                           
  2284                           ;L6470.c: 71:           PORTBbits.RB0 = 0 ;
  2285  0004A0  9081               	bcf	3969,0,c	;volatile
  2286                           
  2287                           ;L6470.c: 72:           SPI_transfer(0x00) ;
  2288  0004A2  0E00               	movlw	0
  2289  0004A4  ECA3  F007         	call	_SPI_transfer
  2290                           
  2291                           ;L6470.c: 73:           PORTBbits.RB0 = 1 ;
  2292  0004A8  8081               	bsf	3969,0,c	;volatile
  2293                           
  2294                           ;L6470.c: 74:      }
  2295  0004AA  4A20               	infsnz	L6470_Init@i,f,c
  2296  0004AC  2A21               	incf	L6470_Init@i+1,f,c
  2297  0004AE  BE21               	btfsc	L6470_Init@i+1,7,c
  2298  0004B0  D7F7               	goto	l424
  2299  0004B2  5021               	movf	L6470_Init@i+1,w,c
  2300  0004B4  E104               	bnz	u1300
  2301  0004B6  0E04               	movlw	4
  2302  0004B8  5C20               	subwf	L6470_Init@i,w,c
  2303  0004BA  A0D8               	btfss	status,0,c
  2304  0004BC  D7F1               	goto	l424
  2305  0004BE                     u1300:
  2306                           
  2307                           ;L6470.c: 75:      PORTBbits.RB0 = 0 ;
  2308  0004BE  9081               	bcf	3969,0,c	;volatile
  2309                           
  2310                           ;L6470.c: 76:      SPI_transfer(0xC0) ;
  2311  0004C0  0EC0               	movlw	192
  2312  0004C2  ECA3  F007         	call	_SPI_transfer
  2313                           
  2314                           ;L6470.c: 77:      PORTBbits.RB0 = 1 ;
  2315  0004C6  8081               	bsf	3969,0,c	;volatile
  2316                           
  2317                           ;L6470.c: 79:      CMD_Send(0x05,0x008A,2) ;
  2318  0004C8  0E8A               	movlw	138
  2319  0004CA  6E02               	movwf	CMD_Send@val,c
  2320  0004CC  0E00               	movlw	0
  2321  0004CE  6E03               	movwf	CMD_Send@val+1,c
  2322  0004D0  0E00               	movlw	0
  2323  0004D2  6E04               	movwf	CMD_Send@val+2,c
  2324  0004D4  0E00               	movlw	0
  2325  0004D6  6E05               	movwf	CMD_Send@val+3,c
  2326  0004D8  0E00               	movlw	0
  2327  0004DA  6E07               	movwf	CMD_Send@num+1,c
  2328  0004DC  0E02               	movlw	2
  2329  0004DE  6E06               	movwf	CMD_Send@num,c
  2330  0004E0  0E05               	movlw	5
  2331  0004E2  EC32  F005         	call	_CMD_Send
  2332                           
  2333                           ;L6470.c: 80:      CMD_Send(0x06,0x008A,2) ;
  2334  0004E6  0E8A               	movlw	138
  2335  0004E8  6E02               	movwf	CMD_Send@val,c
  2336  0004EA  0E00               	movlw	0
  2337  0004EC  6E03               	movwf	CMD_Send@val+1,c
  2338  0004EE  0E00               	movlw	0
  2339  0004F0  6E04               	movwf	CMD_Send@val+2,c
  2340  0004F2  0E00               	movlw	0
  2341  0004F4  6E05               	movwf	CMD_Send@val+3,c
  2342  0004F6  0E00               	movlw	0
  2343  0004F8  6E07               	movwf	CMD_Send@num+1,c
  2344  0004FA  0E02               	movlw	2
  2345  0004FC  6E06               	movwf	CMD_Send@num,c
  2346  0004FE  0E06               	movlw	6
  2347  000500  EC32  F005         	call	_CMD_Send
  2348                           
  2349                           ;L6470.c: 81:      CMD_Send(0x07,0x0020,2) ;
  2350  000504  0E20               	movlw	32
  2351  000506  6E02               	movwf	CMD_Send@val,c
  2352  000508  0E00               	movlw	0
  2353  00050A  6E03               	movwf	CMD_Send@val+1,c
  2354  00050C  0E00               	movlw	0
  2355  00050E  6E04               	movwf	CMD_Send@val+2,c
  2356  000510  0E00               	movlw	0
  2357  000512  6E05               	movwf	CMD_Send@val+3,c
  2358  000514  0E00               	movlw	0
  2359  000516  6E07               	movwf	CMD_Send@num+1,c
  2360  000518  0E02               	movlw	2
  2361  00051A  6E06               	movwf	CMD_Send@num,c
  2362  00051C  0E07               	movlw	7
  2363  00051E  EC32  F005         	call	_CMD_Send
  2364                           
  2365                           ;L6470.c: 82:      CMD_Send(0x08,0x0001,2) ;
  2366  000522  0E01               	movlw	1
  2367  000524  6E02               	movwf	CMD_Send@val,c
  2368  000526  0E00               	movlw	0
  2369  000528  6E03               	movwf	CMD_Send@val+1,c
  2370  00052A  0E00               	movlw	0
  2371  00052C  6E04               	movwf	CMD_Send@val+2,c
  2372  00052E  0E00               	movlw	0
  2373  000530  6E05               	movwf	CMD_Send@val+3,c
  2374  000532  0E00               	movlw	0
  2375  000534  6E07               	movwf	CMD_Send@num+1,c
  2376  000536  0E02               	movlw	2
  2377  000538  6E06               	movwf	CMD_Send@num,c
  2378  00053A  0E08               	movlw	8
  2379  00053C  EC32  F005         	call	_CMD_Send
  2380                           
  2381                           ;L6470.c: 83:      CMD_Send(0x09,0xFF,1) ;
  2382  000540  0EFF               	movlw	255
  2383  000542  6E02               	movwf	CMD_Send@val,c
  2384  000544  0E00               	movlw	0
  2385  000546  6E03               	movwf	CMD_Send@val+1,c
  2386  000548  0E00               	movlw	0
  2387  00054A  6E04               	movwf	CMD_Send@val+2,c
  2388  00054C  0E00               	movlw	0
  2389  00054E  6E05               	movwf	CMD_Send@val+3,c
  2390  000550  0E00               	movlw	0
  2391  000552  6E07               	movwf	CMD_Send@num+1,c
  2392  000554  0E01               	movlw	1
  2393  000556  6E06               	movwf	CMD_Send@num,c
  2394  000558  0E09               	movlw	9
  2395  00055A  EC32  F005         	call	_CMD_Send
  2396                           
  2397                           ;L6470.c: 84:      CMD_Send(0x0A,0xF0,1) ;
  2398  00055E  0EF0               	movlw	240
  2399  000560  6E02               	movwf	CMD_Send@val,c
  2400  000562  0E00               	movlw	0
  2401  000564  6E03               	movwf	CMD_Send@val+1,c
  2402  000566  0E00               	movlw	0
  2403  000568  6E04               	movwf	CMD_Send@val+2,c
  2404  00056A  0E00               	movlw	0
  2405  00056C  6E05               	movwf	CMD_Send@val+3,c
  2406  00056E  0E00               	movlw	0
  2407  000570  6E07               	movwf	CMD_Send@num+1,c
  2408  000572  0E01               	movlw	1
  2409  000574  6E06               	movwf	CMD_Send@num,c
  2410  000576  0E0A               	movlw	10
  2411  000578  EC32  F005         	call	_CMD_Send
  2412                           
  2413                           ;L6470.c: 85:      CMD_Send(0x0B,0xF0,1) ;
  2414  00057C  0EF0               	movlw	240
  2415  00057E  6E02               	movwf	CMD_Send@val,c
  2416  000580  0E00               	movlw	0
  2417  000582  6E03               	movwf	CMD_Send@val+1,c
  2418  000584  0E00               	movlw	0
  2419  000586  6E04               	movwf	CMD_Send@val+2,c
  2420  000588  0E00               	movlw	0
  2421  00058A  6E05               	movwf	CMD_Send@val+3,c
  2422  00058C  0E00               	movlw	0
  2423  00058E  6E07               	movwf	CMD_Send@num+1,c
  2424  000590  0E01               	movlw	1
  2425  000592  6E06               	movwf	CMD_Send@num,c
  2426  000594  0E0B               	movlw	11
  2427  000596  EC32  F005         	call	_CMD_Send
  2428                           
  2429                           ;L6470.c: 86:      CMD_Send(0x0C,0xF0,1) ;
  2430  00059A  0EF0               	movlw	240
  2431  00059C  6E02               	movwf	CMD_Send@val,c
  2432  00059E  0E00               	movlw	0
  2433  0005A0  6E03               	movwf	CMD_Send@val+1,c
  2434  0005A2  0E00               	movlw	0
  2435  0005A4  6E04               	movwf	CMD_Send@val+2,c
  2436  0005A6  0E00               	movlw	0
  2437  0005A8  6E05               	movwf	CMD_Send@val+3,c
  2438  0005AA  0E00               	movlw	0
  2439  0005AC  6E07               	movwf	CMD_Send@num+1,c
  2440  0005AE  0E01               	movlw	1
  2441  0005B0  6E06               	movwf	CMD_Send@num,c
  2442  0005B2  0E0C               	movlw	12
  2443  0005B4  EC32  F005         	call	_CMD_Send
  2444                           
  2445                           ;L6470.c: 87:      CMD_Send(0x13,0x0F,1) ;
  2446  0005B8  0E0F               	movlw	15
  2447  0005BA  6E02               	movwf	CMD_Send@val,c
  2448  0005BC  0E00               	movlw	0
  2449  0005BE  6E03               	movwf	CMD_Send@val+1,c
  2450  0005C0  0E00               	movlw	0
  2451  0005C2  6E04               	movwf	CMD_Send@val+2,c
  2452  0005C4  0E00               	movlw	0
  2453  0005C6  6E05               	movwf	CMD_Send@val+3,c
  2454  0005C8  0E00               	movlw	0
  2455  0005CA  6E07               	movwf	CMD_Send@num+1,c
  2456  0005CC  0E01               	movlw	1
  2457  0005CE  6E06               	movwf	CMD_Send@num,c
  2458  0005D0  0E13               	movlw	19
  2459  0005D2  EC32  F005         	call	_CMD_Send
  2460                           
  2461                           ;L6470.c: 88:      CMD_Send(0x14,0x7F,1) ;
  2462  0005D6  0E7F               	movlw	127
  2463  0005D8  6E02               	movwf	CMD_Send@val,c
  2464  0005DA  0E00               	movlw	0
  2465  0005DC  6E03               	movwf	CMD_Send@val+1,c
  2466  0005DE  0E00               	movlw	0
  2467  0005E0  6E04               	movwf	CMD_Send@val+2,c
  2468  0005E2  0E00               	movlw	0
  2469  0005E4  6E05               	movwf	CMD_Send@val+3,c
  2470  0005E6  0E00               	movlw	0
  2471  0005E8  6E07               	movwf	CMD_Send@num+1,c
  2472  0005EA  0E01               	movlw	1
  2473  0005EC  6E06               	movwf	CMD_Send@num,c
  2474  0005EE  0E14               	movlw	20
  2475  0005F0  EC32  F005         	call	_CMD_Send
  2476                           
  2477                           ;L6470.c: 90:      step_mode.DT = 0x07 ;
  2478  0005F4  0E07               	movlw	7
  2479  0005F6  6E1B               	movwf	L6470_Init@step_mode,c
  2480                           
  2481                           ;L6470.c: 91:      step_mode.STEP_SEL = 0 ;
  2482  0005F8  0EF8               	movlw	-8
  2483  0005FA  161B               	andwf	L6470_Init@step_mode,f,c
  2484                           
  2485                           ;L6470.c: 92:      step_mode.SYNC_EN = Busy = 0 ;
  2486  0005FC  0E00               	movlw	0
  2487  0005FE  6E44               	movwf	_Busy+1,c
  2488  000600  0E00               	movlw	0
  2489  000602  6E43               	movwf	_Busy,c
  2490  000604  B043               	btfsc	_Busy,0,c
  2491  000606  D002               	bra	u1315
  2492  000608  9E1B               	bcf	L6470_Init@step_mode,7,c
  2493  00060A  D001               	bra	u1316
  2494  00060C                     u1315:
  2495  00060C  8E1B               	bsf	L6470_Init@step_mode,7,c
  2496  00060E                     u1316:
  2497                           
  2498                           ;L6470.c: 93:      val = step_mode.DT ;
  2499  00060E  501B               	movf	L6470_Init@step_mode,w,c
  2500  000610  6E1C               	movwf	L6470_Init@val,c
  2501  000612  6A1D               	clrf	L6470_Init@val+1,c
  2502  000614  6A1E               	clrf	L6470_Init@val+2,c
  2503  000616  6A1F               	clrf	L6470_Init@val+3,c
  2504                           
  2505                           ;L6470.c: 94:      CMD_Send(0x16,val,1) ;
  2506  000618  C01C  F002         	movff	L6470_Init@val,CMD_Send@val
  2507  00061C  C01D  F003         	movff	L6470_Init@val+1,CMD_Send@val+1
  2508  000620  C01E  F004         	movff	L6470_Init@val+2,CMD_Send@val+2
  2509  000624  C01F  F005         	movff	L6470_Init@val+3,CMD_Send@val+3
  2510  000628  0E00               	movlw	0
  2511  00062A  6E07               	movwf	CMD_Send@num+1,c
  2512  00062C  0E01               	movlw	1
  2513  00062E  6E06               	movwf	CMD_Send@num,c
  2514  000630  0E16               	movlw	22
  2515  000632  EC32  F005         	call	_CMD_Send
  2516                           
  2517                           ;L6470.c: 96:      config.DT = 0x2F88 ;
  2518  000636  0E2F               	movlw	47
  2519  000638  6E1A               	movwf	L6470_Init@config+1,c
  2520  00063A  0E88               	movlw	136
  2521  00063C  6E19               	movwf	L6470_Init@config,c
  2522                           
  2523                           ;L6470.c: 97:      config.OSC_SEL = 0 ;
  2524  00063E  0EF8               	movlw	-8
  2525  000640  1619               	andwf	L6470_Init@config,f,c
  2526                           
  2527                           ;L6470.c: 98:      config.EXT_CLK = 0 ;
  2528  000642  9619               	bcf	L6470_Init@config,3,c
  2529                           
  2530                           ;L6470.c: 99:      config.SW_MODE = 1 ;
  2531  000644  8819               	bsf	L6470_Init@config,4,c
  2532                           
  2533                           ;L6470.c: 100:      val = config.DT ;
  2534  000646  C019  F01C         	movff	L6470_Init@config,L6470_Init@val
  2535  00064A  C01A  F01D         	movff	L6470_Init@config+1,L6470_Init@val+1
  2536  00064E  6A1E               	clrf	L6470_Init@val+2,c
  2537  000650  6A1F               	clrf	L6470_Init@val+3,c
  2538                           
  2539                           ;L6470.c: 101:      CMD_Send(0x18,val,2) ;
  2540  000652  C01C  F002         	movff	L6470_Init@val,CMD_Send@val
  2541  000656  C01D  F003         	movff	L6470_Init@val+1,CMD_Send@val+1
  2542  00065A  C01E  F004         	movff	L6470_Init@val+2,CMD_Send@val+2
  2543  00065E  C01F  F005         	movff	L6470_Init@val+3,CMD_Send@val+3
  2544  000662  0E00               	movlw	0
  2545  000664  6E07               	movwf	CMD_Send@num+1,c
  2546  000666  0E02               	movlw	2
  2547  000668  6E06               	movwf	CMD_Send@num,c
  2548  00066A  0E18               	movlw	24
  2549  00066C  EC32  F005         	call	_CMD_Send
  2550                           
  2551                           ;L6470.c: 102:      return L6470_GetRegister(0x19,2) ;
  2552  000670  0E00               	movlw	0
  2553  000672  6E03               	movwf	L6470_GetRegister@num+1,c
  2554  000674  0E02               	movlw	2
  2555  000676  6E02               	movwf	L6470_GetRegister@num,c
  2556  000678  0E19               	movlw	25
  2557  00067A  ECD3  F004         	call	_L6470_GetRegister
  2558  00067E  C002  F015         	movff	?_L6470_GetRegister,?_L6470_Init
  2559  000682  C003  F016         	movff	?_L6470_GetRegister+1,?_L6470_Init+1
  2560  000686  C004  F017         	movff	?_L6470_GetRegister+2,?_L6470_Init+2
  2561  00068A  C005  F018         	movff	?_L6470_GetRegister+3,?_L6470_Init+3
  2562  00068E  0012               	return		;funcret
  2563  000690                     __end_of_L6470_Init:
  2564                           	opt callstack 0
  2565                           
  2566 ;; *************** function _L6470_GetRegister *****************
  2567 ;; Defined at:
  2568 ;;		line 112 in file "L6470.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  regadrs         1    wreg     unsigned char 
  2571 ;;  num             2    1[COMRAM] int 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  regadrs         1   15[COMRAM] unsigned char 
  2574 ;;  ans             4   16[COMRAM] unsigned long 
  2575 ;;  dt              4    9[COMRAM] unsigned long 
  2576 ;;  i               2   13[COMRAM] int 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  4    1[COMRAM] unsigned long 
  2579 ;; Registers used:
  2580 ;;		wreg, status,2, status,0, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2586 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2587 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2588 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2589 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2590 ;;Total ram usage:       19 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    2
  2593 ;; This function calls:
  2594 ;;		_SPI_transfer
  2595 ;; This function is called by:
  2596 ;;		_L6470_Init
  2597 ;;		_L6470_command
  2598 ;;		_L6470_ALARM
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text14
  2603  0009A6                     __ptext14:
  2604                           	opt callstack 0
  2605  0009A6                     _L6470_GetRegister:
  2606                           	opt callstack 26
  2607                           
  2608                           ;incstack = 0
  2609                           ;L6470_GetRegister@regadrs stored from wreg
  2610  0009A6  6E10               	movwf	L6470_GetRegister@regadrs,c
  2611                           
  2612                           ;L6470.c: 112: unsigned long L6470_GetRegister(char regadrs,int num);L6470.c: 113: {;L64
      +                          70.c: 114:      unsigned long ans , dt ;;L6470.c: 115:      int i ;;L6470.c: 117:      P
      +                          ORTBbits.RB0 = 0 ;
  2613  0009A8  9081               	bcf	3969,0,c	;volatile
  2614                           
  2615                           ;L6470.c: 118:      if (regadrs == 0x19) SPI_transfer(0xD0) ;
  2616  0009AA  0E19               	movlw	25
  2617  0009AC  1810               	xorwf	L6470_GetRegister@regadrs,w,c
  2618  0009AE  A4D8               	btfss	status,2,c
  2619  0009B0  D004               	goto	l2760
  2620  0009B2  0ED0               	movlw	208
  2621  0009B4  ECA3  F007         	call	_SPI_transfer
  2622  0009B8  D004               	goto	l2762
  2623  0009BA                     l2760:
  2624  0009BA  5010               	movf	L6470_GetRegister@regadrs,w,c
  2625  0009BC  0920               	iorlw	32
  2626  0009BE  ECA3  F007         	call	_SPI_transfer
  2627  0009C2                     l2762:
  2628                           
  2629                           ;L6470.c: 120:      PORTBbits.RB0 = 1 ;
  2630  0009C2  8081               	bsf	3969,0,c	;volatile
  2631                           
  2632                           ;L6470.c: 121:      ans = dt = 0 ;
  2633  0009C4  0E00               	movlw	0
  2634  0009C6  6E0A               	movwf	L6470_GetRegister@dt,c
  2635  0009C8  0E00               	movlw	0
  2636  0009CA  6E0B               	movwf	L6470_GetRegister@dt+1,c
  2637  0009CC  0E00               	movlw	0
  2638  0009CE  6E0C               	movwf	L6470_GetRegister@dt+2,c
  2639  0009D0  0E00               	movlw	0
  2640  0009D2  6E0D               	movwf	L6470_GetRegister@dt+3,c
  2641  0009D4  C00A  F011         	movff	L6470_GetRegister@dt,L6470_GetRegister@ans
  2642  0009D8  C00B  F012         	movff	L6470_GetRegister@dt+1,L6470_GetRegister@ans+1
  2643  0009DC  C00C  F013         	movff	L6470_GetRegister@dt+2,L6470_GetRegister@ans+2
  2644  0009E0  C00D  F014         	movff	L6470_GetRegister@dt+3,L6470_GetRegister@ans+3
  2645                           
  2646                           ;L6470.c: 122:      for (i=0 ; i<num ; i++) {
  2647  0009E4  0E00               	movlw	0
  2648  0009E6  6E0F               	movwf	L6470_GetRegister@i+1,c
  2649  0009E8  0E00               	movlw	0
  2650  0009EA  6E0E               	movwf	L6470_GetRegister@i,c
  2651  0009EC  D028               	goto	l2780
  2652  0009EE                     l2768:
  2653                           
  2654                           ;L6470.c: 123:           ans = ans << 8 ;
  2655  0009EE  C011  F007         	movff	L6470_GetRegister@ans,??_L6470_GetRegister+1
  2656  0009F2  C012  F008         	movff	L6470_GetRegister@ans+1,??_L6470_GetRegister+2
  2657  0009F6  C013  F009         	movff	L6470_GetRegister@ans+2,??_L6470_GetRegister+3
  2658  0009FA  6A06               	clrf	??_L6470_GetRegister& (0+255),c
  2659  0009FC  C006  F011         	movff	??_L6470_GetRegister,L6470_GetRegister@ans
  2660  000A00  C007  F012         	movff	??_L6470_GetRegister+1,L6470_GetRegister@ans+1
  2661  000A04  C008  F013         	movff	??_L6470_GetRegister+2,L6470_GetRegister@ans+2
  2662  000A08  C009  F014         	movff	??_L6470_GetRegister+3,L6470_GetRegister@ans+3
  2663                           
  2664                           ;L6470.c: 124:           PORTBbits.RB0 = 0 ;
  2665  000A0C  9081               	bcf	3969,0,c	;volatile
  2666                           
  2667                           ;L6470.c: 125:           dt = SPI_transfer(0x00) ;
  2668  000A0E  0E00               	movlw	0
  2669  000A10  ECA3  F007         	call	_SPI_transfer
  2670  000A14  6E06               	movwf	??_L6470_GetRegister& (0+255),c
  2671  000A16  5006               	movf	??_L6470_GetRegister,w,c
  2672  000A18  6E0A               	movwf	L6470_GetRegister@dt,c
  2673  000A1A  6A0B               	clrf	L6470_GetRegister@dt+1,c
  2674  000A1C  6A0C               	clrf	L6470_GetRegister@dt+2,c
  2675  000A1E  6A0D               	clrf	L6470_GetRegister@dt+3,c
  2676                           
  2677                           ;L6470.c: 126:           PORTBbits.RB0 = 1 ;
  2678  000A20  8081               	bsf	3969,0,c	;volatile
  2679                           
  2680                           ;L6470.c: 127:           ans = ans | dt ;
  2681  000A22  500A               	movf	L6470_GetRegister@dt,w,c
  2682  000A24  1011               	iorwf	L6470_GetRegister@ans,w,c
  2683  000A26  6E11               	movwf	L6470_GetRegister@ans,c
  2684  000A28  500B               	movf	L6470_GetRegister@dt+1,w,c
  2685  000A2A  1012               	iorwf	L6470_GetRegister@ans+1,w,c
  2686  000A2C  6E12               	movwf	L6470_GetRegister@ans+1,c
  2687  000A2E  500C               	movf	L6470_GetRegister@dt+2,w,c
  2688  000A30  1013               	iorwf	L6470_GetRegister@ans+2,w,c
  2689  000A32  6E13               	movwf	L6470_GetRegister@ans+2,c
  2690  000A34  500D               	movf	L6470_GetRegister@dt+3,w,c
  2691  000A36  1014               	iorwf	L6470_GetRegister@ans+3,w,c
  2692  000A38  6E14               	movwf	L6470_GetRegister@ans+3,c
  2693                           
  2694                           ;L6470.c: 128:      }
  2695  000A3A  4A0E               	infsnz	L6470_GetRegister@i,f,c
  2696  000A3C  2A0F               	incf	L6470_GetRegister@i+1,f,c
  2697  000A3E                     l2780:
  2698  000A3E  5002               	movf	L6470_GetRegister@num,w,c
  2699  000A40  5C0E               	subwf	L6470_GetRegister@i,w,c
  2700  000A42  500F               	movf	L6470_GetRegister@i+1,w,c
  2701  000A44  0A80               	xorlw	128
  2702  000A46  6E06               	movwf	??_L6470_GetRegister& (0+255),c
  2703  000A48  5003               	movf	L6470_GetRegister@num+1,w,c
  2704  000A4A  0A80               	xorlw	128
  2705  000A4C  5806               	subwfb	??_L6470_GetRegister& (0+255),w,c
  2706  000A4E  A0D8               	btfss	status,0,c
  2707  000A50  D7CE               	goto	l2768
  2708                           
  2709                           ;L6470.c: 129:      return ans ;
  2710  000A52  C011  F002         	movff	L6470_GetRegister@ans,?_L6470_GetRegister
  2711  000A56  C012  F003         	movff	L6470_GetRegister@ans+1,?_L6470_GetRegister+1
  2712  000A5A  C013  F004         	movff	L6470_GetRegister@ans+2,?_L6470_GetRegister+2
  2713  000A5E  C014  F005         	movff	L6470_GetRegister@ans+3,?_L6470_GetRegister+3
  2714  000A62  0012               	return		;funcret
  2715  000A64                     __end_of_L6470_GetRegister:
  2716                           	opt callstack 0
  2717                           
  2718 ;; *************** function _CMD_Send *****************
  2719 ;; Defined at:
  2720 ;;		line 27 in file "L6470.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  cmd             1    wreg     unsigned char 
  2723 ;;  val             4    1[COMRAM] unsigned long 
  2724 ;;  num             2    5[COMRAM] int 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  cmd             1   15[COMRAM] unsigned char 
  2727 ;;  dt              4   11[COMRAM] unsigned char [4]
  2728 ;;  i               2   16[COMRAM] int 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2738 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2739 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2740 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2741 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2742 ;;Total ram usage:       17 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    2
  2745 ;; This function calls:
  2746 ;;		_SPI_transfer
  2747 ;; This function is called by:
  2748 ;;		_L6470_Init
  2749 ;;		_L6470_Run
  2750 ;;		_L6470_Move
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text15
  2755  000A64                     __ptext15:
  2756                           	opt callstack 0
  2757  000A64                     _CMD_Send:
  2758                           	opt callstack 25
  2759                           
  2760                           ;incstack = 0
  2761                           ;CMD_Send@cmd stored from wreg
  2762  000A64  6E10               	movwf	CMD_Send@cmd,c
  2763                           
  2764                           ;L6470.c: 27: void CMD_Send(char cmd,unsigned long val,int num);L6470.c: 28: {;L6470.c: 
      +                          29:      unsigned char dt[4] ;;L6470.c: 30:      int i ;;L6470.c: 32:      for (i=0 ; i<
      +                          num ; i++) {
  2765  000A66  0E00               	movlw	0
  2766  000A68  6E12               	movwf	CMD_Send@i+1,c
  2767  000A6A  0E00               	movlw	0
  2768  000A6C  6E11               	movwf	CMD_Send@i,c
  2769  000A6E  D021               	goto	l2700
  2770  000A70                     l2694:
  2771                           
  2772                           ;L6470.c: 33:           dt[i] = val & 0xff ;
  2773  000A70  0E0C               	movlw	low CMD_Send@dt
  2774  000A72  2411               	addwf	CMD_Send@i,w,c
  2775  000A74  6ED9               	movwf	fsr2l,c
  2776  000A76  0E00               	movlw	high CMD_Send@dt
  2777  000A78  2012               	addwfc	CMD_Send@i+1,w,c
  2778  000A7A  6EDA               	movwf	fsr2h,c
  2779  000A7C  C002  FFDF         	movff	CMD_Send@val,indf2
  2780                           
  2781                           ;L6470.c: 34:           val = val >> 8 ;
  2782  000A80  C002  F008         	movff	CMD_Send@val,??_CMD_Send
  2783  000A84  C003  F009         	movff	CMD_Send@val+1,??_CMD_Send+1
  2784  000A88  C004  F00A         	movff	CMD_Send@val+2,??_CMD_Send+2
  2785  000A8C  C005  F00B         	movff	CMD_Send@val+3,??_CMD_Send+3
  2786  000A90  C009  F008         	movff	??_CMD_Send+1,??_CMD_Send
  2787  000A94  C00A  F009         	movff	??_CMD_Send+2,??_CMD_Send+1
  2788  000A98  C00B  F00A         	movff	??_CMD_Send+3,??_CMD_Send+2
  2789  000A9C  6A0B               	clrf	??_CMD_Send+3,c
  2790  000A9E  C008  F002         	movff	??_CMD_Send,CMD_Send@val
  2791  000AA2  C009  F003         	movff	??_CMD_Send+1,CMD_Send@val+1
  2792  000AA6  C00A  F004         	movff	??_CMD_Send+2,CMD_Send@val+2
  2793  000AAA  C00B  F005         	movff	??_CMD_Send+3,CMD_Send@val+3
  2794                           
  2795                           ;L6470.c: 35:      }
  2796  000AAE  4A11               	infsnz	CMD_Send@i,f,c
  2797  000AB0  2A12               	incf	CMD_Send@i+1,f,c
  2798  000AB2                     l2700:
  2799  000AB2  5006               	movf	CMD_Send@num,w,c
  2800  000AB4  5C11               	subwf	CMD_Send@i,w,c
  2801  000AB6  5012               	movf	CMD_Send@i+1,w,c
  2802  000AB8  0A80               	xorlw	128
  2803  000ABA  6E08               	movwf	??_CMD_Send& (0+255),c
  2804  000ABC  5007               	movf	CMD_Send@num+1,w,c
  2805  000ABE  0A80               	xorlw	128
  2806  000AC0  5808               	subwfb	??_CMD_Send& (0+255),w,c
  2807  000AC2  A0D8               	btfss	status,0,c
  2808  000AC4  D7D5               	goto	l2694
  2809                           
  2810                           ;L6470.c: 37:      PORTBbits.RB0 = 0 ;
  2811  000AC6  9081               	bcf	3969,0,c	;volatile
  2812                           
  2813                           ;L6470.c: 38:      SPI_transfer(cmd) ;
  2814  000AC8  5010               	movf	CMD_Send@cmd,w,c
  2815  000ACA  ECA3  F007         	call	_SPI_transfer
  2816                           
  2817                           ;L6470.c: 39:      PORTBbits.RB0 = 1 ;
  2818  000ACE  8081               	bsf	3969,0,c	;volatile
  2819                           
  2820                           ;L6470.c: 40:      switch (num) {
  2821  000AD0  D010               	goto	l2720
  2822  000AD2                     l417:
  2823                           
  2824                           ;L6470.c: 42:                PORTBbits.RB0 = 0 ;
  2825  000AD2  9081               	bcf	3969,0,c	;volatile
  2826                           
  2827                           ;L6470.c: 43:                SPI_transfer(dt[2]) ;
  2828  000AD4  500E               	movf	CMD_Send@dt+2,w,c
  2829  000AD6  ECA3  F007         	call	_SPI_transfer
  2830                           
  2831                           ;L6470.c: 44:                PORTBbits.RB0 = 1 ;
  2832  000ADA  8081               	bsf	3969,0,c	;volatile
  2833  000ADC                     l2710:
  2834                           
  2835                           ;L6470.c: 46:                PORTBbits.RB0 = 0 ;
  2836  000ADC  9081               	bcf	3969,0,c	;volatile
  2837                           
  2838                           ;L6470.c: 47:                SPI_transfer(dt[1]) ;
  2839  000ADE  500D               	movf	CMD_Send@dt+1,w,c
  2840  000AE0  ECA3  F007         	call	_SPI_transfer
  2841                           
  2842                           ;L6470.c: 48:                PORTBbits.RB0 = 1 ;
  2843  000AE4  8081               	bsf	3969,0,c	;volatile
  2844  000AE6                     l2714:
  2845                           
  2846                           ;L6470.c: 50:                PORTBbits.RB0 = 0 ;
  2847  000AE6  9081               	bcf	3969,0,c	;volatile
  2848                           
  2849                           ;L6470.c: 51:                SPI_transfer(dt[0]) ;
  2850  000AE8  500C               	movf	CMD_Send@dt,w,c
  2851  000AEA  ECA3  F007         	call	_SPI_transfer
  2852                           
  2853                           ;L6470.c: 52:                PORTBbits.RB0 = 1 ;
  2854  000AEE  8081               	bsf	3969,0,c	;volatile
  2855                           
  2856                           ;L6470.c: 53:                break ;
  2857  000AF0  0012               	return	
  2858  000AF2                     l2720:
  2859  000AF2  C006  F008         	movff	CMD_Send@num,??_CMD_Send
  2860  000AF6  C007  F009         	movff	CMD_Send@num+1,??_CMD_Send+1
  2861                           
  2862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2863                           ; Switch size 1, requested type "simple"
  2864                           ; Number of cases is 1, Range of values is 0 to 0
  2865                           ; switch strategies available:
  2866                           ; Name         Instructions Cycles
  2867                           ; simple_byte            4     3 (average)
  2868                           ;	Chosen strategy is simple_byte
  2869  000AFA  5009               	movf	??_CMD_Send+1,w,c
  2870  000AFC  0A00               	xorlw	0	; case 0
  2871  000AFE  A4D8               	btfss	status,2,c
  2872  000B00  0012               	return	
  2873                           
  2874                           ; Switch size 1, requested type "simple"
  2875                           ; Number of cases is 3, Range of values is 1 to 3
  2876                           ; switch strategies available:
  2877                           ; Name         Instructions Cycles
  2878                           ; simple_byte           10     6 (average)
  2879                           ;	Chosen strategy is simple_byte
  2880  000B02  5008               	movf	??_CMD_Send,w,c
  2881  000B04  0A01               	xorlw	1	; case 1
  2882  000B06  B4D8               	btfsc	status,2,c
  2883  000B08  D7EE               	goto	l2714
  2884  000B0A  0A03               	xorlw	3	; case 2
  2885  000B0C  B4D8               	btfsc	status,2,c
  2886  000B0E  D7E6               	goto	l2710
  2887  000B10  0A01               	xorlw	1	; case 3
  2888  000B12  A4D8               	btfss	status,2,c
  2889  000B14  0012               	return	
  2890  000B16  D7DD               	goto	l417
  2891  000B18                     __end_of_CMD_Send:
  2892                           	opt callstack 0
  2893                           
  2894 ;; *************** function _SPI_transfer *****************
  2895 ;; Defined at:
  2896 ;;		line 119 in file "SPIlib.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  dt              1    wreg     unsigned char 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  dt              1    0[COMRAM] unsigned char 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  1    wreg      unsigned char 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2913 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2914 ;;Total ram usage:        1 bytes
  2915 ;; Hardware stack levels used:    1
  2916 ;; Hardware stack levels required when called:    1
  2917 ;; This function calls:
  2918 ;;		Nothing
  2919 ;; This function is called by:
  2920 ;;		_CMD_Send
  2921 ;;		_L6470_Init
  2922 ;;		_L6470_GetRegister
  2923 ;;		_L6470_Stop
  2924 ;;		_L6470_CMD
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text16
  2929  000F46                     __ptext16:
  2930                           	opt callstack 0
  2931  000F46                     _SPI_transfer:
  2932                           	opt callstack 26
  2933                           
  2934                           ;incstack = 0
  2935                           ;SPI_transfer@dt stored from wreg
  2936  000F46  6E01               	movwf	SPI_transfer@dt,c
  2937                           
  2938                           ;SPIlib.c: 119: unsigned char SPI_transfer(char dt);SPIlib.c: 120: {;SPIlib.c: 121:     
      +                           SSPBUF = dt ;
  2939  000F48  C001  FFC9         	movff	SPI_transfer@dt,4041	;volatile
  2940  000F4C                     l792:
  2941  000F4C  A69E               	btfss	3998,3,c	;volatile
  2942  000F4E  D7FE               	goto	l792
  2943                           
  2944                           ;SPIlib.c: 123:      PIR1bits.SSPIF = 0 ;
  2945  000F50  969E               	bcf	3998,3,c	;volatile
  2946                           
  2947                           ;SPIlib.c: 124:      return SSPBUF ;
  2948  000F52  50C9               	movf	4041,w,c	;volatile
  2949  000F54  0012               	return		;funcret
  2950  000F56                     __end_of_SPI_transfer:
  2951                           	opt callstack 0
  2952                           
  2953 ;; *************** function _ECAN_Initialize *****************
  2954 ;; Defined at:
  2955 ;;		line 62 in file "mcc_generated_files/ecan.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2971 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2972 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2973 ;;Total ram usage:        1 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    1
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_main
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text17
  2984  000B18                     __ptext17:
  2985                           	opt callstack 0
  2986  000B18                     _ECAN_Initialize:
  2987                           	opt callstack 29
  2988                           
  2989                           ;mcc_generated_files/ecan.c: 64:     CANCON = 0x80;
  2990                           
  2991                           ;incstack = 0
  2992  000B18  0E80               	movlw	128
  2993  000B1A  6E6F               	movwf	3951,c	;volatile
  2994  000B1C                     l2938:
  2995  000B1C  506E               	movf	3950,w,c	;volatile
  2996  000B1E  0BE0               	andlw	224
  2997  000B20  0A80               	xorlw	128
  2998  000B22  A4D8               	btfss	status,2,c
  2999  000B24  D7FB               	goto	l2938
  3000                           
  3001                           ;mcc_generated_files/ecan.c: 70:     ECANCON = 0x00;
  3002  000B26  0E00               	movlw	0
  3003  000B28  6E72               	movwf	3954,c	;volatile
  3004                           
  3005                           ;mcc_generated_files/ecan.c: 75:     CIOCON = 0x20;
  3006  000B2A  0E20               	movlw	32
  3007  000B2C  6E70               	movwf	3952,c	;volatile
  3008                           
  3009                           ;mcc_generated_files/ecan.c: 86:     RXB0CONbits.RXM0 = 1;
  3010  000B2E  8A60               	bsf	3936,5,c	;volatile
  3011                           
  3012                           ;mcc_generated_files/ecan.c: 87:     RXB0CONbits.RXM1 = 1;
  3013  000B30  8C60               	bsf	3936,6,c	;volatile
  3014                           
  3015                           ;mcc_generated_files/ecan.c: 91:     RXM0EIDH = 0xFF;
  3016  000B32  010E               	movlb	14	; () banked
  3017  000B34  69FA               	setf	250,b	;volatile
  3018                           
  3019                           ; BSR set to: 14
  3020                           ;mcc_generated_files/ecan.c: 92:     RXM0EIDL = 0xFF;
  3021  000B36  69FB               	setf	251,b	;volatile
  3022                           
  3023                           ; BSR set to: 14
  3024                           ;mcc_generated_files/ecan.c: 93:     RXM0SIDH = 0xFF;
  3025  000B38  69F8               	setf	248,b	;volatile
  3026                           
  3027                           ;mcc_generated_files/ecan.c: 94:     RXM0SIDL = 0xE3;
  3028  000B3A  0EE3               	movlw	227
  3029  000B3C  6FF9               	movwf	249,b	;volatile
  3030                           
  3031                           ; BSR set to: 14
  3032                           ;mcc_generated_files/ecan.c: 95:     RXM1EIDH = 0xFF;
  3033  000B3E  69FE               	setf	254,b	;volatile
  3034                           
  3035                           ; BSR set to: 14
  3036                           ;mcc_generated_files/ecan.c: 96:     RXM1EIDL = 0xFF;
  3037  000B40  69FF               	setf	255,b	;volatile
  3038                           
  3039                           ; BSR set to: 14
  3040                           ;mcc_generated_files/ecan.c: 97:     RXM1SIDH = 0xFF;
  3041  000B42  69FC               	setf	252,b	;volatile
  3042                           
  3043                           ;mcc_generated_files/ecan.c: 98:     RXM1SIDL = 0xE3;
  3044  000B44  0EE3               	movlw	227
  3045  000B46  6FFD               	movwf	253,b	;volatile
  3046                           
  3047                           ;mcc_generated_files/ecan.c: 103:     RXF0EIDH = 0x00;
  3048  000B48  0E00               	movlw	0
  3049  000B4A  6FE2               	movwf	226,b	;volatile
  3050                           
  3051                           ;mcc_generated_files/ecan.c: 104:     RXF0EIDL = 0x00;
  3052  000B4C  0E00               	movlw	0
  3053  000B4E  6FE3               	movwf	227,b	;volatile
  3054                           
  3055                           ;mcc_generated_files/ecan.c: 105:     RXF0SIDH = 0x24;
  3056  000B50  0E24               	movlw	36
  3057  000B52  6FE0               	movwf	224,b	;volatile
  3058                           
  3059                           ;mcc_generated_files/ecan.c: 106:     RXF0SIDL = 0x60;
  3060  000B54  0E60               	movlw	96
  3061  000B56  6FE1               	movwf	225,b	;volatile
  3062                           
  3063                           ;mcc_generated_files/ecan.c: 107:     RXF1EIDH = 0x00;
  3064  000B58  0E00               	movlw	0
  3065  000B5A  6FE6               	movwf	230,b	;volatile
  3066                           
  3067                           ;mcc_generated_files/ecan.c: 108:     RXF1EIDL = 0x00;
  3068  000B5C  0E00               	movlw	0
  3069  000B5E  6FE7               	movwf	231,b	;volatile
  3070                           
  3071                           ;mcc_generated_files/ecan.c: 109:     RXF1SIDH = 0x00;
  3072  000B60  0E00               	movlw	0
  3073  000B62  6FE4               	movwf	228,b	;volatile
  3074                           
  3075                           ;mcc_generated_files/ecan.c: 110:     RXF1SIDL = 0x00;
  3076  000B64  0E00               	movlw	0
  3077  000B66  6FE5               	movwf	229,b	;volatile
  3078                           
  3079                           ;mcc_generated_files/ecan.c: 111:     RXF2EIDH = 0x00;
  3080  000B68  0E00               	movlw	0
  3081  000B6A  6FEA               	movwf	234,b	;volatile
  3082                           
  3083                           ;mcc_generated_files/ecan.c: 112:     RXF2EIDL = 0x00;
  3084  000B6C  0E00               	movlw	0
  3085  000B6E  6FEB               	movwf	235,b	;volatile
  3086                           
  3087                           ;mcc_generated_files/ecan.c: 113:     RXF2SIDH = 0x00;
  3088  000B70  0E00               	movlw	0
  3089  000B72  6FE8               	movwf	232,b	;volatile
  3090                           
  3091                           ;mcc_generated_files/ecan.c: 114:     RXF2SIDL = 0x00;
  3092  000B74  0E00               	movlw	0
  3093  000B76  6FE9               	movwf	233,b	;volatile
  3094                           
  3095                           ;mcc_generated_files/ecan.c: 115:     RXF3EIDH = 0x00;
  3096  000B78  0E00               	movlw	0
  3097  000B7A  6FEE               	movwf	238,b	;volatile
  3098                           
  3099                           ;mcc_generated_files/ecan.c: 116:     RXF3EIDL = 0x00;
  3100  000B7C  0E00               	movlw	0
  3101  000B7E  6FEF               	movwf	239,b	;volatile
  3102                           
  3103                           ;mcc_generated_files/ecan.c: 117:     RXF3SIDH = 0x00;
  3104  000B80  0E00               	movlw	0
  3105  000B82  6FEC               	movwf	236,b	;volatile
  3106                           
  3107                           ;mcc_generated_files/ecan.c: 118:     RXF3SIDL = 0x00;
  3108  000B84  0E00               	movlw	0
  3109  000B86  6FED               	movwf	237,b	;volatile
  3110                           
  3111                           ;mcc_generated_files/ecan.c: 119:     RXF4EIDH = 0x00;
  3112  000B88  0E00               	movlw	0
  3113  000B8A  6FF2               	movwf	242,b	;volatile
  3114                           
  3115                           ;mcc_generated_files/ecan.c: 120:     RXF4EIDL = 0x00;
  3116  000B8C  0E00               	movlw	0
  3117  000B8E  6FF3               	movwf	243,b	;volatile
  3118                           
  3119                           ;mcc_generated_files/ecan.c: 121:     RXF4SIDH = 0x00;
  3120  000B90  0E00               	movlw	0
  3121  000B92  6FF0               	movwf	240,b	;volatile
  3122                           
  3123                           ;mcc_generated_files/ecan.c: 122:     RXF4SIDL = 0x00;
  3124  000B94  0E00               	movlw	0
  3125  000B96  6FF1               	movwf	241,b	;volatile
  3126                           
  3127                           ;mcc_generated_files/ecan.c: 123:     RXF5EIDH = 0x00;
  3128  000B98  0E00               	movlw	0
  3129  000B9A  6FF6               	movwf	246,b	;volatile
  3130                           
  3131                           ;mcc_generated_files/ecan.c: 124:     RXF5EIDL = 0x00;
  3132  000B9C  0E00               	movlw	0
  3133  000B9E  6FF7               	movwf	247,b	;volatile
  3134                           
  3135                           ;mcc_generated_files/ecan.c: 125:     RXF5SIDH = 0x00;
  3136  000BA0  0E00               	movlw	0
  3137  000BA2  6FF4               	movwf	244,b	;volatile
  3138                           
  3139                           ;mcc_generated_files/ecan.c: 126:     RXF5SIDL = 0x00;
  3140  000BA4  0E00               	movlw	0
  3141  000BA6  6FF5               	movwf	245,b	;volatile
  3142                           
  3143                           ;mcc_generated_files/ecan.c: 141:     BRGCON1 = 0x01;
  3144  000BA8  0E01               	movlw	1
  3145  000BAA  6F43               	movwf	67,b	;volatile
  3146                           
  3147                           ;mcc_generated_files/ecan.c: 142:     BRGCON2 = 0x98;
  3148  000BAC  0E98               	movlw	152
  3149  000BAE  6F44               	movwf	68,b	;volatile
  3150                           
  3151                           ;mcc_generated_files/ecan.c: 143:     BRGCON3 = 0x01;
  3152  000BB0  0E01               	movlw	1
  3153  000BB2  6F45               	movwf	69,b	;volatile
  3154                           
  3155                           ;mcc_generated_files/ecan.c: 145:     CANCON = 0x00;
  3156  000BB4  0E00               	movlw	0
  3157  000BB6  6E6F               	movwf	3951,c	;volatile
  3158  000BB8                     l2958:
  3159  000BB8  CF6E F001          	movff	3950,??_ECAN_Initialize	;volatile
  3160  000BBC  0EE0               	movlw	224
  3161  000BBE  1601               	andwf	??_ECAN_Initialize,f,c
  3162  000BC0  B4D8               	btfsc	status,2,c
  3163  000BC2  0012               	return	
  3164  000BC4  D7F9               	goto	l2958
  3165  000BC6                     __end_of_ECAN_Initialize:
  3166                           	opt callstack 0
  3167                           
  3168 ;; *************** function _CAN_receive *****************
  3169 ;; Defined at:
  3170 ;;		line 241 in file "mcc_generated_files/ecan.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  tempCanMsg      2   19[COMRAM] PTR struct .
  3173 ;;		 -> rxMessage(14), 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;  returnValue     1   21[COMRAM] unsigned char 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      unsigned char 
  3178 ;; Registers used:
  3179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3186 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3188 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3189 ;;Total ram usage:        3 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    2
  3192 ;; This function calls:
  3193 ;;		_convertReg2ExtendedCANid
  3194 ;;		_convertReg2StandardCANid
  3195 ;; This function is called by:
  3196 ;;		_main
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text18
  3201  000274                     __ptext18:
  3202                           	opt callstack 0
  3203  000274                     _CAN_receive:
  3204                           	opt callstack 28
  3205                           
  3206                           ;mcc_generated_files/ecan.c: 241: uint8_t CAN_receive(uCAN_MSG *tempCanMsg);mcc_generate
      +                          d_files/ecan.c: 242: {;mcc_generated_files/ecan.c: 243:     uint8_t returnValue = 0;
  3207                           
  3208                           ;incstack = 0
  3209  000274  0E00               	movlw	0
  3210  000276  6E16               	movwf	CAN_receive@returnValue,c
  3211                           
  3212                           ;mcc_generated_files/ecan.c: 246:     if (RXB0CONbits.RXFUL != 0)
  3213  000278  AE60               	btfss	3936,7,c	;volatile
  3214  00027A  D085               	goto	l256
  3215                           
  3216                           ;mcc_generated_files/ecan.c: 247:     {;mcc_generated_files/ecan.c: 248:         if ((RX
      +                          B0SIDL & 0x08) == 0x08)
  3217  00027C  A662               	btfss	3938,3,c	;volatile
  3218  00027E  D01E               	goto	l2970
  3219                           
  3220                           ;mcc_generated_files/ecan.c: 249:         {;mcc_generated_files/ecan.c: 251:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  3221  000280  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3222  000284  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3223  000288  0E02               	movlw	2
  3224  00028A  6EDF               	movwf	indf2,c
  3225                           
  3226                           ;mcc_generated_files/ecan.c: 252:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB0EIDH, RXB0EIDL, RXB0SIDH, RXB0SIDL);
  3227  00028C  CF64 F001          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  3228  000290  CF61 F002          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  3229  000294  CF62 F003          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  3230  000298  5063               	movf	3939,w,c	;volatile
  3231  00029A  EC48  F003         	call	_convertReg2ExtendedCANid
  3232  00029E  EE20 F001          	lfsr	2,1
  3233  0002A2  5014               	movf	CAN_receive@tempCanMsg,w,c
  3234  0002A4  26D9               	addwf	fsr2l,f,c
  3235  0002A6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3236  0002A8  22DA               	addwfc	fsr2h,f,c
  3237  0002AA  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  3238  0002AE  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  3239  0002B2  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  3240  0002B6  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  3241                           
  3242                           ;mcc_generated_files/ecan.c: 253:         }
  3243  0002BA  D019               	goto	l2974
  3244  0002BC                     l2970:
  3245                           
  3246                           ;mcc_generated_files/ecan.c: 255:         {;mcc_generated_files/ecan.c: 257:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  3247  0002BC  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3248  0002C0  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3249  0002C4  0E01               	movlw	1
  3250  0002C6  6EDF               	movwf	indf2,c
  3251                           
  3252                           ;mcc_generated_files/ecan.c: 258:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB0SIDH, RXB0SIDL);
  3253  0002C8  CF62 F001          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  3254  0002CC  5061               	movf	3937,w,c	;volatile
  3255  0002CE  EC65  F006         	call	_convertReg2StandardCANid
  3256  0002D2  EE20 F001          	lfsr	2,1
  3257  0002D6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3258  0002D8  26D9               	addwf	fsr2l,f,c
  3259  0002DA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3260  0002DC  22DA               	addwfc	fsr2h,f,c
  3261  0002DE  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  3262  0002E2  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  3263  0002E6  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  3264  0002EA  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  3265  0002EE                     l2974:
  3266                           
  3267                           ;mcc_generated_files/ecan.c: 261:         tempCanMsg->frame.dlc = RXB0DLC;
  3268  0002EE  EE20 F005          	lfsr	2,5
  3269  0002F2  5014               	movf	CAN_receive@tempCanMsg,w,c
  3270  0002F4  26D9               	addwf	fsr2l,f,c
  3271  0002F6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3272  0002F8  22DA               	addwfc	fsr2h,f,c
  3273  0002FA  CF65 FFDF          	movff	3941,indf2	;volatile
  3274                           
  3275                           ;mcc_generated_files/ecan.c: 262:         tempCanMsg->frame.data0 = RXB0D0;
  3276  0002FE  EE20 F006          	lfsr	2,6
  3277  000302  5014               	movf	CAN_receive@tempCanMsg,w,c
  3278  000304  26D9               	addwf	fsr2l,f,c
  3279  000306  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3280  000308  22DA               	addwfc	fsr2h,f,c
  3281  00030A  CF66 FFDF          	movff	3942,indf2	;volatile
  3282                           
  3283                           ;mcc_generated_files/ecan.c: 263:         tempCanMsg->frame.data1 = RXB0D1;
  3284  00030E  EE20 F007          	lfsr	2,7
  3285  000312  5014               	movf	CAN_receive@tempCanMsg,w,c
  3286  000314  26D9               	addwf	fsr2l,f,c
  3287  000316  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3288  000318  22DA               	addwfc	fsr2h,f,c
  3289  00031A  CF67 FFDF          	movff	3943,indf2	;volatile
  3290                           
  3291                           ;mcc_generated_files/ecan.c: 264:         tempCanMsg->frame.data2 = RXB0D2;
  3292  00031E  EE20 F008          	lfsr	2,8
  3293  000322  5014               	movf	CAN_receive@tempCanMsg,w,c
  3294  000324  26D9               	addwf	fsr2l,f,c
  3295  000326  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3296  000328  22DA               	addwfc	fsr2h,f,c
  3297  00032A  CF68 FFDF          	movff	3944,indf2	;volatile
  3298                           
  3299                           ;mcc_generated_files/ecan.c: 265:         tempCanMsg->frame.data3 = RXB0D3;
  3300  00032E  EE20 F009          	lfsr	2,9
  3301  000332  5014               	movf	CAN_receive@tempCanMsg,w,c
  3302  000334  26D9               	addwf	fsr2l,f,c
  3303  000336  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3304  000338  22DA               	addwfc	fsr2h,f,c
  3305  00033A  CF69 FFDF          	movff	3945,indf2	;volatile
  3306                           
  3307                           ;mcc_generated_files/ecan.c: 266:         tempCanMsg->frame.data4 = RXB0D4;
  3308  00033E  EE20 F00A          	lfsr	2,10
  3309  000342  5014               	movf	CAN_receive@tempCanMsg,w,c
  3310  000344  26D9               	addwf	fsr2l,f,c
  3311  000346  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3312  000348  22DA               	addwfc	fsr2h,f,c
  3313  00034A  CF6A FFDF          	movff	3946,indf2	;volatile
  3314                           
  3315                           ;mcc_generated_files/ecan.c: 267:         tempCanMsg->frame.data5 = RXB0D5;
  3316  00034E  EE20 F00B          	lfsr	2,11
  3317  000352  5014               	movf	CAN_receive@tempCanMsg,w,c
  3318  000354  26D9               	addwf	fsr2l,f,c
  3319  000356  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3320  000358  22DA               	addwfc	fsr2h,f,c
  3321  00035A  CF6B FFDF          	movff	3947,indf2	;volatile
  3322                           
  3323                           ;mcc_generated_files/ecan.c: 268:         tempCanMsg->frame.data6 = RXB0D6;
  3324  00035E  EE20 F00C          	lfsr	2,12
  3325  000362  5014               	movf	CAN_receive@tempCanMsg,w,c
  3326  000364  26D9               	addwf	fsr2l,f,c
  3327  000366  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3328  000368  22DA               	addwfc	fsr2h,f,c
  3329  00036A  CF6C FFDF          	movff	3948,indf2	;volatile
  3330                           
  3331                           ;mcc_generated_files/ecan.c: 269:         tempCanMsg->frame.data7 = RXB0D7;
  3332  00036E  EE20 F00D          	lfsr	2,13
  3333  000372  5014               	movf	CAN_receive@tempCanMsg,w,c
  3334  000374  26D9               	addwf	fsr2l,f,c
  3335  000376  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3336  000378  22DA               	addwfc	fsr2h,f,c
  3337  00037A  CF6D FFDF          	movff	3949,indf2	;volatile
  3338                           
  3339                           ;mcc_generated_files/ecan.c: 270:         RXB0CONbits.RXFUL = 0;
  3340  00037E  9E60               	bcf	3936,7,c	;volatile
  3341  000380                     l2994:
  3342                           
  3343                           ;mcc_generated_files/ecan.c: 271:         returnValue = 1;
  3344  000380  0E01               	movlw	1
  3345  000382  6E16               	movwf	CAN_receive@returnValue,c
  3346                           
  3347                           ;mcc_generated_files/ecan.c: 272:     }
  3348  000384  D087               	goto	l3028
  3349  000386                     l256:
  3350  000386  010F               	movlb	15	; () banked
  3351  000388  AF30               	btfss	48,7,b	;volatile
  3352  00038A  D084               	goto	l3028
  3353                           
  3354                           ; BSR set to: 15
  3355                           ;mcc_generated_files/ecan.c: 274:     {;mcc_generated_files/ecan.c: 275:         if ((RX
      +                          B1SIDL & 0x08) == 0x08)
  3356  00038C  A732               	btfss	50,3,b	;volatile
  3357  00038E  D01E               	goto	l3002
  3358                           
  3359                           ; BSR set to: 15
  3360                           ;mcc_generated_files/ecan.c: 276:         {;mcc_generated_files/ecan.c: 278:            
      +                           tempCanMsg->frame.idType = (uint8_t) 2;
  3361  000390  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3362  000394  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3363  000398  0E02               	movlw	2
  3364  00039A  6EDF               	movwf	indf2,c
  3365                           
  3366                           ; BSR set to: 15
  3367                           ;mcc_generated_files/ecan.c: 279:             tempCanMsg->frame.id = convertReg2Extended
      +                          CANid(RXB1EIDH, RXB1EIDL, RXB1SIDH, RXB1SIDL);
  3368  00039C  CF34 F001          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  3369  0003A0  CF31 F002          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  3370  0003A4  CF32 F003          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  3371  0003A8  5133               	movf	51,w,b	;volatile
  3372  0003AA  EC48  F003         	call	_convertReg2ExtendedCANid
  3373  0003AE  EE20 F001          	lfsr	2,1
  3374  0003B2  5014               	movf	CAN_receive@tempCanMsg,w,c
  3375  0003B4  26D9               	addwf	fsr2l,f,c
  3376  0003B6  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3377  0003B8  22DA               	addwfc	fsr2h,f,c
  3378  0003BA  C001  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  3379  0003BE  C002  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  3380  0003C2  C003  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  3381  0003C6  C004  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  3382                           
  3383                           ;mcc_generated_files/ecan.c: 280:         }
  3384  0003CA  D019               	goto	l3006
  3385  0003CC                     l3002:
  3386                           
  3387                           ; BSR set to: 15
  3388                           ;mcc_generated_files/ecan.c: 282:         {;mcc_generated_files/ecan.c: 284:            
      +                           tempCanMsg->frame.idType = (uint8_t) 1;
  3389  0003CC  C014  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  3390  0003D0  C015  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  3391  0003D4  0E01               	movlw	1
  3392  0003D6  6EDF               	movwf	indf2,c
  3393                           
  3394                           ; BSR set to: 15
  3395                           ;mcc_generated_files/ecan.c: 285:             tempCanMsg->frame.id = convertReg2Standard
      +                          CANid(RXB1SIDH, RXB1SIDL);
  3396  0003D8  CF32 F001          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  3397  0003DC  5131               	movf	49,w,b	;volatile
  3398  0003DE  EC65  F006         	call	_convertReg2StandardCANid
  3399  0003E2  EE20 F001          	lfsr	2,1
  3400  0003E6  5014               	movf	CAN_receive@tempCanMsg,w,c
  3401  0003E8  26D9               	addwf	fsr2l,f,c
  3402  0003EA  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3403  0003EC  22DA               	addwfc	fsr2h,f,c
  3404  0003EE  C001  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  3405  0003F2  C002  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  3406  0003F6  C003  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  3407  0003FA  C004  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  3408  0003FE                     l3006:
  3409                           
  3410                           ;mcc_generated_files/ecan.c: 288:         tempCanMsg->frame.dlc = RXB1DLC;
  3411  0003FE  EE20 F005          	lfsr	2,5
  3412  000402  5014               	movf	CAN_receive@tempCanMsg,w,c
  3413  000404  26D9               	addwf	fsr2l,f,c
  3414  000406  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3415  000408  22DA               	addwfc	fsr2h,f,c
  3416  00040A  CF35 FFDF          	movff	3893,indf2	;volatile
  3417                           
  3418                           ;mcc_generated_files/ecan.c: 289:         tempCanMsg->frame.data0 = RXB1D0;
  3419  00040E  EE20 F006          	lfsr	2,6
  3420  000412  5014               	movf	CAN_receive@tempCanMsg,w,c
  3421  000414  26D9               	addwf	fsr2l,f,c
  3422  000416  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3423  000418  22DA               	addwfc	fsr2h,f,c
  3424  00041A  CF36 FFDF          	movff	3894,indf2	;volatile
  3425                           
  3426                           ;mcc_generated_files/ecan.c: 290:         tempCanMsg->frame.data1 = RXB1D1;
  3427  00041E  EE20 F007          	lfsr	2,7
  3428  000422  5014               	movf	CAN_receive@tempCanMsg,w,c
  3429  000424  26D9               	addwf	fsr2l,f,c
  3430  000426  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3431  000428  22DA               	addwfc	fsr2h,f,c
  3432  00042A  CF37 FFDF          	movff	3895,indf2	;volatile
  3433                           
  3434                           ;mcc_generated_files/ecan.c: 291:         tempCanMsg->frame.data2 = RXB1D2;
  3435  00042E  EE20 F008          	lfsr	2,8
  3436  000432  5014               	movf	CAN_receive@tempCanMsg,w,c
  3437  000434  26D9               	addwf	fsr2l,f,c
  3438  000436  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3439  000438  22DA               	addwfc	fsr2h,f,c
  3440  00043A  CF38 FFDF          	movff	3896,indf2	;volatile
  3441                           
  3442                           ;mcc_generated_files/ecan.c: 292:         tempCanMsg->frame.data3 = RXB1D3;
  3443  00043E  EE20 F009          	lfsr	2,9
  3444  000442  5014               	movf	CAN_receive@tempCanMsg,w,c
  3445  000444  26D9               	addwf	fsr2l,f,c
  3446  000446  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3447  000448  22DA               	addwfc	fsr2h,f,c
  3448  00044A  CF39 FFDF          	movff	3897,indf2	;volatile
  3449                           
  3450                           ;mcc_generated_files/ecan.c: 293:         tempCanMsg->frame.data4 = RXB1D4;
  3451  00044E  EE20 F00A          	lfsr	2,10
  3452  000452  5014               	movf	CAN_receive@tempCanMsg,w,c
  3453  000454  26D9               	addwf	fsr2l,f,c
  3454  000456  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3455  000458  22DA               	addwfc	fsr2h,f,c
  3456  00045A  CF3A FFDF          	movff	3898,indf2	;volatile
  3457                           
  3458                           ;mcc_generated_files/ecan.c: 294:         tempCanMsg->frame.data5 = RXB1D5;
  3459  00045E  EE20 F00B          	lfsr	2,11
  3460  000462  5014               	movf	CAN_receive@tempCanMsg,w,c
  3461  000464  26D9               	addwf	fsr2l,f,c
  3462  000466  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3463  000468  22DA               	addwfc	fsr2h,f,c
  3464  00046A  CF3B FFDF          	movff	3899,indf2	;volatile
  3465                           
  3466                           ;mcc_generated_files/ecan.c: 295:         tempCanMsg->frame.data6 = RXB1D6;
  3467  00046E  EE20 F00C          	lfsr	2,12
  3468  000472  5014               	movf	CAN_receive@tempCanMsg,w,c
  3469  000474  26D9               	addwf	fsr2l,f,c
  3470  000476  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3471  000478  22DA               	addwfc	fsr2h,f,c
  3472  00047A  CF3C FFDF          	movff	3900,indf2	;volatile
  3473                           
  3474                           ;mcc_generated_files/ecan.c: 296:         tempCanMsg->frame.data7 = RXB1D7;
  3475  00047E  EE20 F00D          	lfsr	2,13
  3476  000482  5014               	movf	CAN_receive@tempCanMsg,w,c
  3477  000484  26D9               	addwf	fsr2l,f,c
  3478  000486  5015               	movf	CAN_receive@tempCanMsg+1,w,c
  3479  000488  22DA               	addwfc	fsr2h,f,c
  3480  00048A  CF3D FFDF          	movff	3901,indf2	;volatile
  3481                           
  3482                           ;mcc_generated_files/ecan.c: 297:         RXB1CONbits.RXFUL = 0;
  3483  00048E  010F               	movlb	15	; () banked
  3484  000490  9F30               	bcf	48,7,b	;volatile
  3485  000492  D776               	goto	l2994
  3486  000494                     l3028:
  3487                           
  3488                           ;mcc_generated_files/ecan.c: 300:     return (returnValue);
  3489  000494  5016               	movf	CAN_receive@returnValue,w,c
  3490  000496  0012               	return		;funcret
  3491  000498                     __end_of_CAN_receive:
  3492                           	opt callstack 0
  3493                           
  3494 ;; *************** function _convertReg2StandardCANid *****************
  3495 ;; Defined at:
  3496 ;;		line 387 in file "mcc_generated_files/ecan.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  tempRXBn_SID    1    wreg     unsigned char 
  3499 ;;  tempRXBn_SID    1    0[COMRAM] unsigned char 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  tempRXBn_SID    1    6[COMRAM] unsigned char 
  3502 ;;  ConvertedID     4   11[COMRAM] unsigned long 
  3503 ;;  returnValue     4    7[COMRAM] unsigned long 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  4    0[COMRAM] unsigned long 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3513 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3514 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3515 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3516 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3517 ;;Total ram usage:       15 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    1
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_CAN_receive
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text19
  3528  000CCA                     __ptext19:
  3529                           	opt callstack 0
  3530  000CCA                     _convertReg2StandardCANid:
  3531                           	opt callstack 28
  3532                           
  3533                           ;incstack = 0
  3534                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  3535  000CCA  6E07               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
  3536                           
  3537                           ;mcc_generated_files/ecan.c: 390:     uint32_t ConvertedID;;mcc_generated_files/ecan.c: 
      +                          394:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  3538  000CCC  5007               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
  3539  000CCE  6E05               	movwf	??_convertReg2StandardCANid& (0+255),c
  3540  000CD0  6A06               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
  3541  000CD2  90D8               	bcf	status,0,c
  3542  000CD4  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3543  000CD6  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3544  000CD8  90D8               	bcf	status,0,c
  3545  000CDA  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3546  000CDC  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3547  000CDE  90D8               	bcf	status,0,c
  3548  000CE0  3605               	rlcf	??_convertReg2StandardCANid,f,c
  3549  000CE2  3606               	rlcf	??_convertReg2StandardCANid+1,f,c
  3550  000CE4  C005  F00C         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  3551  000CE8  C006  F00D         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  3552  000CEC  0E00               	movlw	0
  3553  000CEE  BE0D               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
  3554  000CF0  0EFF               	movlw	-1
  3555  000CF2  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  3556  000CF4  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  3557                           
  3558                           ;mcc_generated_files/ecan.c: 395:     ConvertedID = ConvertedID + (uint32_t)(tempRXBn_SI
      +                          DL >> 5);
  3559  000CF6  C001  F005         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  3560  000CFA  0E05               	movlw	5
  3561  000CFC  6E06               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
  3562  000CFE                     u1185:
  3563  000CFE  90D8               	bcf	status,0,c
  3564  000D00  3205               	rrcf	??_convertReg2StandardCANid,f,c
  3565  000D02  2E06               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
  3566  000D04  D7FC               	goto	u1185
  3567  000D06  5005               	movf	??_convertReg2StandardCANid,w,c
  3568  000D08  240C               	addwf	convertReg2StandardCANid@ConvertedID,w,c
  3569  000D0A  6E0C               	movwf	convertReg2StandardCANid@ConvertedID,c
  3570  000D0C  0E00               	movlw	0
  3571  000D0E  200D               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
  3572  000D10  6E0D               	movwf	convertReg2StandardCANid@ConvertedID+1,c
  3573  000D12  0E00               	movlw	0
  3574  000D14  200E               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
  3575  000D16  6E0E               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  3576  000D18  0E00               	movlw	0
  3577  000D1A  200F               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
  3578  000D1C  6E0F               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  3579                           
  3580                           ;mcc_generated_files/ecan.c: 396:     returnValue = ConvertedID;
  3581  000D1E  C00C  F008         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  3582  000D22  C00D  F009         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  3583  000D26  C00E  F00A         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  3584  000D2A  C00F  F00B         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  3585                           
  3586                           ;mcc_generated_files/ecan.c: 397:     return (returnValue);
  3587  000D2E  C008  F001         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  3588  000D32  C009  F002         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  3589  000D36  C00A  F003         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  3590  000D3A  C00B  F004         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  3591  000D3E  0012               	return		;funcret
  3592  000D40                     __end_of_convertReg2StandardCANid:
  3593                           	opt callstack 0
  3594                           
  3595 ;; *************** function _convertReg2ExtendedCANid *****************
  3596 ;; Defined at:
  3597 ;;		line 366 in file "mcc_generated_files/ecan.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  tempRXBn_EID    1    wreg     unsigned char 
  3600 ;;  tempRXBn_EID    1    0[COMRAM] unsigned char 
  3601 ;;  tempRXBn_SID    1    1[COMRAM] unsigned char 
  3602 ;;  tempRXBn_SID    1    2[COMRAM] unsigned char 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  tempRXBn_EID    1    8[COMRAM] unsigned char 
  3605 ;;  ConvertedID     4   15[COMRAM] unsigned long 
  3606 ;;  returnValue     4    9[COMRAM] unsigned long 
  3607 ;;  CAN_standard    1   14[COMRAM] unsigned char 
  3608 ;;  CAN_standard    1   13[COMRAM] unsigned char 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  4    0[COMRAM] unsigned long 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2, status,0
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3619 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3620 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3621 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3622 ;;Total ram usage:       19 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:    1
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_CAN_receive
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text20
  3633  000690                     __ptext20:
  3634                           	opt callstack 0
  3635  000690                     _convertReg2ExtendedCANid:
  3636                           	opt callstack 28
  3637                           
  3638                           ;incstack = 0
  3639                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  3640  000690  6E09               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
  3641                           
  3642                           ;mcc_generated_files/ecan.c: 369:     uint32_t ConvertedID = 0;
  3643  000692  0E00               	movlw	0
  3644  000694  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3645  000696  0E00               	movlw	0
  3646  000698  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3647  00069A  0E00               	movlw	0
  3648  00069C  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3649  00069E  0E00               	movlw	0
  3650  0006A0  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3651                           
  3652                           ;mcc_generated_files/ecan.c: 370:     uint8_t CAN_standardLo_ID_lo2bits;;mcc_generated_f
      +                          iles/ecan.c: 371:     uint8_t CAN_standardLo_ID_hi3bits;;mcc_generated_files/ecan.c: 373
      +                          :     CAN_standardLo_ID_lo2bits = (uint8_t)(tempRXBn_SIDL & 0x03);
  3653  0006A2  5003               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  3654  0006A4  0B03               	andlw	3
  3655  0006A6  6E0E               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
  3656                           
  3657                           ;mcc_generated_files/ecan.c: 374:     CAN_standardLo_ID_hi3bits = (uint8_t)(tempRXBn_SID
      +                          L >> 5);
  3658  0006A8  3803               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  3659  0006AA  42E8               	rrncf	wreg,f,c
  3660  0006AC  0B07               	andlw	7
  3661  0006AE  6E0F               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
  3662                           
  3663                           ;mcc_generated_files/ecan.c: 375:     ConvertedID = (uint32_t)(tempRXBn_SIDH << 3);
  3664  0006B0  5002               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
  3665  0006B2  6E05               	movwf	??_convertReg2ExtendedCANid& (0+255),c
  3666  0006B4  6A06               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
  3667  0006B6  90D8               	bcf	status,0,c
  3668  0006B8  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3669  0006BA  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3670  0006BC  90D8               	bcf	status,0,c
  3671  0006BE  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3672  0006C0  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3673  0006C2  90D8               	bcf	status,0,c
  3674  0006C4  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3675  0006C6  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3676  0006C8  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3677  0006CC  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3678  0006D0  0E00               	movlw	0
  3679  0006D2  BE11               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
  3680  0006D4  0EFF               	movlw	-1
  3681  0006D6  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3682  0006D8  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3683                           
  3684                           ;mcc_generated_files/ecan.c: 376:     ConvertedID = ConvertedID + CAN_standardLo_ID_hi3b
      +                          its;
  3685  0006DA  500F               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
  3686  0006DC  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3687  0006DE  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3688  0006E0  0E00               	movlw	0
  3689  0006E2  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3690  0006E4  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3691  0006E6  0E00               	movlw	0
  3692  0006E8  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3693  0006EA  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3694  0006EC  0E00               	movlw	0
  3695  0006EE  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3696  0006F0  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3697                           
  3698                           ;mcc_generated_files/ecan.c: 377:     ConvertedID = (ConvertedID << 2);
  3699  0006F2  C010  F005         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  3700  0006F6  C011  F006         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  3701  0006FA  C012  F007         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  3702  0006FE  C013  F008         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  3703  000702  0E02               	movlw	2
  3704  000704                     u1175:
  3705  000704  90D8               	bcf	status,0,c
  3706  000706  3605               	rlcf	??_convertReg2ExtendedCANid,f,c
  3707  000708  3606               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  3708  00070A  3607               	rlcf	??_convertReg2ExtendedCANid+2,f,c
  3709  00070C  3608               	rlcf	??_convertReg2ExtendedCANid+3,f,c
  3710  00070E  2EE8               	decfsz	wreg,f,c
  3711  000710  D7F9               	goto	u1175
  3712  000712  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3713  000716  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3714  00071A  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3715  00071E  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3716                           
  3717                           ;mcc_generated_files/ecan.c: 378:     ConvertedID = ConvertedID + CAN_standardLo_ID_lo2b
      +                          its;
  3718  000722  500E               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
  3719  000724  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3720  000726  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3721  000728  0E00               	movlw	0
  3722  00072A  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3723  00072C  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3724  00072E  0E00               	movlw	0
  3725  000730  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3726  000732  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3727  000734  0E00               	movlw	0
  3728  000736  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3729  000738  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3730                           
  3731                           ;mcc_generated_files/ecan.c: 379:     ConvertedID = (ConvertedID << 8);
  3732  00073A  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  3733  00073E  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  3734  000742  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  3735  000746  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  3736  000748  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3737  00074C  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3738  000750  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3739  000754  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3740                           
  3741                           ;mcc_generated_files/ecan.c: 380:     ConvertedID = ConvertedID + tempRXBn_EIDH;
  3742  000758  5009               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
  3743  00075A  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3744  00075C  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3745  00075E  0E00               	movlw	0
  3746  000760  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3747  000762  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3748  000764  0E00               	movlw	0
  3749  000766  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3750  000768  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3751  00076A  0E00               	movlw	0
  3752  00076C  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3753  00076E  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3754                           
  3755                           ;mcc_generated_files/ecan.c: 381:     ConvertedID = (ConvertedID << 8);
  3756  000770  C010  F006         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  3757  000774  C011  F007         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  3758  000778  C012  F008         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  3759  00077C  6A05               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  3760  00077E  C005  F010         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  3761  000782  C006  F011         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  3762  000786  C007  F012         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  3763  00078A  C008  F013         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  3764                           
  3765                           ;mcc_generated_files/ecan.c: 382:     ConvertedID = ConvertedID + tempRXBn_EIDL;
  3766  00078E  5001               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
  3767  000790  2410               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  3768  000792  6E10               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  3769  000794  0E00               	movlw	0
  3770  000796  2011               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  3771  000798  6E11               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  3772  00079A  0E00               	movlw	0
  3773  00079C  2012               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  3774  00079E  6E12               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  3775  0007A0  0E00               	movlw	0
  3776  0007A2  2013               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  3777  0007A4  6E13               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  3778                           
  3779                           ;mcc_generated_files/ecan.c: 383:     returnValue = ConvertedID;
  3780  0007A6  C010  F00A         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  3781  0007AA  C011  F00B         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  3782  0007AE  C012  F00C         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  3783  0007B2  C013  F00D         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  3784                           
  3785                           ;mcc_generated_files/ecan.c: 384:     return (returnValue);
  3786  0007B6  C00A  F001         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  3787  0007BA  C00B  F002         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  3788  0007BE  C00C  F003         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  3789  0007C2  C00D  F004         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  3790  0007C6  0012               	return		;funcret
  3791  0007C8                     __end_of_convertReg2ExtendedCANid:
  3792                           	opt callstack 0
  3793                           
  3794 ;; *************** function _InterTimer *****************
  3795 ;; Defined at:
  3796 ;;		line 7 in file "servo.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		Interrupt level 2
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	intcode
  3824  000008                     __pintcode:
  3825                           	opt callstack 0
  3826  000008                     _InterTimer:
  3827                           	opt callstack 25
  3828                           
  3829                           ;incstack = 0
  3830  000008  825A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3831                           
  3832                           ;servo.c: 8:     if(PIR1bits.TMR1IF == 1){
  3833  00000A  A09E               	btfss	3998,0,c	;volatile
  3834  00000C  D002               	goto	i2l861
  3835                           
  3836                           ;servo.c: 9:         PORTCbits.RC1 = 0;
  3837  00000E  9282               	bcf	3970,1,c	;volatile
  3838                           
  3839                           ;servo.c: 10:         PIR1bits.TMR1IF = 0;
  3840  000010  909E               	bcf	3998,0,c	;volatile
  3841  000012                     i2l861:
  3842                           
  3843                           ;servo.c: 12:     if(PIR2bits.TMR3IF == 1){
  3844  000012  A2A1               	btfss	4001,1,c	;volatile
  3845  000014  D00B               	goto	i2l863
  3846                           
  3847                           ;servo.c: 13:         PORTCbits.RC1 = 1;
  3848  000016  8282               	bsf	3970,1,c	;volatile
  3849                           
  3850                           ;servo.c: 14:         TMR3H = (55536 >> 8);
  3851  000018  0ED8               	movlw	216
  3852  00001A  6EB3               	movwf	4019,c	;volatile
  3853                           
  3854                           ;servo.c: 15:         TMR3L = (55536 & 0x00ff);
  3855  00001C  0EF0               	movlw	240
  3856  00001E  6EB2               	movwf	4018,c	;volatile
  3857                           
  3858                           ;servo.c: 16:         TMR1H = (T1time >> 8);
  3859  000020  5059               	movf	_T1time+1,w,c
  3860  000022  6ECF               	movwf	4047,c	;volatile
  3861                           
  3862                           ;servo.c: 17:         TMR1L = (T1time & 0x00ff);
  3863  000024  C058  FFCE         	movff	_T1time,4046	;volatile
  3864                           
  3865                           ;servo.c: 18:         PIR1bits.TMR1IF = 0;
  3866  000028  909E               	bcf	3998,0,c	;volatile
  3867                           
  3868                           ;servo.c: 19:         PIR2bits.TMR3IF = 0;
  3869  00002A  92A1               	bcf	4001,1,c	;volatile
  3870  00002C                     i2l863:
  3871  00002C  925A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3872  00002E  0011               	retfie		f
  3873  000030                     __end_of_InterTimer:
  3874                           	opt callstack 0
  3875  0000                     
  3876                           	psect	rparam
  3877  0000                     
  3878                           	psect	temp
  3879  00005A                     btemp:
  3880                           	opt callstack 0
  3881  00005A                     	ds	1
  3882  0000                     int$flags	set	btemp
  3883  0000                     wtemp8	set	btemp+1
  3884  0000                     ttemp5	set	btemp+1
  3885  0000                     ttemp6	set	btemp+4
  3886  0000                     ttemp7	set	btemp+8
  3887                           tosu	equ	0xFFF
  3888                           tosh	equ	0xFFE
  3889                           tosl	equ	0xFFD
  3890                           stkptr	equ	0xFFC
  3891                           pclatu	equ	0xFFB
  3892                           pclath	equ	0xFFA
  3893                           pcl	equ	0xFF9
  3894                           tblptru	equ	0xFF8
  3895                           tblptrh	equ	0xFF7
  3896                           tblptrl	equ	0xFF6
  3897                           tablat	equ	0xFF5
  3898                           prodh	equ	0xFF4
  3899                           prodl	equ	0xFF3
  3900                           indf0	equ	0xFEF
  3901                           postinc0	equ	0xFEE
  3902                           postdec0	equ	0xFED
  3903                           preinc0	equ	0xFEC
  3904                           plusw0	equ	0xFEB
  3905                           fsr0h	equ	0xFEA
  3906                           fsr0l	equ	0xFE9
  3907                           wreg	equ	0xFE8
  3908                           indf1	equ	0xFE7
  3909                           postinc1	equ	0xFE6
  3910                           postdec1	equ	0xFE5
  3911                           preinc1	equ	0xFE4
  3912                           plusw1	equ	0xFE3
  3913                           fsr1h	equ	0xFE2
  3914                           fsr1l	equ	0xFE1
  3915                           bsr	equ	0xFE0
  3916                           indf2	equ	0xFDF
  3917                           postinc2	equ	0xFDE
  3918                           postdec2	equ	0xFDD
  3919                           preinc2	equ	0xFDC
  3920                           plusw2	equ	0xFDB
  3921                           fsr2h	equ	0xFDA
  3922                           fsr2l	equ	0xFD9
  3923                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         45
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      93
    BANK0           160      0      14
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    L6470_change@dt	PTR unsigned char  size(2) Largest target is 8
		 -> data(COMRAM[8]), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> rxMessage(BANK0[14]), 


Critical Paths under _main in COMRAM

    _main->_can_recieve
    _can_recieve->_ServoOut
    _ServoOut->___aldiv
    ___aldiv->___lmul
    _L6470_command->_L6470_Move
    _L6470_command->_L6470_Run
    _L6470_Stop->_SPI_transfer
    _L6470_Run->_CMD_Send
    _L6470_Move->_CMD_Send
    _L6470_CMD->_SPI_transfer
    _L6470_Init->_L6470_GetRegister
    _L6470_GetRegister->_SPI_transfer
    _CMD_Send->_SPI_transfer
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _InterTimer in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterTimer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterTimer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterTimer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterTimer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterTimer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterTimer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterTimer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterTimer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterTimer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterTimer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterTimer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterTimer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterTimer in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterTimer in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterTimer in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   18665
                                             46 COMRAM     6     6      0
                        _CAN_receive
                    _ECAN_Initialize
                          _L6470_CMD
                         _L6470_Init
                          _L6470_Run
                         _L6470_Stop
                           _SPI_Init
                           _ServoOut
                               _Wait
                        _can_recieve
 ---------------------------------------------------------------------------------
 (1) _can_recieve                                         14     0     14    8390
                                             32 COMRAM    14     0     14
                      _L6470_command
                           _ServoOut
 ---------------------------------------------------------------------------------
 (2) _ServoOut                                             6     4      2    1095
                                             26 COMRAM     6     4      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _L6470_command                                        2     2      0    6990
                                             23 COMRAM     2     2      0
                          _L6470_CMD
                  _L6470_GetRegister
                         _L6470_Move
                          _L6470_Run
                         _L6470_Stop
                       _L6470_change
 ---------------------------------------------------------------------------------
 (3) _L6470_change                                        15    11      4     419
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (3) _L6470_Stop                                           6     4      2     448
                                              1 COMRAM     6     4      2
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _L6470_Run                                            5     1      4    2823
                                             18 COMRAM     5     1      4
                           _CMD_Send
                       _L6470_change (ARG)
 ---------------------------------------------------------------------------------
 (3) _L6470_Move                                           5     1      4    2519
                                             18 COMRAM     5     1      4
                           _CMD_Send
                       _L6470_change (ARG)
 ---------------------------------------------------------------------------------
 (3) _L6470_CMD                                            2     0      2     348
                                              1 COMRAM     2     0      2
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (1) _Wait                                                 5     3      2     426
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             6     3      3     377
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (1) _L6470_Init                                          13     9      4    2997
                                             20 COMRAM    13     9      4
                           _CMD_Send
                  _L6470_GetRegister
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (3) _L6470_GetRegister                                   19    15      4     433
                                              1 COMRAM    19    15      4
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _CMD_Send                                            17    11      6    2399
                                              1 COMRAM    17    11      6
                       _SPI_transfer
 ---------------------------------------------------------------------------------
 (4) _SPI_transfer                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ECAN_Initialize                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    1760
                                             19 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     266
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4     821
                                              0 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _ECAN_Initialize
   _L6470_CMD
     _SPI_transfer
   _L6470_Init
     _CMD_Send
       _SPI_transfer
     _L6470_GetRegister
       _SPI_transfer
     _SPI_transfer
   _L6470_Run
     _CMD_Send
       _SPI_transfer
     _L6470_change (ARG)
   _L6470_Stop
     _SPI_transfer
   _SPI_Init
   _ServoOut
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _Wait
   _can_recieve
     _L6470_command
       _L6470_CMD
         _SPI_transfer
       _L6470_GetRegister
         _SPI_transfer
       _L6470_Move
         _CMD_Send
           _SPI_transfer
         _L6470_change (ARG)
       _L6470_Run
         _CMD_Send
           _SPI_transfer
         _L6470_change (ARG)
       _L6470_Stop
         _SPI_transfer
       _L6470_change
     _ServoOut
       ___aldiv
         ___lmul (ARG)
       ___lmul

 _InterTimer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       E       5        8.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      5D       1       98.9%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6B       6        0.0%
DATA                 0      0      6B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 17 23:51:37 2019

                                      _SSPSTATbits 000FC7                                    SPI_Init@divider 0001  
                                 L6470_CMD@command 0002                           __size_of_ECAN_Initialize 00AE  
                                      __CFG_BORV$3 000000                                       __CFG_CP0$OFF 000000  
                                     __CFG_CP1$OFF 000000                                       __CFG_CP2$OFF 000000  
                                     __CFG_CP3$OFF 000000                                                l256 0386  
                                              l424 04A0                                                l417 0AD2  
                                              l380 014C                                                l385 0172  
                                              l386 019C                                                l397 0F20  
                                              l792 0F4C                                                l768 0DBA  
                                     __CFG_CPB$OFF 000000                                       __CFG_CPD$OFF 000000  
                                              u990 0EE2                                L6470_Init@step_mode 001B  
                                              _pos 003F                                                prod 000FF3  
                                              wreg 000FE8                         ??_convertReg2StandardCANid 0005  
                            __size_of_SPI_transfer 0010                                               l3002 03CC  
                                             l3006 03FE                                               l3200 013E  
                                             l3122 0F0E                                               l3028 0494  
                                             l3046 0DD0                                               l3214 0190  
                                             l3206 0156                                               l3136 0E24  
                                             l3170 00BC                                               l2700 0AB2  
                                             l3172 00D2                                               l2710 0ADC  
                                             l2720 0AF2                                               l3184 00FE  
                                             l2714 0AE6                                               l2802 0D50  
                                             l3194 0116                                               l2726 0ED6  
                                             l2910 07D6                                               l2830 0930  
                                             l2806 0D64                                               l2760 09BA  
                                             l2736 0E7E                                               l2920 0860  
                                             l2912 0802                                               l2832 093C  
                                             l2824 090E                                               l2762 09C2  
                                             l2914 082E                                               l2930 089E  
                                             l2850 0994                                               l2842 0970  
                                             l2818 08F6                                               l2780 0A3E  
                                             l2916 083C                                               l2908 07CA  
                                             l2694 0A70                                               l2926 087E  
                                             l2918 084A                                               l2846 097E  
                                             l2768 09EE                                               l2784 0EA6  
                                             l2792 0C6A                                               l2970 02BC  
                                             l2938 0B1C                                               l2974 02EE  
                                             l2958 0BB8                                               l2798 0CA4  
                                             l2994 0380                                               u1010 0E8A  
                                             u1030 0F3A                                               u1300 04BE  
                                             u1140 0940                                               u1070 0EB2  
                                             u1315 060C                                               u1316 060E  
                                             u1270 0DB4                                               u1175 0704  
                                             u1431 01BA                                               u1185 0CFE  
                                             u1290 0DCA                                               u1527 0F14  
                                             _WPUB 000F5B                                               _Busy 0043  
                                             _Wait 0F04                                               _data 0048  
                                             _main 0034                                               fsr2h 000FDA  
                                             indf2 000FDF                                               fsr1l 000FE1  
                                             fsr2l 000FD9                                               btemp 005A  
                                             prodl 000FF3                                               start 0030  
                                    __CFG_IESO$OFF 000000                                      __CFG_MCLRE$ON 000000  
                                     ___param_bank 000000                                   __end_of_CMD_Send 0B18  
                                __end_of_L6470_CMD 0F46                                  __end_of_L6470_Run 0F04  
                             __size_of_can_recieve 0048                                              ?_Wait 0001  
                                  __end_of___aldiv 09A6                                              ?_main 0001  
                                            _T1CON 000FCD                                              _T3CON 000FB1  
                                            i2l861 0012                                              i2l863 002C  
                                     _SPI_transfer 0F46                                              _TMR1H 000FCF  
                                            _TMR3H 000FB3                                              _TMR1L 000FCE  
                                            _TMR3L 000FB2                                              _PORTA 000F80  
                                            _PORTB 000F81                                              _PORTC 000F82  
                                            _TRISA 000F92                                              _TRISB 000F93  
                                            _TRISC 000F94                                      __CFG_WRT0$OFF 000000  
                                    __CFG_WRT1$OFF 000000                                      __CFG_WRT2$OFF 000000  
                              ___lmul@multiplicand 0005                                      __CFG_WRT3$OFF 000000  
                               L6470_GetRegister@i 000E                                              Wait@i 0004  
                                   __CFG_EBTR0$OFF 000000                                     __CFG_FCMEN$OFF 000000  
                                   __CFG_EBTR1$OFF 000000                              CAN_receive@tempCanMsg 0014  
                                   __CFG_EBTR2$OFF 000000                                     __CFG_EBTR3$OFF 000000  
                                    __CFG_WRTB$OFF 000000                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                                     __CFG_EBTRB$OFF 000000  
                                 __end_of_SPI_Init 0DE0                                              tablat 000FF5  
                                            plusw0 000FEB                                              plusw2 000FDB  
                                            ttemp5 005B                                              ttemp6 005E  
                                            ttemp7 0062                convertReg2ExtendedCANid@ConvertedID 0010  
                                            status 000FD8                                              wtemp8 005B  
                                     ??_L6470_Init 0019                                       ??_L6470_Move 0017  
                                     ??_L6470_Stop 0004                                       SPI_Init@mode 0006  
                                     SPI_Init@stat 0004                                    __initialization 0E28  
                             __size_of_CAN_receive 0224                                       __end_of_Wait 0F2E  
                                     __end_of_main 0274                                             ??_Wait 0003  
                                           ??_main 002F                                         _InterTimer 0008  
                                    __activetblptr 000002                                     __CFG_RETEN$OFF 000000  
                                 __end_of_ServoOut 0C50                                 __end_of_L6470_Init 0690  
                               __end_of_L6470_Move 0ED4                                  ??_ECAN_Initialize 0001  
                               __end_of_L6470_Stop 0EA2                                             _CANCON 000F6F  
                                           _ANCON0 000F5D                                             _ANCON1 000F5C  
                                           _CIOCON 000F70                                    __CFG_BBSIZ$BB2K 000000  
                                           _OSCCON 000FD3                                             _RXB0D0 000F66  
                                           _RXB0D1 000F67                                             _RXB0D2 000F68  
                                           _RXB0D3 000F69                                             _RXB0D4 000F6A  
                                           _RXB1D0 000F36                                             _RXB0D5 000F6B  
                                           _RXB1D1 000F37                                             _RXB0D6 000F6C  
                                           _RXB1D2 000F38                                             _RXB0D7 000F6D  
                                           _RXB1D3 000F39                                             _RXB1D4 000F3A  
                                           _RXB1D5 000F3B                                             _RXB1D6 000F3C  
                                           _RXB1D7 000F3D                                             _TXB0D0 000F26  
                                           _TXB0D1 000F27                                             _TXB0D2 000F28  
                                           _TXB0D3 000F29                                             _TXB0D4 000F2A  
                                           _TXB1D0 000F16                                             _TXB0D5 000F2B  
                                           _TXB1D1 000F17                                             _TXB0D6 000F2C  
                                           _TXB1D2 000F18                                             _TXB0D7 000F2D  
                                           _TXB1D3 000F19                                             _TXB1D4 000F1A  
                                           _TXB2D0 000F06                                             _TXB1D5 000F1B  
                                           _TXB2D1 000F07                                             _TXB1D6 000F1C  
                                           _TXB2D2 000F08                                             _TXB1D7 000F1D  
                                           _TXB2D3 000F09                                             _TXB2D4 000F0A  
                                           _TXB2D5 000F0B                                             _TXB2D6 000F0C  
                                           _TXB2D7 000F0D                                             _SSPADD 000FC8  
                                           _SSPBUF 000FC9                                             _T1time 0058  
                              L6470_GetRegister@dt 000A                                     __CFG_XINST$OFF 000000  
                                           ___lmul 0D40                                          ??___aldiv 0015  
                                   __CFG_STVREN$ON 000000                                             clear_0 0E4E  
                                           clear_1 0E5A                                       __pdataCOMRAM 0050  
                 __end_of_convertReg2StandardCANid 0D40                                             tblptrh 000FF7  
                                           tblptrl 000FF6                                             tblptru 000FF8  
                                        CMD_Send@i 0011                                          ?_CMD_Send 0002  
                                       __accesstop 0060                            __end_of__initialization 0E60  
                         _convertReg2ExtendedCANid 0690                             CAN_receive@returnValue 0016  
                                    ___rparam_used 000001                                     __pcstackCOMRAM 0001  
                                   SPI_transfer@dt 0001                                          ?_SPI_Init 0001  
                         L6470_GetRegister@regadrs 0010                                        ?_InterTimer 0001  
            convertReg2StandardCANid@tempRXBn_SIDH 0007              convertReg2StandardCANid@tempRXBn_SIDL 0001  
                                       ??_CMD_Send 0008                                         __pbssBANK0 0060  
                                  __CFG_PLLCFG$OFF 000000                                         __pnvCOMRAM 0058  
                                        ?_ServoOut 001B                                            ?___lmul 0001  
                            __end_of_L6470_command 08DA                                            _ECANCON 000F72  
                                   ___lmul@product 0009                                            _CANSTAT 000F6E  
                                       ??_SPI_Init 0004                                            _BRGCON1 000E43  
                                          _BRGCON2 000E44                                            _BRGCON3 000E45  
                                        _L6470_CMD 0F2E                                   __CFG_CANMX$PORTB 000000  
                                        _L6470_Run 0ED4                                  _L6470_GetRegister 09A6  
                                          _RXB0DLC 000F65                                            _RXB1DLC 000F35  
                                          _TXB0DLC 000F25                                            _TXB1DLC 000F15  
                                          _TXB2DLC 000F05                                 ?_L6470_GetRegister 0002  
                                          _SSPCON1 000FC6                                            _SSPSTAT 000FC7  
                              ??_L6470_GetRegister 0006                                __size_of_InterTimer 0028  
                             L6470_GetRegister@ans 0011                               L6470_GetRegister@num 0002  
                                  __CFG_PWRTEN$OFF 000000                                            Wait@num 0001  
                                          __Hparam 0000                                            __Lparam 0000  
                __size_of_convertReg2StandardCANid 0076                          ?_convertReg2StandardCANid 0001  
                                       ??_ServoOut 001D                                      ??_can_recieve 002F  
                                          ___aldiv 08DA                                    __size_of___lmul 0056  
                                  _ECAN_Initialize 0B18                                            __pcinit 0E28  
                                          __ramtop 0F00                                            __ptext0 0034  
                                          __ptext1 0DE0                                            __ptext2 0BC6  
                                          __ptext3 0D40                                            __ptext4 08DA  
                                          __ptext5 07C8                                            __ptext6 0C50  
                                          __ptext7 0E6E                                            __ptext8 0ED4  
                                          __ptext9 0EA2                          __end_of_L6470_GetRegister 0A64  
                                        _T1CONbits 000FCD                                         ?_L6470_CMD 0002  
                                        _T3CONbits 000FB1                                         ?_L6470_Run 0013  
                                 ___aldiv@dividend 000D                                  __CFG_MSSPMSK$MSK7 000000  
                                    ?_L6470_change 0001                               end_of_initialization 0E60  
                                    __Lmediumconst 0000                                      ??_CAN_receive 0016  
                                      L6470_Init@i 0020                                         CMD_Send@dt 000C  
                                 ___aldiv@quotient 0017                                            postdec1 000FE5  
                                          postdec2 000FDD                                            postinc0 000FEE  
                                          postinc2 000FDE                                         _servo_Flag 0047  
                                        _PORTAbits 000F80                                          _PORTBbits 000F81  
                                        _PORTCbits 000F82                                __end_of_can_recieve 0E28  
                                 __CFG_FOSC$INTIO2 000000                                     ??_L6470_change 0005  
                                  L6470_change@val 000C                                    L6470_change@num 0003  
                       ??_convertReg2ExtendedCANid 0005                                  __size_of_CMD_Send 00B4  
                             can_recieve@rxMessage 0021                            __end_of_ECAN_Initialize 0BC6  
                              __end_of_CAN_receive 0498                                     __end_of___lmul 0D96  
                                    __pidataCOMRAM 0F56                                       ??_InterTimer 0001  
                       __size_of_L6470_GetRegister 00BE                                        ??_L6470_CMD 0004  
                                __size_of_SPI_Init 004A                                        ??_L6470_Run 0017  
                              start_initialization 0E28                                        SPI_Init@con 0005  
                                      SPI_Init@sdo 0002                convertReg2StandardCANid@returnValue 0008  
                               __end_of_InterTimer 0030                                           ??___lmul 0009  
                                      _can_recieve 0DE0                                  __size_of_ServoOut 008A  
                                 L6470_Init@config 0019                                      ?_SPI_transfer 0001  
                                      __pbssCOMRAM 0031                                        _CAN_receive 0274  
                                 ?_ECAN_Initialize 0001                               __end_of_L6470_change 0CCA  
                                    ServoOut@angle 001B                                          __pintcode 0008  
                                    ServoOut@value 001D                                           ?___aldiv 000D  
                                   L6470_Move@step 0013                                     ??_SPI_transfer 0001  
                                      _COMSTATbits 000F71                                     L6470_Run@speed 0013  
                 __end_of_convertReg2ExtendedCANid 07C8                             __size_of_L6470_command 0112  
                                         _CMD_Send 0A64                                     L6470_Stop@mode 0002  
                                  ___aldiv@divisor 0011                                    ___aldiv@counter 0015  
                                       _L6470_Init 0498                                         _L6470_Move 0EA2  
                                       _L6470_Stop 0E6E                                           _PIE1bits 000F9D  
                                         _PIE2bits 000FA0                                           _PIE5bits 000F76  
                                         _PIR1bits 000F9E                                           _PIR2bits 000FA1  
                                         _PIR5bits 000F77                                          _rxMessage 0060  
                                         _RXB0EIDH 000F63                                           _RXB0EIDL 000F64  
                                         _RXB1EIDH 000F33                                           _RXB1EIDL 000F34  
                                         _RXB0SIDH 000F61                                           _RXB0SIDL 000F62  
                                         _RXB1SIDH 000F31                                           _RXF0EIDH 000EE2  
                                         _RXB1SIDL 000F32                                           _RXF0EIDL 000EE3  
                                         _RXF1EIDH 000EE6                                           _RXF1EIDL 000EE7  
                                         _RXF2EIDH 000EEA                                           _RXF2EIDL 000EEB  
                                         _RXF3EIDH 000EEE                                           _RXF3EIDL 000EEF  
                                         _RXF4EIDH 000EF2                                           _RXF4EIDL 000EF3  
                                         _RXF5EIDH 000EF6                                           _RXF5EIDL 000EF7  
                                         _RXF0SIDH 000EE0                                           _RXF0SIDL 000EE1  
                                         _TXB0EIDH 000F23                                           _RXF1SIDH 000EE4  
                                         _TXB0EIDL 000F24                                           _RXF1SIDL 000EE5  
                                         _TXB1EIDH 000F13                                           _RXF2SIDH 000EE8  
                                         _TXB1EIDL 000F14                                           _RXF2SIDL 000EE9  
                                         _TXB2EIDH 000F03                                           _RXF3SIDH 000EEC  
                                         _TXB2EIDL 000F04                                           _RXF3SIDL 000EED  
                                         _RXF4SIDH 000EF0                                           _RXF4SIDL 000EF1  
                                         _RXF5SIDH 000EF4                                           _RXF5SIDL 000EF5  
                                         _RXM0EIDH 000EFA                                           _RXM0EIDL 000EFB  
                                         _TXB0SIDH 000F21                                           _RXM1EIDH 000EFE  
                                         _TXB0SIDL 000F22                                           _RXM1EIDL 000EFF  
                                         _TXB1SIDH 000F11                                           _TXB1SIDL 000F12  
                                         _TXB2SIDH 000F01                                           _TXB2SIDL 000F02  
                                        _txMessage 0031                                           _RXM0SIDH 000EF8  
                                         _RXM0SIDL 000EF9                                           _RXM1SIDH 000EFC  
                                         _RXM1SIDL 000EFD                                     L6470_change@dt 0001  
                                         _SPI_Init 0D96                                   __CFG_SOSCSEL$DIG 000000  
                                ___lmul@multiplier 0001                                        _INTCON2bits 000FF1  
                                        copy_data0 0E3C                           _convertReg2StandardCANid 0CCA  
            convertReg2ExtendedCANid@tempRXBn_EIDH 0009              convertReg2ExtendedCANid@tempRXBn_EIDL 0001  
            convertReg2ExtendedCANid@tempRXBn_SIDH 0002              convertReg2ExtendedCANid@tempRXBn_SIDL 0003  
                                         __Hrparam 0000                                           __Lrparam 0000  
                               __CFG_BOREN$SBORDIS 000000                                           _ServoOut 0BC6  
                                    _L6470_command 07C8                                   L6470_Stop@F12231 0050  
                                 __size_of___aldiv 00CC  convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 000F  
convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 000E                                      L6470_Init@val 001C  
                                         __ptext10 0F2E                                           __ptext11 0F04  
                                         __ptext20 0690                                           __ptext12 0D96  
                                         __ptext13 0498                                           __ptext14 09A6  
                                         __ptext15 0A64                                           __ptext16 0F46  
                                         __ptext17 0B18                                           __ptext18 0274  
                                         __ptext19 0CCA                                      L6470_Move@dir 0017  
                                    _arm_mode_flag 0045                convertReg2StandardCANid@ConvertedID 000C  
                                    __size_of_Wait 002A                              __size_of_L6470_change 007A  
                                    __size_of_main 0240                                        ?_L6470_Init 0015  
                                      ?_L6470_Move 0013                               __end_of_SPI_transfer 0F56  
                                    L6470_Stop@cmd 0004                                        ?_L6470_Stop 0002  
              convertReg2ExtendedCANid@returnValue 000A                  __size_of_convertReg2ExtendedCANid 0138  
                        ?_convertReg2ExtendedCANid 0001                                     ?_L6470_command 0001  
                                     ?_can_recieve 0021                                           int$flags 005A  
                                    L6470_change@i 000A                                __CFG_INTOSCSEL$HIGH 000000  
                                      _RXB0CONbits 000F60                                        _RXB1CONbits 000F30  
                               __CFG_WDTEN$SWDTDIS 000000                                         _INTCONbits 000FF2  
                                     _L6470_change 0C50                                           intlevel2 0000  
                                     L6470_Run@dir 0017                                        _TXB0CONbits 000F20  
                                     ?_CAN_receive 0014                                        _TXB1CONbits 000F10  
                                      _TXB2CONbits 000F00                                        CMD_Send@cmd 0010  
                                      CMD_Send@val 0002                                        CMD_Send@num 0006  
                               __CFG_WDTPS$1048576 000000                                __size_of_L6470_Init 01F8  
                              __size_of_L6470_Move 0032                                __size_of_L6470_Stop 0034  
                                      _servo_Angle 0054                                       ___aldiv@sign 0016  
                               __size_of_L6470_CMD 0018                                 __size_of_L6470_Run 0030  
                              __CFG_BORPWR$ZPBORMV 000000                                    ??_L6470_command 0018  
